Timestamp,What Course Did You Take?,How hard was this class?,How much time did you spend on average (per week) for this class?,What tips would you give students taking this course?,When did you take this course?,Did You Take a Second Course This Quarter?,What Course Did You Take?,How hard was this class?,How much time did you spend on average (per week) for this class?,What tips would you give students taking this course?,Did You Take a Third Course This Quarter?,What Course Did You Take?,How hard was this class?,How much time did you spend on average (per week) for this class?,What tips would you give students taking this course?
8/18/2015 12:10:52,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"Make sure you do and understand the self-check exercises after the lectures. The solutions are very helpful.

Study the self-check exercises and weekly summary exercises thoroughly and make sure you can do every problem - all quiz and test problems will be variations of these.

Start assignments early and always try to do the extra credit if you have time. The extra credit is usually either something you'll need for the next assignment or something that will make the extra credit for the next assignment easier and you'll want all the points you can get in this  class.",SU 2015,Yes,CS 340 - Introduction to Databases,2,0-5 hours,"Easy class, especially if you've had exposure to SQL before. Project can be time-consuming but isn't overly difficult. It helps to have some experience with HTML and PHP before taking this class.",No,,,,
8/18/2015 13:02:30,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,,SU 2015,Yes,CS 261 - Data Structures,3,6-12 hours,,No,,,,
8/18/2015 13:18:06,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"Do NOT overlook the practice exercises provided with each lecture. If you can understand these without any help, you will be golden. ",SU 2015,No,,,,,,,,,
8/18/2015 14:23:38,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,Brush up on your algebra if you haven't taken a math class in a while.,SU 2015,No,,,,,,,,,
8/18/2015 17:04:36,CS 340 - Introduction to Databases,1,0-5 hours,Good choive for short summer session. Very light workload. Get started on final project early. Prepare to supplement course lectures with material from the web.,SU 2015,Yes,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"Proctored tests are very difficult. Assignments start off easy, but the last few can be very time consuming. Study the weekly self-checks and the summary exercises to do well on the proctored exams.",No,,,,
8/19/2015 13:15:30,CS 161 - Intro to Computer Science I,4,18+ hours,"Ideally come into 161 with prior programming experience.  If not, be sure to do the readings and watch the lectures.  Doing the programming challenges at the end of each chapter in addition to the homework really helps with solidifying the material as well.",SU 2015,No,,,,,,,,,
8/19/2015 21:42:38,CS 261 - Data Structures,3,6-12 hours,"Watch the lectures before doing the worksheets and assignments, often part of the answers will be presented.",SU 2015,No,,,,,,,,,
8/20/2015 7:01:21,CS 161 - Intro to Computer Science I,3,6-12 hours,Don't procrastinate!,FA 2014,Yes,CS 225 - Discrete Structures in Computer Science,3,0-5 hours,Get ready for induction it's probably the most difficult topic in this class. And brush up on algebra it should be second nature.,No,,,,
8/23/2015 17:44:19,CS 161 - Intro to Computer Science I,3,6-12 hours,"My advice would be more relevant for students coming in with programming experience -- don't underestimate the first exam! It sounds silly, but without intending it, I had become really used to letting the compiler fix my errors for me. When it came time to do the test, where no compiler was there to catch my stupid errors for me, I was ill prepared and did much worse than expected.",SU 2015,No,,,,,,,,,
8/23/2015 22:46:17,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,Just do all the work.,SP,No,,,,,,,,,
8/25/2015 18:55:42,CS 161 - Intro to Computer Science I,3,13-18 hours,Get ahead on the readings. Put the time in to understand the basics,SU 2015,No,,,,,,,,,
9/10/2015 13:20:58,CS 352 - Introduction to Usability Engineering,1,13-18 hours,"Keep communication with your group members, even if there are no assignments due in given week. Also, the final (during the summer session) was comprehensive and is mostly written. I would get fluent enough in the material to answers 25+ short-long answers in 110 minutes. It did not feel like enough time! ",SU 2015,Yes,CS 261 - Data Structures,2,13-18 hours,"I would listen to the lectures to understand the content, skim the provided readings (don't waste your time like me) and get another Algorithms/Data Structure book to supplement. Also check out this site... http://visualgo.net/ . The worksheets were 85% helpful for me, a lot of times our group would actually meet in real time through Gchat to do them, it was pretty fun. ",Yes,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,"In the summer session the final was a bit tricky. I went into the final with an 88.5 (I was so proud of my grade). I studied really hard, made a superb cheatsheet and felt pretty confident / ready (just wanted to get it over with) going into the final. The final is rigorous in the sense that there were way too many questions for the time allotted. And, (perhaps I was burned out) the wording of the questions were like riddles(literally contrapostives and vague wording left and right! ). I ended up getting a B- in the class, I am still really proud of my grade! "
9/11/2015 14:48:03,CS 261 - Data Structures,2,6-12 hours,"Have the worksheets out while you watch the lectures and fill them in as you go. Use the group worksheet time to solidify your understanding.

  ",SU 2015,No,,,,,,,,,
10/7/2015 2:47:30,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,Exams are tough - don't underestimate them. Get a calculator that does the conversions for you. ,SU,No,,,,,,,,,
10/10/2015 22:43:33,CS 161 - Intro to Computer Science I,1,6-12 hours,,WI 2015,Yes,CS 225 - Discrete Structures in Computer Science,1,6-12 hours,Practice makes perfect,No,,,,
10/10/2015 22:45:27,CS 162 - Intro to Computer Science II,1,6-12 hours,"Very easy, somewhat similar to CS161",SP 2015,Yes,CS 261 - Data Structures,2,13-18 hours,"Tests are pretty hard, and what ultimately ruined my A.",No,,,,
10/10/2015 22:46:33,CS 271 - Computer Architecture & Assembly Language,2,13-18 hours,,SU 2015 ,Yes,CS 352 - Introduction to Usability Engineering,1,6-12 hours,A good group/group leader makes this class much easier.,No,,,,
11/13/2015 11:57:59,CS 261 - Data Structures,4,13-18 hours,Make sure your algebra is down well. Go through the practice quizzes and study previous semester's homework solutions. Use alternate resources beyond the required reading. ,FA 2015,Yes,CS 161 - Intro to Computer Science I,4,13-18 hours,"The first few weeks start off really easy and then it starts escalating with classes, arrays and pointers. Make sure you get the fundamentals down really well as everything builds upon the previous unit. Take time designing what your code will look like before jumping into the actual coding! ",No,,,,
11/13/2015 19:44:00,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,Study your algebra and get a head start on proofs!,FA 2015,Yes,CS 161 - Intro to Computer Science I,1,6-12 hours,Take an intro to programming class on EdX or Coursera in any language and you'll be set.,No,,,,
11/13/2015 23:42:19,CS 161 - Intro to Computer Science I,3,13-18 hours,,SU 2014,Yes,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,,No,,,,
11/14/2015 4:25:54,CS 340 - Introduction to Databases,2,0-5 hours,The final project is the only real assignment in the course. Everything else is fairly simple. Don't get lulled into a false sense of laziness. ,SU 2015,No,,,,,,,,,
11/14/2015 10:48:39,CS 161 - Intro to Computer Science I,4,6-12 hours,,SP 2014,No,,,,,,,,,
11/14/2015 14:25:27,CS 261 - Data Structures,3,6-12 hours,,SU 2015,Yes,CS 271 - Computer Architecture & Assembly Language,5,13-18 hours,,Yes,CS 352 - Introduction to Usability Engineering,2,6-12 hours,
11/16/2015 12:41:57,CS 325 - Analysis of Algorithms,5,13-18 hours,,FA 2015,Yes,CS 340 - Introduction to Databases,2,0-5 hours,,No,,,,
11/26/2015 18:00:01,CS 161 - Intro to Computer Science I,2,0-5 hours,Pay attention to details.  Grading is done by running scripts.  Points will be lost for simple mistakes like extra spaces etc.,Su,No,,,,,,,,,
11/26/2015 18:02:34,CS 162 - Intro to Computer Science II,2,0-5 hours,"Don't spend too much time trying to figure out what the instructor wants, just do what makes sense and explain it in the reflections document.",FA 2015,Yes,CS 225 - Discrete Structures in Computer Science,3,0-5 hours,"She gives guides, use them.  Many of these questions will be on the tests.",No,,,,
11/26/2015 20:28:43,CS 162 - Intro to Computer Science II,3,0-5 hours,Do NOT wait until the last day to do the labs. Don't get hung up on details just make sure to satisfy the requirements for the assignments. The tests are unproctored but only 15 mins for 20 questions. ,FA 2015,Yes,CS 352 - Introduction to Usability Engineering,2,0-5 hours,This class is super boring and a chore to do the projects/assignments. Just pray you end up with a good leader and group.,No,,,,
11/27/2015 5:48:44,CS 161 - Intro to Computer Science I,3,6-12 hours,"I would say this class is medium difficulty (fairly easy if you have previous programming experience, possibly difficult if you don't).  I don't feel the class is too bad, but there is a lot of info thrown at you, and you need to know a lot.  The projects ramp up in difficulty, with a few easier ones here and there.  If you are having trouble, you really need to start them early as lots of people struggle right up to the end - but you never see many people asking questions earlier in the week.

The first exam probably differs a lot from what people expect from a computer science exam, and a lot of people did poorly (learn how to trace code, learn the unusual cases and what type of errors there are).  Actually messing with the errors the and warnings the book gives might be good practice. The second exam is a bit more conventional.

The professor's communication is decent, but he neglects to fully answer questions sometimes, and frequently revises assignment requirements halfway through (again, get started early).  He is also very inflexible considering this is a course partly aimed at people pursuing a second career.

The book is decent, but has lots of errors.  The course notes are helpful, but also have errors.  The video lectures were practically unwatchable to me (accent, voice, pacing).


",FA 2015,No,,,,,,,,,
11/27/2015 15:16:41,CS 261 - Data Structures,3,6-12 hours,"Do not underestimate the difficulty of the tests. Be prepared to write code, answer multiple choice questions, and take the full amount of time allotted to complete the test. The group work can make or break your understanding of the material, so fingers crossed that your group works well together. ",SP 2015,Yes,CS 290 - Web Development,5,18+ hours,The old version was brutal. Be glad it's been changed. ,No,,,,
11/28/2015 2:46:23,CS 161 - Intro to Computer Science I,3,13-18 hours,"The reading was very helpful and doing all of the exercises in the book can help ensure you're grasping the concepts. Figure out a way to learn pointers and referencing. It can be really tricky for many people. Start working on your programs as early as you can. 

For the exams, don't be fooled by how easy they seem. For the midterm especially people were really in for a shock. Go back over everything and look at it all again, Practice hand tracing! ",FA 2015,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"Make sure you're up on your algebra. Find a good youtube channel to help you through it. The reading and the videos could be confusing or not great for providing an easier way to understand what you're actually meant to be doing. 

Grading on homework seemed haphazard at best. Try to do the example problems in the book while you're reading and as many in the exercise sets as you can. ",No,,,,
12/2/2015 9:56:43,CS 161 - Intro to Computer Science I,4,13-18 hours,Plan to have to practice the material on your own. Each new concept should be practiced thoroughly until you have mastery of it BEFORE attempting the assignments. This will allow you to attack the problem with tools you understand instead of learning as you go. Don't be afraid to break things and then go back a fix it. I restructured my bigger programs a couple times each because they sucked my first go through.,FA 2014,No,,,,,,,,,
12/2/2015 21:04:37,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Practice practice practice! If you aren't good at mathematics, there is no shortcut to get around doing practice problems. The lecture videos are very well done in my opinion, and going back to those notes always helped me. There were always plenty of examples in the book as well.",FA 2015,Yes,CS 162 - Intro to Computer Science II,4,18+ hours,"Work hard, work early! Rooker is a weird guy, things are always vague and confusing. If you're confident in your abilities, starting late can be an advantage because you have the benefit of everyone else clearing up the confusion. But, you need to be confident that you'll finish on time. The group work sucks, and the groups are too large for the amount of work that is given.",No,,,,
12/3/2015 16:06:44,CS 340 - Introduction to Databases,1,0-5 hours,"The project is the biggest part of this class. Start working on it early and submit the sections for feedback from the instructor/TA. There's a bit of connecting the dots from the lectures to assignments and quizzes, so I referenced the book a little and did used Google searches. I had no prior experience with SQL or PHP before the class. The recommended book also provided a good overview of PHP. I mostly used code from the provided example but the book helped me fill in a few gaps to do some extra things.",FA 2015,Yes,CS 290 - Web Development,3,6-12 hours,"If you can find time, create little projects on the side to help reinforce the concepts. From what I hear, it's a lot better than past quarters but there is still a lot of material to cover. Didn't use the book a lot, mostly did searches for online documentation and questions. ",No,,,,
12/8/2015 18:40:58,CS 161 - Intro to Computer Science I,4,18+ hours,"Class was a bit unorganized - lectures didn't align to the reading very well.  If you're new to programming,  don't want until due dates to compile your assignments on the school server.  Your local environment may work fine despite underlying issues.  ",WINTER 2014,No,,,,,,,,,
12/10/2015 8:57:04,CS 361 - Software Engineering I,2,6-12 hours,Take control of your group.  The second project took way more time than it should of because a couple of people became foremen rather than teammates. ,FA 2015,No,,,,,,,,,
12/10/2015 16:43:15,CS 325 - Analysis of Algorithms,5,13-18 hours,"This is a very hard class. The lectures and office hours are bad but worth watching. Read the material. Do the homework. The mid term and final are both hard. Most projects are hard. 

You will learn a lot but it will be one hell of a ride.
",FA 2015,Yes,CS 361 - Software Engineering I,1,0-5 hours,Pair with a hard class.,No,,,,
12/10/2015 18:32:55,CS 290 - Web Development,2,18+ hours,Find other resources outside of the class to learn javascript and node.js. I signed up for a udemy course (Rob Percival Build 15 Websites) since it was only $10 when I purchased. The assignments aren't too difficult but definitely get started on them early. ,FA 2015,No,,,,,,,,,
12/11/2015 4:41:21,CS 225 - Discrete Structures in Computer Science,4,18+ hours,,fa2015,No,,,,,,,,,
12/11/2015 17:25:02,CS 344 - Operating Systems,5,13-18 hours,"Start the projects early. The later you do, the more stressful it will be. Every assignment is a long and challenging slog.",FA 2015,Yes,CS 352 - Introduction to Usability Engineering,4,13-18 hours,Be active in your group. Use slack to communicate.,No,,,,
12/12/2015 10:42:00,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Complete as much extra credit as you can. Start writing ""cheat sheets"" for each week and you'll have an easier time writing them for the midterm/final. I rushed through the weekly summaries and could have scored better. The lectures are sort of off with the assignments but things started to make a lot more sense to me after the 3rd week. Each point will count towards reducing your stress for the final week where there will be a programming assignment, weekly summary, quiz,  and final due so get the easy ones while you can :)",FA 2015,No,,,,,,,,,
12/15/2015 8:28:57,CS 161 - Intro to Computer Science I,3,18+ hours,"Start projects early, use the tutoring services often and early if you do not get something. Do all review problems in the textbook to study for exams.",FA 2015,Yes,CS 225 - Discrete Structures in Computer Science,1,18+ hours,"The study guides for exams are spot on, make sure to know everything on the study guide. Homework is the hardest difficulty. Quizzes are easier than homework. Exams are easier than quizzes. If you know homework and quiz questions really well you will breeze through the exams no sweat.",No,,,,
12/15/2015 12:59:26,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,Be prepared to use outside resources for better explanations.  The lectures are tied to the old book (Rosen) instead of the required book (Epp).,FA 2015,No,,,,,,,,,
12/15/2015 16:10:52,CS 161 - Intro to Computer Science I,1,18+ hours,,FA 2015,Yes,CS 225 - Discrete Structures in Computer Science,2,13-18 hours,,No,,,,
12/15/2015 16:49:45,CS 165 - Intro to Computer Science (Accelerated),4,18+ hours,"Understand that this is (most likely) your first taste of CS; chances of that occurring without headaches/stress/worry/doubts are slim to none.  You should know the C++ language well enough to get into trouble after this class, various condition statements such as do while loops/for loops/if-else statements/switches/etc, object oriented programming, recursion, pointers and de-referencing pointers, and you MIGHT touch a little on memory management.  You should also learn how to debug and how to do it well.  Learn how to test as you go.

The key objective in this class is not to become a know it all and perfect at the language.  The key is to understand these different concepts.  A for loop/while loop/switches/condition statements etc will generally be the same in all languages.  They use the same pseudo code and thus are written very similarly.  Once you know these concepts, picking up other languages is extremely easy.",SP 2015,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"This class really isn't that bad.  For a person coming in with a non stem background it could be a challenge because a lot of the concepts are...weird.  Especially when you get into recursion and Iterations.  Make use of the tutors, don't underestimate their ability and worth.",No,,,,
12/15/2015 16:56:41,CS 261 - Data Structures,3,6-12 hours,Just get it over with....I am not impressed with the structure of this class but she is overly fair and wants you to succeed.,SU 2015,Yes,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,"This class is one of my favorites in the program thus far (and I am almost done), a lot of people don't like it though mostly because of the assembly language.  Embrace it; whether you know it or not, these are your roots as a CS professional.  If you played old video games ever, if you have ever installed drivers, if you have ever wondered how the PC and software talk...then those are all answered through low level languages like C and Assembly.  

That is also important to note; C will be used heavily from this point on and to debug certain problems in C you will need to know how assembly interacts with the computer.  ",Yes,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"save this class for a known hard class.  Known hard classes are 290/325/372/and potentially 496.
"
12/15/2015 16:56:53,CS 261 - Data Structures,3,6-12 hours,Just get it over with....I am not impressed with the structure of this class but she is overly fair and wants you to succeed.,SU 2015,Yes,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,"This class is one of my favorites in the program thus far (and I am almost done), a lot of people don't like it though mostly because of the assembly language.  Embrace it; whether you know it or not, these are your roots as a CS professional.  If you played old video games ever, if you have ever installed drivers, if you have ever wondered how the PC and software talk...then those are all answered through low level languages like C and Assembly.  

That is also important to note; C will be used heavily from this point on and to debug certain problems in C you will need to know how assembly interacts with the computer.  ",Yes,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"save this class for a known hard class.  Known hard classes are 290/325/372/and potentially 496.
"
12/18/2015 12:16:15,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"DO as much of the extra credit as you can. Do the practice exams as they almost mirror the actual ones. Make sure you know how to figure out memory addresses early. Some programs are easy, some  are not.  ",FA 2015,Yes,CS 261 - Data Structures,2,6-12 hours,"This was easier than I thought (got an A). You might want to save this to pair with the tough classes (e.g. I heard 325, 344)",No,,,,
12/21/2015 11:20:11,CS 340 - Introduction to Databases,1,0-5 hours,"If you aren't porting over your CS 290 final project as the final project for this class, don't underestimate the amount of time it will take to pick up your backend language.",FA 2015,Yes,CS 325 - Analysis of Algorithms,5,18+ hours,"Skip all the lectures and office hours held by the prof. Get all of your lectures from the MIT OCW material. Skim the book, then go to YouTube to fill in the gaps. Don't use Python for the TSP project. If you use the Subtract and Conquer/""Muster"" method in place of Iteration for solving recurrences, you won't be marked down on tests.",No,,,,
12/22/2015 11:29:15,CS 161 - Intro to Computer Science I,2,0-5 hours,,FA 2015,Yes,CS 225 - Discrete Structures in Computer Science,1,6-12 hours,,No,,,,
12/30/2015 12:22:58,CS 161 - Intro to Computer Science I,4,6-12 hours,Stay on top of homework. it is critical,FA 2015,No,,,,,,,,,
1/5/2016 11:49:38,CS 340 - Introduction to Databases,2,0-5 hours,The lectures in this course give you everything needed to succeed. Don't wait until the last minute to do the homework or final project. ,FA 2015,Yes,CS 290 - Web Development,4,13-18 hours,"The lectures were way more useful than the book.  Don't get lulled into a false sense of security the first few weeks. It starts off slow,  but the last few weeks were rough. Make sure to understand each new concept,  because the final homework is fairly comprehensive. ",No,,,,
1/8/2016 16:09:02,CS 290 - Web Development,5,18+ hours,"So much new material.  Conceptually not bad.  Debugging in node can be challenging, and the professors material is relatively thorough.  Watch out for The last assignment: database interactions.  ",Fall 2015,Yes,CS 340 - Introduction to Databases,2,6-12 hours,"Fun, simple, not a freebie pay attention.  ",Yes,CS 261 - Data Structures,4,13-18 hours,"Assignments and worksheets take time, be careful and prepare well.  Debugging can be challenging due to longer programs.  Significant amount of material covered.  "
1/24/2016 20:19:18,CS 225 - Discrete Structures in Computer Science,1,0-5 hours,,SP 2015,No,,,,,,,,,
1/28/2016 20:28:26,CS 161 - Intro to Computer Science I,3,6-12 hours,,Fa 2015,No,,,,,,,,,
2/6/2016 15:17:50,CS 161 - Intro to Computer Science I,1,0-5 hours,,SU 2015,No,,,,,,,,,
2/13/2016 10:47:32,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,,WI 2016,No,,,,,,,,,
2/15/2016 17:23:33,CS 161 - Intro to Computer Science I,4,18+ hours,"Try to get ahead on readings before the course begins. Try to code as many of the review questions for each chapter as you can. Pay attention to the lecture notes, in addition to the textbook.",WI 2016,No,,,,,,,,,
2/23/2016 14:35:05,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,,WI 2016,No,,,,,,,,,
2/27/2016 16:04:44,CS 162 - Intro to Computer Science II,4,18+ hours,Stack Overflow is very helpful,FA 2015,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,,No,,,,
3/3/2016 3:01:17,CS 161 - Intro to Computer Science I,3,6-12 hours,,WI,No,,,,,,,,,
3/5/2016 17:55:38,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Practice different problems in the book, not just the ones for the homework",WI 2016,No,,,,,,,,,
3/13/2016 16:16:29,CS 362 - Software Engineering II,3,6-12 hours,The prof sucks.  Prepare to google a lot.  ,WU 2016,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Do really well on the programs and you don't need to stress about the exams much.  ,No,,,,
3/15/2016 9:43:11,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Don't skip the self-check exercises. The quizzes and parts of the final were directly from them.,WI 2016,Yes,CS 361 - Software Engineering I,1,0-5 hours,,No,,,,
3/15/2016 11:23:54,CS 496 - Mobile and Cloud Software Development,4,18+ hours,"Start early and do not waste time.  Seriously this stuff will take you longer than you think if you don't have prior experience.  

I'm a very successful student in this program and this is one of the most intensive courses I've taken in terms of project requirements and self learning.  My family feels like I've been gone for a few months because I've spent multiple evenings and weekends shut-in to my office.

Prepare to teach yourself.  A lot.  Even you have a question for the instructor, don't wait to ask it.  He sometimes can take days to answer on Piazza.  Send emails.  This feels less like a ""learn-about-a-topic"" course and more like a ""prepare-you-for-the-real-world"" course.

Good course with good ""real-world"" usefulness but not easy like many others.",WI 2016,No,,,,,,,,,
3/15/2016 11:36:02,CS 271 - Computer Architecture & Assembly Language,5,13-18 hours,"Even if you get a perfect score on a summary, go ahead and take it a second time.  You'll get a second set of questions that will be different from the first set of questions.  The quizzes and midterm/final are largely made up of questions that are pulled from the summary exercises.

Start the programming assignments early.",WI 2016,Yes,CS 361 - Software Engineering I,1,0-5 hours,"This class is largely focused on group work.  Be a good group member, and it's an easy A.",No,,,,
3/15/2016 12:54:16,CS 290 - Web Development,3,6-12 hours,"This class starts off at a very easy pace, especially if you are familiar with web development at all. The last two assignments take up SO MUCH time, from general feedback this term about 25-35 hours apiece. Make sure you get an early start on them, as the first 8 weeks do not prepare you for this work load. Otherwise a great class, I learned a lot! ",WI 2016,Yes,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"Make sure you put some thought and effort into your group project and follow directions, as grading on that can get a little picky. It's easy to slack because the rest of the class doesn't require much work or complex thinking. Watch out for trick questions on tests and quizzes.",No,,,,
3/15/2016 14:40:48,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Stay on top of your work. Do the weekly check exercises that accompany the lectures, since they will be the format of the weekly summary checks, the quizzes, and the midterm/final. I found that most homeworks took me between 5-10 hours. The practice midterm and final were representative of the actual exams. Use the discussion forums to ask questions often!",WI 2016,Yes,CS 261 - Data Structures,3,6-12 hours,"The group work is mostly useless. The ""book"" for this class is a joke. I'll be planning to take a free online data structures course to brush up, because this class fell really short in terms of making me feel like I could go into an interview. The homework code feels hobbled together, and often contradicts itself. Be sure to keep current with the discussions on Piazza because many people will hash out the issues ahead of time.",No,,,,
3/15/2016 16:33:25,CS 344 - Operating Systems,3,6-12 hours,,SP 2016,Yes,CS 361 - Software Engineering I,1,0-5 hours,,No,,,,
3/15/2016 17:17:55,CS 225 - Discrete Structures in Computer Science,3,0-5 hours,"Quizzes are posted on Thursdays and due Sunday nights.  Homework will not be graded by the time you do the quiz, so look at the homework solutions.  Exams and quizzes are pulled directly from homework!",WI 2016,Yes,CS 290 - Web Development,4,13-18 hours,"Starts slow but the curve sharply increases quickly after the second week. Do each of the activities at the end of the modules, as they are usually the weekly assignment broken up into increments, so if you go through all of them to the end, your assignment is 90% done.  Last homework assignment is a BEAST.",Yes,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,"Read the summary exercises, as they are pretty much exactly what is on the weekly summaries and quizzes.  Midterm was taken from quizzes.  Get a calculator that can translate back and forth between bases; you should know how to do it yourself, but you do NOT want to waste time calculating back and forth or risk making a mistake."
3/15/2016 17:54:59,CS 361 - Software Engineering I,3,0-5 hours,Take it with a course that's front-loaded. 361 has two projects. The second project is a big group project with 5 other people. There's a LOT of coordination and group management needed and that's really the key to this class: handling the group stuff well.,WI 2016,Yes,CS 325 - Analysis of Algorithms,5,13-18 hours,The first 5 weeks are incredibly hard. The tests are hard. The homework's hard. The projects aren't too bad. I recommend using Python for most of the projects. And the lectures are pretty bad; use your google-fu.,No,,,,
3/15/2016 20:01:37,CS 161 - Intro to Computer Science I,1,6-12 hours,,WI 2016,No,,,,,,,,,
3/16/2016 7:50:12,CS 162 - Intro to Computer Science II,3,6-12 hours,,WI 2016,Yes,CS 225 - Discrete Structures in Computer Science,3,0-5 hours,,No,,,,
3/16/2016 8:59:06,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Don't bother with the lectures, skim the readings, do as many practice problems as you can. Make sure to be prepared for the quizzes each week.",WI 2016,Yes,CS 352 - Introduction to Usability Engineering,1,0-5 hours,Don't wait until the last minute for the group assignments.,No,,,,
3/16/2016 10:17:15,CS 162 - Intro to Computer Science II,3,6-12 hours,"It seems overwhelming at first but it is not bad! They throw you into the deep end but it is not unmanageable. Get ready to use google, stack overflow, and other resources all the damn time, because unlike 161 you pretty much are on your own as to how you implement things. You *will* need resources beyond just the book. 

Rooker seems like a fucking oddball at first but he's really not that bad. Don't hold it against him. He is really really bad at communicating clearly - get ready for confusing assignments and test questions. Roll with it though.",WI 2016,Yes,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"Don't be dick to your group mates. Be a good member and get your shit done. The class is easy, as is the project. You just have to slog through it (if you find it as painfully boring as I did, you might enjoy it).",No,,,,
3/16/2016 10:57:20,CS 162 - Intro to Computer Science II,2,6-12 hours,"Get ready to be busy as fuck...lots of busy work. Weekly labs, biweekly assignments, biweekly group projects. Concepts aren't difficult though.",WI 2016,Yes,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,Not as difficult as most people lead you on to believe.,No,,,,
3/16/2016 10:58:43,CS 162 - Intro to Computer Science II,5,13-18 hours,"Pace yourself.  I feel as if I learned a lot, but most of the learning came from Stack Flow and You Tube Videos which is both a good and bad thing and probably a contributor to why you had to spend a lot of extra time on this course.",Winter 2016,No,,,,,,,,,
3/16/2016 12:13:46,CS 162 - Intro to Computer Science II,2,0-5 hours,Don't rely just on the lectures. Learn the topics from outside sources. ,WI 2016,Yes,CS 271 - Computer Architecture & Assembly Language,5,13-18 hours,"Watch all lectures and take a lot of notes and do the reading. Coding projects are not too bad but can be difficult if you get stuck since there is pretty much no information outside the book and whats covered in lecture. Midterm and Final are pretty intense but if you spend a lot of time making your note card, you will be OK",No,,,,
3/16/2016 18:53:01,CS 340 - Introduction to Databases,2,0-5 hours,"Study PHP early. The database work and relational algebra work is so light you get apathetic until the final project. At that point, you have to learn the language from scratch while trying to make a project work. On the final project, get started (even just with planning) as soon as possible.",WI2016,Yes,CS 361 - Software Engineering I,2,0-5 hours,"Pick a vision statement for Project A that you like, and pick a vision statement for Project B you could see yourself actually writing. If you end up as a client (a group picks your statement) don't be a dick by being picky and demanding. Know that Project B is a class assignment about learning Agile, so define the goal end product but don't get demanding on platform or tech. If you ask for a mobile app but the group doesn't know how to make one, they can't spend time following the agile process when they're frantically trying to learn enough about mobile dev in a 2-3 week period to make your stupid app. 40% of project B is delivering ""substantial working code"". Don't be a dick.",No,,,,
3/16/2016 22:14:01,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,,WI 2016,Yes,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,,No,,,,
3/17/2016 2:04:15,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Read the book. Don't skim it.
 Read everything. Also master the self check exercises for every lecture. They are there for a reason and if you understand those then you'll be good when  the time comes for the exams.",WI 2016,Yes,CS 340 - Introduction to Databases,3,6-12 hours,Start your project early because it is pretty time consuming. Also dont feel bad if you're not understanding sql right off the bat. I didn't really understand it until I made my own queries with the project.,No,,,,
3/17/2016 8:16:45,CS 162 - Intro to Computer Science II,4,13-18 hours,"Starting out this class is very daunting, don't let it dissuade you, just break down the problems into smaller manageable pieces.  
If lab 5 is still the doodlebug lab make sure to start immediately, it was disproportionately harder than any of the other labs.  ",WI 2016,Yes,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"The key to this course is having a group where everyone participates, if you have a good group you shouldn't have to spend more than 4-5 hours a week on the material. ",No,,,,
3/17/2016 10:50:37,CS 162 - Intro to Computer Science II,3,6-12 hours,"Prepare for pain and suffering.  The first assignment is probably the worst, but the general poor quality of the instructor makes aspects of this class a giant pain in the ass.  TAs seemed to routinely grade based on their view of what the assignment should be, rather than what the actual requirements were as laid out in the assignment.  The group work is poorly structured (too many people, too easy for free riders).  Overall the class isn't hard, but it is a decent time commitment some weeks.",WI 2016,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,Bone up on your algebra before taking this class and make sure you're familiar with summations.,No,,,,
3/17/2016 14:05:37,CS 344 - Operating Systems,4,18+ hours,"Practice a lot.  The concepts all seem very simple and easy during lectures and notes, but when you need to facilitate them into larger code it becomes complicated and potentially confusing.

Have a decent grip on C coding at the very least.",WI 2016,Yes,CS 340 - Introduction to Databases,2,6-12 hours,The class is not terribly difficult with the ability to take quizzes unlimited number of times.  Just practice your queries early and often.  Play around with it a lot.  Start on your final project as soon as you feel comfortable as having it done 3 weeks before deadline was a huge boost to my time.,No,,,,
3/17/2016 23:00:18,CS 290 - Web Development,2,6-12 hours,Read head and managed your time towards the end of class,WI 2016,Yes,CS 340 - Introduction to Databases,2,0-5 hours,Dont do the final project all at once. Spread it out in to chunks and get the free feedback.,No,,,,
3/18/2016 18:30:36,CS 271 - Computer Architecture & Assembly Language,4,0-5 hours,"The concepts are new to many people - if there's anything you don't completely understand, be sure to clear it up by asking questions on the forums or with the TAs, because you need to really understand the concepts to do well in the course.
",WI 2016,No,,,,,,,,,
3/18/2016 18:49:45,CS 161 - Intro to Computer Science I,2,6-12 hours,Read the book and practice writing lots of code both in an ide and away from the computer.,WI 2016,No,,,,,,,,,
3/19/2016 16:03:26,CS 361 - Software Engineering I,2,6-12 hours,,WI 2016,Yes,CS 344 - Operating Systems,3,18+ hours,"Very time consuming. Start early. Otherwise not that difficult. Some annoying technical minutia, but exam is open book which is nice. ",Yes,CS 362 - Software Engineering II,2,6-12 hours,Professor is difficult to understand. Little useful feedback. Overall easy. 
3/19/2016 16:04:45,CS 372 - Intro to Computer Networks,3,13-18 hours,Socket programming coursework is challenging. Otherwise on par with average coursework. ,WI 2016,No,,,,,,,,,
3/20/2016 2:32:08,CS 372 - Intro to Computer Networks,4,18+ hours,Start assignments as soon as possible.  Choose at least C or C++ for your first assignment as you will have to use one or the other on your second assignment and it will make your life a whole lot easier. If you can get through the summary exercises you can get through the midterm.  The final is a slightly different format.,WI 2016,Yes,CS 340 - Introduction to Databases,2,6-12 hours,"Overall everything is easy.  Only work with someone on the group project if you have a strong feeling they will pull their weight. The group project can be as time consuming as you make it, but having a helpful partner helps a lot.",Yes,CS 361 - Software Engineering I,3,6-12 hours,Estimating time spent for this class is difficult.  I spent minimal time on this until the group project at the end. Be adamant that your group uses languages/frameworks that the majority are comfortable with.
3/20/2016 2:40:08,CS 325 - Analysis of Algorithms,4,6-12 hours,Highly mathematical...depending who you are that could be a very good or bad thing.  ,WI 2015,No,,,,,,,,,
3/20/2016 16:24:43,CS 261 - Data Structures,4,6-12 hours,"Do the worksheets as they really help with the programming assignments and, more importantly, with understanding the concepts. ",WI 2016,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Do the extra credit if you can,No,,,,
3/21/2016 17:55:25,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,Class is really well laid out. A lot of material to learn but very manageable. Tip: make sure to work through the lecture checks.,WI 2016,Yes,CS 352 - Introduction to Usability Engineering,2,6-12 hours,Stay on top of the schedule for the project parts and reference the examples provided in the class resources section in Canvas. ,No,,,,
3/21/2016 20:12:33,CS 290 - Web Development,2,6-12 hours,Each assignment is graded equally but the class difficulty spikes. Make sure to collect easy points at the beginning to help the end. There are trendy technologies. This class is best suited for the over-achiever. You can loaf and do well.,WI 2015,Yes,CS 340 - Introduction to Databases,2,0-5 hours,This is an easy class. 60% of your grade will be determined with the Final and Project so make sure to plan accordingly.,No,,,,
3/22/2016 11:41:38,CS 344 - Operating Systems,4,6-12 hours,"Start the programs early. You'll get 2-3 weeks to do each program,  but don't wait until the last weekend! There is a lot to the programs, but they're not necessarily very difficult, just time consuming. Final exam is open everything and not too difficult. There is no midterm. ",WI 2016,Yes,CS 361 - Software Engineering I,1,0-5 hours,Coordinating the group projects can be difficult. Make sure to communicate early and often. No Midterm. Final was easy if you make sure to study the starred slides. ,No,,,,
3/22/2016 11:54:35,CS 161 - Intro to Computer Science I,4,6-12 hours,"Practice hand-tracing skills early on. This will be important on the exams. Be careful not to rely on your programming software too much for error messages. The exams will try make sure you know the exact syntax and ""punctuation"" exactly. If you rely too much on your compiler to tell you what you did wrong you will not do well on the exams.

Also, begin your homework as soon as possible. Do not wait until the last minute because programs may be surprisingly difficult and time consuming. You don't want to be caught having to submit partially working code because you ran out of time.",WI 2016,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"This class isn't particularly difficult unless you struggle with grasping abstract concepts when it comes to logic. Mostly I found that it was time-consuming. While the work was not tough most of the time, doing all of the homework was tedious and took the better part of a weekend day to complete the homework and quiz for the week. I would suggest not procrastinating and spreading the work out during the week to make room for any other class you might be working on it or free time. ",No,,,,
3/24/2016 11:58:59,CS 261 - Data Structures,2,6-12 hours,Be cooperative with the members of your group.  The wording of questions on the exams is a little wonky.,WI 2016,Yes,CS 290 - Web Development,4,6-12 hours,Be prepared to be blindsided the last two weeks by the increase in the amount of time required for assignments.  A big problem with this class is that there is no structure.  It is possible to have over 100% average on assignments and feel lost when the exam and final assignment come.,Yes,CS 352 - Introduction to Usability Engineering,2,0-5 hours,"Be cooperative and communicate with your group.  There is no programming and the content does not present any real challenge, so do not become apathetic toward the individual assignments."
3/25/2016 13:39:31,CS 261 - Data Structures,2,13-18 hours,This class isn't difficult. Study the worksheets for the midterm and final.,WI 2016,Yes,CS 352 - Introduction to Usability Engineering,1,6-12 hours,This class has a lot of busy work but is also not difficult. Be prepared to do a lot of work if you're stuck with horrible teammates.,No,,,,
4/29/2016 1:18:55,CS 161 - Intro to Computer Science I,4,13-18 hours,Start the assignments early!,FA2015,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,Don't panic during quizzes and exams.  ,No,,,,
6/9/2016 2:24:37,CS 290 - Web Development,3,6-12 hours,,SP 2016,Yes,CS 261 - Data Structures,3,6-12 hours,,No,,,,
6/9/2016 10:21:45,CS 362 - Software Engineering II,1,0-5 hours,"The class overall is pretty easy. Be familiar with git commands (git status, git add, git commit, git push origin master, etc). If the class isn't changed for next quarter, all students will be able to change EVERYTHING if you aren't careful. That means changing the master files. It was set up poorly, but is also a good lesson on being sure you are changing and pushing the correct things. If it is the same and each student doesn't fork their own version of the code, I highly suggest cloning a new version of the repo every time you go to submit. This is the easy workaround to too many errors by other students that you can't submit your work. 

Assignments are focused on testing. Most of it is in C. The final project is a group project with 2 other people. It is in Java. Overall decent class. You learn a lot about testing. The lectures can be quite long since some of them are on Udacity. I suggest getting transcripts for those. ",SP 2016,Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,"Class is setup like 271. Weekly summaries, weekly graded discussions, 2 quizzes, 2 programs, 5 labs, midterm, final. All interesting stuff. The labs use Wireshark which is easy to install and use. The 2 programs are fun but take some time. There is the option to use Java, Python, C or C++ for the 2 programs which is nice to be able to code in something other than C! ",No,,,,
6/16/2016 4:30:00,CS 165 - Intro to Computer Science (Accelerated),1,13-18 hours,,FA 2016,Yes,CS 225 - Discrete Structures in Computer Science,1,13-18 hours,,No,,,,
6/17/2016 16:05:43,CS 325 - Analysis of Algorithms,4,6-12 hours,"Get started on your work as soon as its available and participate in discussions. Be familiar with your basic proof set up, particularly induction. Watch lectures at 1.5x speed. The reading pairs well but is really dry. Contrary to what a lot of people say all the information I needed was in class lectures, so absolutely watch them. Don't be afraid to supplement your learning with outside resources though. Requires 4 group assignments so plan for that as well.",SP 2016,Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,"This class is about 90% memorization of facts/definitions, and problem structures. The midterm and final are all basically problems you should have seen before rephrased to ensure your comprehension. If you watch the lectures, do the labs, and take the practice quizzes you'll be ready for the tests. There are 2 programs to write using socket libraries. The first requires C or Python for the client, and C++ or Java for the server. The second requires C or C++ for the server and Java or Python for the client. So if you aren't familiar with the C socket library review it, and pick Java or Python to learn as well.",Yes,CS 362 - Software Engineering II,1,0-5 hours,"Stupid. If you take this class late in the program you'll likely learn very little. Review your C syntax as most of your coding will be in C up until the final assignment which will all the sudden be in Java and require Junit. Our program doesn't expose us to Java at any point so read up on it if you're unfamiliar with it, and read up on Junit as well.
Totally easy class though. I lost only 5 points on the midterm."
6/17/2016 17:47:46,CS 344 - Operating Systems,1,18+ hours,Start early with the projects and check forums frequently.  Book wasn't really necessary.,SP 2016,Yes,CS 372 - Intro to Computer Networks,2,18+ hours,"I found that doing all the problems, even the optional practice questions, were really helpful.",Yes,CS 361 - Software Engineering I,2,6-12 hours,"The second project can be far more time consuming than the first, so plan accordingly!"
6/17/2016 17:50:59,CS 261 - Data Structures,3,6-12 hours,,SP 2016,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,,No,,,,
6/17/2016 17:59:32,CS 361 - Software Engineering I,1,0-5 hours,,sp2016,No,,,,,,,,,
6/17/2016 18:01:02,CS 372 - Intro to Computer Networks,4,13-18 hours,This is built just like Assembly so prepare to put in a lot of time per week in this course. Study the summaries to do well on the quizzes/midterm. If you do the assigned readings and put in the time and effort you'll do fine on the final but it's not a cakewalk. ,Spring 2016,Yes,CS 361 - Software Engineering I,1,0-5 hours,"Drink a lot of alcohol while you're taking this course because it'll help ease the pain that you're dropping almost $2,000 for such a shitty course. ",No,,,,
6/17/2016 19:27:12,CS 372 - Intro to Computer Networks,3,6-12 hours,Nothing is particularly difficult and there aren't any surprises. Just work through the material every week (which gets really tedious) and get an early start on the labs and projects.,SP 2016,Yes,CS 496 - Mobile and Cloud Software Development,3,13-18 hours,"It's a Wolford course, so the lectures are insufficient and sometimes near-worthless. Class is heavily front-loaded so try to keep up with everything for the first few weeks. Get as early of a start on the project as possible and you should be fine.",No,,,,
6/17/2016 19:34:31,CS 290 - Web Development,4,18+ hours,"Since the class starts off slow, dig into some extra JavaScript resources on the side, that way you're better prepared when the class ramps up later in the quarter.",SP 2016,No,,,,,,,,,
6/17/2016 19:43:39,CS 372 - Intro to Computer Networks,3,6-12 hours,Take 344 first--it makes this class much easier.,SP 2016,No,,,,,,,,,
6/17/2016 19:43:50,CS 372 - Intro to Computer Networks,3,6-12 hours,Take 344 first--it makes this class much easier.,SP 2016,No,,,,,,,,,
6/17/2016 20:19:14,CS 162 - Intro to Computer Science II,2,18+ hours,"Keep up with the reading and assignments, or you WILL fall behind and be stressed.",SP 2016,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Ask the TA's for help. Not a lot of outside resources to rely on. ,No,,,,
6/17/2016 20:32:46,CS 362 - Software Engineering II,1,0-5 hours,Bring a pillow.  This one is a snoozer.  You'd have to be a complete retard to not get an A in this class.  There is one group project that is hardly enough work for a group.  You'll work mostly in C but a bit in Java/Eclipse so brush up on those if you haven't worked with them in a while.  Or don't.  You'll have plenty of extra time to brush up during the course.,SP 2016,No,,,,,,,,,
6/17/2016 21:14:06,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,A lot of the questions on exams come from the homework and quizzes throughout the term or are closely related. Take time to do the work and study and you should be fine. ,SP 2016,Yes,CS 161 - Intro to Computer Science I,1,0-5 hours,"The midterm and final were decent. You need to be able to hand trace code otherwise you'll have a rough time on the exams. The last two coding assignments were challenging, everything else was pretty easy. ",No,,,,
6/17/2016 22:05:11,CS 344 - Operating Systems,4,13-18 hours,"Don't underestimate any of the assignments. Brewster gives you plenty of time, but these are not assignments you can knock out in a weekend. ",SP 2016,Yes,CS 362 - Software Engineering II,1,0-5 hours,"Good or bad, you can literally not watch any of the lectures and still get an A by googling key terms that show up in the lecture titles each week. The first half of the class has a ton of work, but after the midterm, prepare to forget that you're enrolled in SE2.",Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,"The first program is easy. The second program is much harder than the first, so don't underestimate it. CS 372 is like Assembly except with extra help on exams (no credit quiz reviews!) and less coding. "
6/17/2016 23:17:06,CS 325 - Analysis of Algorithms,5,18+ hours,"Not as awful as many say, but start early, often, and practice, practice, practice... Do not take in tandem with a big project class like 496 or 419, else suffer you will. The lectures are awful, but there is useful stuff to be gleaned from them. ",SP 2016,Yes,CS 496 - Mobile and Cloud Software Development,4,13-18 hours,"This class is a lot of work. Choose a framework you are familiar with if you are taking another heavy coursework class like 325 or 372 or you will fall behind. This is very much a teach yourself class, with very little assistance or direction. It's a lot of fun, but it's also a butt load of work. ",Yes,CS 419 - Software Projects,3,6-12 hours,"Fairly light work, but you need to get on things early. Pick the project you are most passionate about and run with it. "
6/18/2016 0:06:43,CS 161 - Intro to Computer Science I,3,6-12 hours,,FA 2016,No,,,,,,,,,
6/18/2016 1:13:48,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,"Do homeworks, and memorise quizzes for the tests ",WI 2016,No,,,,,,,,,
6/18/2016 2:50:43,CS 161 - Intro to Computer Science I,3,13-18 hours,"For the exams practice code tracing, the theoretical stuff is way less important. Score as high as you can on the homeworks so you have wiggle room for the exams. ",SP 2016,No,,,,,,,,,
6/18/2016 4:19:53,CS 161 - Intro to Computer Science I,3,6-12 hours,,SP 2016,No,,,,,,,,,
6/18/2016 7:08:18,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,Know how to use an index of a book.  Be prepared to use google to explain this crazy language structure.  The weekly summary exercises and quizzes are your best place to find material for the exams instead of the practice exams that are posted.,SP 2016,Yes,CS 340 - Introduction to Databases,2,6-12 hours,"Whether you choose to use Node.js or PHP for your back-end code, be confident in the one you choose.  Your SQL queries may not be the best method but as long as they work, you will be fine.",Yes,CS 361 - Software Engineering I,3,13-18 hours,"The time estimate given is more for Project B than for Project A.  Your team for Project B needs to be able to communicate since you work in pairs coding the assignment, so when one pair is done the next pair needs to know what the first one did."
6/18/2016 7:16:14,CS 362 - Software Engineering II,2,0-5 hours,"Take the time to learn the dominion code well, it will make the following assignments much easier and you will learn more. ",SP 2016,Yes,CS 325 - Analysis of Algorithms,4,18+ hours,The first 3 weeks( of the 10 ) are the hardest. Find a study group to help learn the hard material with and double check your homework answers with.,No,,,,
6/18/2016 9:20:43,CS 361 - Software Engineering I,1,0-5 hours,"Really slow weeks 1 - 6. Generally spent an hour per week watching lectures, up to an extra hour a few of the weeks to work on vision statements and project A. The last three weeks I spent more like 10 - 15 hours per week working on Project B, which involved coding. ",SP 2016,Yes,CS 325 - Analysis of Algorithms,3,13-18 hours,"Watch lectures on 2x speed. Use Google, the book is standard in programs across the country so it's easy to find related material presented in different ways to get a better understanding. Find group members if possible, it'll be more likely everyone participates which makes the four projects a lot easier.",No,,,,
6/18/2016 10:13:19,CS 325 - Analysis of Algorithms,5,6-12 hours,Projects are graded generously but take the most time so I would put less effort into those and more effort into the homework to the point you can do it without looking anything up.,sp2016,No,,,,,,,,,
6/18/2016 18:24:16,CS 344 - Operating Systems,4,13-18 hours,"Start the projects early!  There are tons of resources to help you through the projects, but starting early is the best bet.  ",SP 2016,Yes,CS 372 - Intro to Computer Networks,4,18+ hours,"The projects are crazy involved!  There are discussions each week - do them, they are easy points!  Very similar structure to 271.  ",No,,,,
6/19/2016 8:10:24,CS 165 - Intro to Computer Science (Accelerated),3,6-12 hours,"Work ahead.  Read the text (it's very good).  Start the programming homework assignments early, those are the biggest portion of your grade.  Make sure that your code compiles and runs on the FLIP server, it doesn't matter if it runs on your home computer.  If it doesn't run on FLIP, you will get little or no credit.  Also turning in an unfinished project on time is better than missing the deadline completely.",SP 2016,No,,,,,,,,,
6/19/2016 16:07:30,CS 361 - Software Engineering I,2,6-12 hours,,SP 2016,Yes,CS 325 - Analysis of Algorithms,4,6-12 hours,,No,,,,
6/19/2016 17:09:35,CS 325 - Analysis of Algorithms,4,6-12 hours,The 2nd half of the course is harder than the first. I also found the office hours more helpful than the lectures. The book is hard to read but if you fully understand those you're golden.,SP 2016,No,,,,,,,,,
6/19/2016 23:26:06,CS 162 - Intro to Computer Science II,3,13-18 hours,,SP 2016,Yes,CS 352 - Introduction to Usability Engineering,1,6-12 hours,"The tests test your ability to create a notecard with answers to the weekly objectives, not your understanding of the concepts.",No,,,,
6/20/2016 6:54:33,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,,SP 2016,No,,,,,,,,,
6/20/2016 8:24:10,CS 344 - Operating Systems,4,13-18 hours,"Be prepared by watching videos. I had to do a lot of outside research, but I liked the instructor. Don't wait until the last minute to do programs! Can't stress that enough.",SP 2016,Yes,CS 361 - Software Engineering I,3,6-12 hours,"Do very well on the homework and you won't have to worry about the final. I got an A by getting As on homework and only a 60% on the final. I don't test well, so I always try to make up for it with homework.",No,,,,
6/20/2016 9:13:53,CS 340 - Introduction to Databases,1,0-5 hours,,SPR 2016,No,,,,,,,,,
6/20/2016 13:17:03,CS 340 - Introduction to Databases,2,0-5 hours,"Pretty straightforward class. The homework is pretty useful as you do get your hands dirty with MySQL. Final exam did not require us to use relational algebra or create diagrams. Could do better to have a midterm or something to prime you for the final exam but the class really winds down after week 5-6, even if you are programming your final project. 

Recommend pairing this with a harder class, unless you really want to make your final project look pretty.",SP 2016,No,,,,,,,,,
6/21/2016 16:20:19,CS 362 - Software Engineering II,5,18+ hours,"Watch mit lectures and practice the problems a lot. The second half of the quarter was easier IMO, so it gets better! ",Sp2016,Yes,CS 362 - Software Engineering II,1,6-12 hours,"Easy class. Was not very useful, and I am not confident at all about testing despite getting an A. ",No,,,,
6/23/2016 11:20:04,CS 261 - Data Structures,3,6-12 hours,Samina's expectations are vague and confusing. Be prepared for some initial frustration. Once you get into the swing of things it's not so much of a problem. Get comfortable with C. Don't wait until the last minute to do assignments. ,SP 2016,Yes,CS 290 - Web Development,1,0-5 hours,"If you have Sheela Surrisetty, don't expect any instructor help. The TAs will be doing all of the work. Not a difficult class. Give yourself lots of time for the database assignment (the last one) because it is disproportionately time consuming compared to the rest of the assignments. How-to guide doesn't need to be any prettier than the professor's weekly module pages (throw some headers and paragraphs in there, distinguish your code sections somehow, you'll be fine). They give a very very polished example, but it's not graded on aesthetics at all.

Final exam bit a lot of people in the ass (class average: 63%). Know the finer details. Sort of nitpicky. Brush up on code.",Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"I actually enjoyed this class a lot. I thought it was really well taught. Start early on assignments, MASM is a beast. Look over the practice questions posted with the lectures. Quiz and summary exercise questions will be similar. Test questions will be as well, if not taken directly from the quizzes/summary exercises. Make good use of your note sheet for exams, there is a lot of information to know, but largely nothing surprising."
6/24/2016 6:35:43,CS 261 - Data Structures,3,13-18 hours,"Continually practice the implementations so you don't have to cram for the exams. When you do the homework, really understand the implementations, don't just copy from the worksheets or elsewhere. The lectures are really good, so make sure you watch all of them and take appropriate notes. ",SP 2016,Yes,CS 290 - Web Development,4,6-12 hours,"You must do outside exercises and practice to succeed in this course. The lectures alone will not be enough to really understand the material. Make sure you fully understand a concept before moving on to the next week's material. Do not just copy and paste code, as this will make things very hard for you later on. ",No,,,,
6/25/2016 18:55:30,CS 161 - Intro to Computer Science I,2,6-12 hours,,SP 2016,No,,,,,,,,,
6/26/2016 2:08:39,CS 496 - Mobile and Cloud Software Development,5,18+ hours,"The course has two chunks: cloud, then mobile. Both pose their own challenges. Prepare to spend a lot of time coding. ",SP 2016,Yes,CS 362 - Software Engineering II,2,6-12 hours,It starts off strong with interesting and time consuming projects on testing. Then  eases up in the second half. Would pair well with a course that's back-heavy,No,,,,
6/26/2016 11:44:40,CS 161 - Intro to Computer Science I,3,13-18 hours,"Don't anticipate much feedback from TAs.  If you have time, I'd recommend doing the practice program assignments in the book. Definitely practice code tracing before the exams, that's really most of the exams.",SP 2016,No,,,,,,,,,
6/27/2016 14:41:01,CS 372 - Intro to Computer Networks,3,18+ hours,Use the exercises to prepare for tests,Sp 2016,No,,,,,,,,,
6/28/2016 17:01:28,CS 165 - Intro to Computer Science (Accelerated),3,6-12 hours,Get started early on assignments and read the material beforehand. Google is your friend.,SP 2016,Yes,CS 225 - Discrete Structures in Computer Science,3,0-5 hours,Reading the material before watching the lectures helped my understanding.,No,,,,
6/29/2016 19:58:28,CS 261 - Data Structures,2,0-5 hours,Try not to get bogged down by working with your group on the worksheets. Understanding how each function is implemented on the worksheets is absolutely key.,SP 2016,Yes,CS 352 - Introduction to Usability Engineering,1,6-12 hours,Fit the answers to the weekly questions onto your notecard and the midterm and final should be easy.  Use draw.io to make your flowchart!  It was probably the lengthiest part of the class for me.,Yes,CS 340 - Introduction to Databases,1,0-5 hours,"Very straightforward class.  You can take the quizzes as many times as you need to get 100%.  Assignments are straightforward.  Do not wait to start the project at the last minute, especially if you are not familiar with php or mySQL."
6/30/2016 16:08:35,CS 161 - Intro to Computer Science I,2,6-12 hours,Read the book and look at example code ,SP 2016,No,,,,,,,,,
7/5/2016 12:57:02,CS 162 - Intro to Computer Science II,3,18+ hours,"Not that hard, but will take over your life in terms of time, plan accordingly",SP 2016,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Do all the self study worksheets, take quizzes 2x times, plan for last 2 assignment being hard",No,,,,
7/5/2016 22:01:03,CS 261 - Data Structures,4,13-18 hours,"The ""book"" for the class was hardly helpful, I supplemented it with ""Mastering Algorithms with C"" and found that one to be much more useful. I really liked the lectures and found them to be quite good. For the midterm and final the practice sheets are nearly identical to the actual test. Know them well. ",SP 2016,Yes,CS 271 - Computer Architecture & Assembly Language,5,18+ hours,"Do not use a grace day until after the midterm, the assignments get quite a bit harder after that. Also, make sure you know the quiz material well, the midterm and final are pulled from those questions, which are quite a bit tougher than the weekly assessments. 
If you have time make sure to do the extra credit. ",No,,,,
8/2/2016 16:48:33,CS 162 - Intro to Computer Science II,4,18+ hours,"- Start early and often on assignments.
- Make sure you understand pointers (there is a group collaboration review of these but that is halfway through the quarter. You start using pointers immediately.)
- Ask questions when you have them. Many assignments/labs have misinformation in the instructions. (i.e. left over from previous quarter or just plain wrong)
- Watch lectures and read chapter before starting on homework
- Always check your code for memory leaks using valgrind, you lose quite a few points if you have leaks.
- Don't panic. Meditate. :)",SU 2016,No,,,,,,,,,
8/3/2016 14:48:37,CS 271 - Computer Architecture & Assembly Language,5,18+ hours,This is a bruiser of a class if you fall behind. I ended up behind and focused solely on the programming assignments and ended up with a horrid grade. Don't fall behind. Watch the lectures 2-3 times and study hard for the mid-term and final. ,SP 2016,No,,,,,,,,,
8/6/2016 23:00:54,CS 361 - Software Engineering I,1,0-5 hours,"The unfortunate reality of this class is that your grade lives and dies by the groups you are stuck with.  About half the course's grade is from group projects; you can't select your groups, so it's possible you could end up doing all the work.  Forget the discussion boards; email the TAs directly if you want any answers to questions in a reasonable time period.  Good luck.",SU 2016,Yes,CS 344 - Operating Systems,1,0-5 hours,"I'm not really sure why this class has such a rep for being difficult.  The course grade is a syllabus quiz, 4 programs, and a final; that's it.  While the lectures do not hand everything to you to complete the assignments and you will need to do some research, it is more than enough to point you into the right direction  

The grading scripts are provided for all assignments but 1; this is usually ~90% of your grade.  The remaining 10%ish is from your code style and comments.  Comment a lot and keep notes on what references you used.  Probably due to the class size and the automated nature of grading, feedback is minimal and grading seems to be extremely lenient, which is unfortunate if you are looking for helpful feedback where you can improve.  Overall, the class is as straightforward as can be without doing all the legwork for you, but programs might take extra time if you don't understand the content.

The lecture about zombie processes is mildly embarrassing to watch; try not to cringe too much.",No,,,,
8/7/2016 5:26:43,CS 325 - Analysis of Algorithms,4,6-12 hours,,SU 2016,No,,,,,,,,,
8/10/2016 17:32:46,CS 340 - Introduction to Databases,2,6-12 hours,"Get started ahead of time on the final project, and get familiar with PHP and MySQL if you can before taking the course.  The final project is the only time consuming part of this course, otherwise it's pretty easy and straightforward.  You can additionally take the quizzes as many times as you'd like which helps pad your grade.",SU 2016,No,,,,,,,,,
8/16/2016 8:56:04,CS 496 - Mobile and Cloud Software Development,5,13-18 hours,"Take the time in week 1 to actually plan an application that you can use for the final project. If you plan a single app that you want to work towards throughout the quarter, your final project will be using assignment 3 and assignment 4 with a few new added features. That said, it's a lot of coding so don't let yourself fall behind.",SU 2016,Yes,CS 419 - Software Projects,4,6-12 hours,"This course is about what you expect. A quarter long group project with fairly high expectations on the total content your group delivers. You're graded subjectively on the final product which means individual grades/contributions aren't as important. Establishing a solid group dynamic where everyone contributes and does a good job is key to success. Brewster is a great mediator and is very practical though, so don't be discouraged. Definitely doable in Summer if you put in ~10 hours a week and keep on schedule.",No,,,,
8/16/2016 8:57:44,CS 290 - Web Development,4,0-5 hours,"The course is quite easy, both conceptually and time-wise, until the last couple of weeks. The final project is very difficult based on what you have been taught up until that point. ",SU 2016,Yes,CS 340 - Introduction to Databases,3,0-5 hours,,Yes,CS 352 - Introduction to Usability Engineering,3,0-5 hours,Make sure to tackle all of the group assignments at least a few days before they are due!
8/16/2016 9:25:41,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"The TAs feel like robots - expect no help there. Redfield very helpful as an instructor - if you have an issue, take it to him.  The summaries are easy, quizzes slightly more difficult - there are lots of opportunities to screw up.  The Midterm and Final were fairly difficult.  I did well (at least on the midterm, no final grade yet), but it took a lot of studying and there was some fairly obscure stuff, and a few 'gotchas' that really took understanding the nuances very well.  The programming wasn't bad, but some of the extra credit could be a little tricky.  A lot of people struggled with stuff, I would definitely start early.  The accelerated pace seemed a bit much once or twice, otherwise manageable.  It would be nice if they went back and adjusted the materials somewhat to correctly reference other assignments, as they were all swapped around.",SU 2016,No,,,,,,,,,
8/16/2016 9:33:16,CS 325 - Analysis of Algorithms,4,6-12 hours,"Watch course lectures, but just for the course content, (what's expected for you to know that week). Then, take that outsife of the lectures and go look up videos on MIT or other Youtubers to learn the topics. It'll take you half the time that it to takes Schufort to go through the lectures, (sometimes less).

Her lectures are dry, long, and SLOW. I'm fine with long lectures, but she talks incredibly slow and takes a long time to get to the point. She also tends not to be terribly thorough in covering topics, which is surprising for how long they take.

Most of the topics are fairly easy to catch on, but difficult ones are Dynamic programming, (WTF?), and NP-Completeness, (all of the proofs feel so subjective...). Unfortunately, if you struggle with these, it'll come back to haunt you.

Be prepared to spend a while on the projects, (and scope out a good group). Write-ups are super easy, but the code isn't always so simple... Try making separate helper functions in another file for reading in .txts and what not that you can reuse throughout the term. Saves you a lot of time so you can focus on implementing the algorithms.",SU 2016,Yes,CS 496 - Mobile and Cloud Software Development,4,13-18 hours,"Project 1: Website, (choose GAE if your not familiar with creating a DB; use this all term)
Project 2: Start thinking about a mobile application you want to develop that incorporates a NoSQL DB and relations between objects in your DB, (i.e. One object is a Book, another is an Author, and another is a reader. An author can write many books, a reader can read many books).
Project 3-Final: Build on your idea through the term.

Wolford doesn't tell you any of this early on and it royally screwed me as the term went on. Lots of long nights.

Are you a strong coder in python, javaqscript, and HTML? Cool, this class should be fun and not too bad, (just time consuming). If you're none of the above, (like myself), prepare for a stressful term. Totally doable as the TA's are generally awesome and lenient in their grading. As long as you hit all the requirements for the assignment, they'll give you full credit, (you have up to a day to turn it in after the assignment is due for up to 80%).

One issue is that some of the requirements aren't always clear. Once again, TA's are lenient. I turned in one assignment where I didn't meet the requirements, (misinterpreted what Wolford wanted), and the TA let me turn in the assignment again after he had graded it when I brought up my concerns. Totally fair.

Speaking of Wolford, you'll find his lectures are totally useless aside from scrapping code together for your DB. He basically just talks about what his code does. That's it. Be prepared to do a lot of your own research.

Pros: you end up learning a lot. 
Cons: you're paying ~$1k to teach yourself how to create a mobile application. ",No,,,,
8/16/2016 9:36:30,CS 419 - Software Projects,2,6-12 hours,Make a really good design plan do you stay on track. Communicate with your team regularly,SU 2016,No,,,,,,,,,
8/16/2016 9:37:52,CS 340 - Introduction to Databases,3,6-12 hours,"Everyone says it but whether or not your get started early on your final project will determine if the class is ""totally doable part time"" or if it is ""almost no work until the last week where you literally die"". If you have previous SQL experience, you will likely find this easy to complete. I did not know any PHP going in and did not struggle to finish the final project at all. There are examples provided that basically outline how you can do all the tasks you need to do in PHP so you can easily learn the parts you need and apply them. ",SU 2016,No,,,,,,,,,
8/16/2016 9:39:58,CS 372 - Intro to Computer Networks,5,13-18 hours,Do all the readings he tells you what to study but it's a ton of material so if you don't test well this class is awful.,SP 2016,Yes,CS 325 - Analysis of Algorithms,3,13-18 hours,"Try to write pseudo code for all the algorithms don't lean on your group or you'll do poorly on the tests, ask your team for help if you don't understand an algorithm.",No,,,,
8/16/2016 9:55:02,CS 162 - Intro to Computer Science II,3,18+ hours,"Read chapter 11 gaddis before starting this class. Will be a monster, monster help. 

-Get started on the Labs as soon as they're assigned. Even if it looks like Egyptian, just get started on it. Write out some pseudocode, design doc, whatever. 

-Write C++ every day. Every damn day. Even if it's a int main with a while loop asking for input. Just something to keep you going and your brain alive. 

-Comment your code as you go (in terms of function headers and file headers). Will save alot of time. 

-Get started on the Doodlebugs assignment as soon as it opens. This is when the class generally shits their pants. 

-Don't be overwhelmed by the group work, just try and contribute early on. 

-Take the design documents seriously. They can really help.

-Pray to fuck you don't get assigned Niza Volair as a TA. Because she is literally a Nazi. 

-Pray you to get a badass, cool TA like Harlan Waldorp, who grades on the important stuff and not the ass kissing factors (ie, writing a 15 page design document). 

-In general this class seems fairly TA-dependent, which is quite unfortunate. 

",SU 2016,No,,,,,,,,,
8/16/2016 10:02:20,CS 325 - Analysis of Algorithms,3,18+ hours,"Don't skip over anything. Even the thing you think is so obvious and won't be on the final, could be.
Start early on the videos each week and watch them at 1.5-2x speed (a suggestion from prior students that really helped!).  They're long and speeding them up almost makes them sound normal speed.  Attend the review sessions, office hours if you can. Some weren't helpful, but others were - especially the midterm and final study sessions.  
The textbook was helpful in the beginning, but not so much later on. Still a good resource to have though -- (note:  it's available online here and there..). 
Just relax and really try to enjoy the class. It wasn't as bad as everyone made it sound. Try to find real world applications for the concepts you're learning - that helped me a lot.  Good luck!",SU 2016,No,,,,,,,,,
8/16/2016 11:00:36,CS 372 - Intro to Computer Networks,2,6-12 hours,"Class layout is just like assembly. Do the self checks after every lecture. You get to use a page of notes for the exams, make them as you go through the coarse. Use the quizzes and weekly summaries as a guide to what you need on your cheat sheet.  ",SU 2016,Yes,CS 496 - Mobile and Cloud Software Development,2,18+ hours,"All the assignments can be piggy backed on top of each other, keep this in mind on day 1. The last half of the class has the most work, start on stuff early.  ",No,,,,
8/16/2016 12:01:15,CS 162 - Intro to Computer Science II,3,0-5 hours,"It almost seems like half of your grade depends on two things: getting a Valgrind check to state ""no errors found"" and writing a bunch for the testing/reflections (quantity over quality).",SU 2016,Yes,CS 352 - Introduction to Usability Engineering,3,0-5 hours,"If you're looking for more of a ""software engineering"" experience out of this CS program, then this class will feel like an idiotic waste of your time every step of the way. But take heart: there are actually a few useful nuggets sprinkled here and there.",No,,,,
8/16/2016 12:16:24,CS 344 - Operating Systems,4,13-18 hours,"Start the programs EARLY!  Do not fall behind!  Brewster is a fantastic teacher, ask him questions.  ",SP 2016,No,,,,,,,,,
8/16/2016 12:25:44,CS 261 - Data Structures,3,6-12 hours,"Favorite class so far as far as concepts are concerned - however, coordinating with a group is a hassle. If you take this course during the summer, I recommend avoiding other classes that involve a lot of collaboration as you'll end up spending every day of the week in group meetings.",SU 2016,Yes,CS 352 - Introduction to Usability Engineering,2,0-5 hours,"Too much group work. The most difficult part of this class is trying to stay interested. I program back end stuff at work, have no interest in design, and am frustrated I had to take this course.",No,,,,
8/16/2016 13:10:38,CS 361 - Software Engineering I,2,0-5 hours,"Don't be lazy and mark this off as a blow-off course. There is still a good amount of useful material, and depending on your group, the time spent per week can be closer to 10 hours, especially for the second half of the class.",SU 2016,Yes,CS 344 - Operating Systems,4,13-18 hours,Start the assignments EARLY!!! I can't stress this enough. ,Yes,CS 372 - Intro to Computer Networks,4,13-18 hours,"Start the assignments EARLY! This class is structured like CS271, so take the Summary Exercises and Lecture Exercises seriously."
8/16/2016 13:11:28,CS 496 - Mobile and Cloud Software Development,3,18+ hours,All the projects come together at the end (and often throughout). Keep an eye out towards recycling code and the things you've turned in. Get started early because you'll probably have server or other problems.,SU 2016,Yes,CS 419 - Software Projects,3,13-18 hours,This is not a class to slack in -- get as much done as early as possible. Be sure to be on your teammates to get stuff done. ,No,,,,
8/16/2016 13:34:48,CS 344 - Operating Systems,3,6-12 hours,Get started early and brush up on your C programming. The lectures do a good job of giving you the tools you need for each project but there will still be C related programming that the textbook can fulfill for you.,SU 2016,No,,,,,,,,,
8/16/2016 13:40:55,CS 344 - Operating Systems,4,6-12 hours,"The projects may look easy, but they are harder than they first appear. Don't wait a day or two before its due.",SU 2016,No,,,,,,,,,
8/16/2016 13:43:07,CS 261 - Data Structures,3,0-5 hours,,SU 2016,Yes,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,,No,,,,
8/16/2016 14:30:58,CS 352 - Introduction to Usability Engineering,1,13-18 hours,Pray to god you get into a good group or you might end up doing all the work. ,SU 2016,Yes,CS 340 - Introduction to Databases,2,13-18 hours,Start on the final project as soon as possible. It's not that difficult but it does takes time to do.,No,,,,
8/16/2016 14:40:23,CS 325 - Analysis of Algorithms,5,13-18 hours,"Study study study. Everything builds on each other, so if you don't get something from the previous week it will be difficult to catch up. The homework takes several hours. Start early. The projects take several hours. Start early. Make sure you actually understand the concepts. If you look up an answer and say 'oh that makes sense', make sure you know why it makes sense. The class lectures are pretty terrible so try MIT, geeksforgeeks, etc for content. The best way I found to learn the material is do as many example problems as possible. Reading is good but I found it took too much time and I didn't get much out of it. I't's a tough class but I made it through and so can you!",SU 2016,No,,,,,,,,,
8/16/2016 15:39:50,CS 362 - Software Engineering II,1,6-12 hours,"Watch the first 6 weeks of lectures, skip the rest. Don't bother with the udacity lectures. Make sure you get a good group and you'll be fine. ",SU2016,Yes,CS 344 - Operating Systems,4,18+ hours,It's very challenging and you need to put in the time on the projects. START THE PROJECTS EARLY or you're gonna be screwed. Brewster is the best professor there is and this is probably the best/funnest course in this program. ,No,,,,
8/16/2016 15:43:47,CS 261 - Data Structures,3,6-12 hours,"Focus on understanding the concepts intuitively, draw them, simulate traversal, addition and removal.  Watch the videos, the book was not as important.  Spend time on the worksheets they directly translate to the tests.",SU2016,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Watch the videos, do the summary exercises both times.  Start the assignments early or risk running out of time and to ensure you can do the extra credit.    Most will need the boost after the midterm and final.  Focus on practical hands on knowledge- this class is all minutia and the devil is in the details. Practice all of the problems from the summary exercises and lectures until you really know how they work .",Yes,CS 290 - Web Development,3,6-12 hours,"Course is not terribly difficult until the final project and the final exam.   Study the details.  Exam is mostly Javascript trivia, be sure you know AJAX html requests backwards and forwards. Lots of 'select all that apply'.  Did worse on this final than CS 261 & 271..."
8/16/2016 16:11:27,CS 340 - Introduction to Databases,3,13-18 hours,"Start the project as soon as you can. If you're using PHP, start learning the language first day of class.",SU 2016,No,,,,,,,,,
8/16/2016 16:17:42,CS 290 - Web Development,1,13-18 hours,"node school tutorials.  Take them seriously.

mozilla javascript guide, mozilla forms guide, mozilla css guide, mozilla html guide.

practice and work on your own projects simultaneously while doing the course materials.  You should be done with your assignments on wednesday before they are due.",SU 2016,Yes,CS 340 - Introduction to Databases,1,13-18 hours,"Do the stanford databases course.  If you understand that one, this one should be fine.  If you decide to stray from the guidelines of the final project, you better know what you are doing.  

Mode analytics also offers a decent SQL course on analytics.  Try it.  Honestly, watch lectures on 2x speed, watch and understand stanford databases course, and if you want to have a deeper understanding, read the book by elmasri.",No,,,,
8/16/2016 17:31:00,CS 344 - Operating Systems,2,6-12 hours,,SU 2016,Yes,CS 361 - Software Engineering I,1,0-5 hours,,No,,,,
8/16/2016 18:01:29,CS 261 - Data Structures,3,18+ hours,"Understand the concepts behind the code. It's what's tested on both exams. Also, do every extra credit assignment you can. Might just push you up a grade.",SU 2016,Yes,CS 352 - Introduction to Usability Engineering,1,6-12 hours,This is a good companion to a demanding course. It's a waste of time otherwise. 90% of what you'll need to know is in the videos. Look at the example assignments when putting together your group projects.,No,,,,
8/16/2016 18:41:41,CS 496 - Mobile and Cloud Software Development,4,6-12 hours,Start looking into cloud and mobile platforms well before class starts.,SU 2016,No,,,,,,,,,
8/16/2016 19:23:21,CS 372 - Intro to Computer Networks,4,13-18 hours,"This class is not programming heavy. There are a handful of programs you'll make. They're difficult sure. But if you've taken 340, they're manageable. The hard part about this class is that there is a lot of reading and studying required. You'll be expected to watch some dense lectures, read some dense books, and consult extra sources.",SU 2016,Yes,CS 419 - Software Projects,4,6-12 hours,"The real lesson you learn in this course is group management and working together. Keep constant communication with your groupmates! If you're having a problem, reach out as soon as possible to your team members of the class.",No,,,,
8/16/2016 20:00:04,CS 161 - Intro to Computer Science I,1,0-5 hours,,SU2016,Yes,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,,No,,,,
8/16/2016 20:21:02,CS 325 - Analysis of Algorithms,3,13-18 hours,The lecture/recitation videos from MIT's two algorithms courses will be more useful than the ones done by OSU.,SU 2016,No,,,,,,,,,
8/16/2016 22:13:29,CS 225 - Discrete Structures in Computer Science,3,18+ hours,Make sure to spend time understanding the homework problems. Try some similar problems with answers in the back of the book if you are struggling. Exams were very similar to practice exams/problems provided. ,SU 2016,No,,,,,,,,,
8/17/2016 0:30:26,CS 290 - Web Development,5,6-12 hours,"The final is a poorly designed beast. Expect to see things on it that the prof said not to expect. Syntax is a weirdly large portion of the exam. The term I took 290, I was also taking 325, and the average final exam score for 290 was about 14 points lower than the one for 325 (and 325's content is more challenging), 61% versus 75%, which is ridiculous.

As for the course itself, it squishes client-side and server-side together into a course and may well leave you feeling like you learned little about either. Don't discount web development as a career path if you leave 290 hating web dev, it's just the course.",SU 2016,Yes,CS 340 - Introduction to Databases,2,0-5 hours,"If you don't already feel comfortable with sql and php, start early on the final project. I came into the class with a work project involving mysql and php, so the content felt very manageable, but I don't know how manageable it would feel if you don't already have that. 

Definitely spend time on understanding different kinds of joins, and leave time to complete the sql assignment and advanced sql quiz.",Yes,CS 325 - Analysis of Algorithms,3,6-12 hours,"Build rapport with your project group if you can. My project group was more helpful for questions than the hw groups were. The hw groups felt like one more hoop to jump through, notably because of the requirement to post multiple times over multiple days for each homework.

Lastly: python is your friend. In 261 I enjoyed using C, but python was so smooth for the projects, even with feeling fuzzy about the language at first."
8/17/2016 3:14:45,CS 352 - Introduction to Usability Engineering,1,0-5 hours,,SU 2016,No,,,,,,,,,
8/17/2016 8:04:33,CS 372 - Intro to Computer Networks,3,6-12 hours,"This course is organized the same way 271 is. I found the content to be easier, but challenging. This class should be taken after 344 as currently 344 has socket programming assignments and completing those before the class will make it significantly easier.


This is one of the best designed classes in the program. Expect workload to be even and constant - like 271 there are no surprises. I took this class by itself in the summer.",SU 2016,No,,,,,,,,,
8/17/2016 9:29:00,CS 372 - Intro to Computer Networks,2,6-12 hours,"Make the solutions to weekly summaries the first thing that you read, before watching the lectures.  Then gonback to it after you've watched the lectures. This I find speeds up the information absorption process",SU 2016,Yes,CS 496 - Mobile and Cloud Software Development,3,18+ hours,"Do not pick iOS unless you are fluent in Objective-C.  Be realistic, even seasoned developers need weeks to ram up in Objective-C, and you just don't have that kind of time while taken other classes.  The instructor should have warn students, who have no monile experience, off iOS. Other then that, I think this is a great class.",No,,,,
8/17/2016 12:12:00,CS 161 - Intro to Computer Science I,2,6-12 hours,,su 2016,No,,,,,,,,,
8/17/2016 19:23:13,CS 344 - Operating Systems,4,13-18 hours,As everyone will tell you start the projects as early as possible,Su 2016,No,,,,,,,,,
8/17/2016 20:24:38,CS 344 - Operating Systems,3,13-18 hours,"Start the projects early. They are involved so give yourself time to really absorb the lecture material and do lots of Googling. Professor Brewster is very involved and supportive, and the final seemed very fair.",SU 2016,No,,,,,,,,,
8/17/2016 22:13:01,CS 496 - Mobile and Cloud Software Development,4,18+ hours,,Su2016,No,,,,,,,,,
8/17/2016 22:13:29,CS 496 - Mobile and Cloud Software Development,4,18+ hours,,Su2016,No,,,,,,,,,
8/18/2016 5:37:26,CS 162 - Intro to Computer Science II,3,18+ hours,Complete each requirement one step at a time and make sure it works before moving on to the next.  This way you won't run into big problems and have to start over from scratch.  You'll also at least have parts of the assignments complete to be able to get patrial credit if you are unable to get everything to work as it should.  Start assignments early.,SU,No,,,,,,,,,
8/18/2016 8:22:15,CS 162 - Intro to Computer Science II,4,18+ hours,"Be prepared for inconsistency.  Rooker's grammar and assignment descriptions are terrible and often, you have to stay up on the Canvas discussions to ensure you really know what's expected.  Despite the inconsistency, the class taught me a log.  Being forced to learn a lot on my own really helped to hammer in the material in a real way.",SU 2016,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"This course was awesome!  The design and organization were a breath of fresh air when compared to 162 / Rooker.  Everyone says this class is one of the hardest, but I did not find it to be that way.",No,,,,
8/18/2016 13:10:22,CS 290 - Web Development,4,6-12 hours,"This course starts off quite slowly and ramps up considerably once you get to node. Make sure to nail every assignment, they aren't particularly hard, and for the final project start on it right away. The final focuses on syntax for each of the elements covered, so make sure you have an accurate understanding of what each piece does. ",SU 2016,Yes,CS 340 - Introduction to Databases,3,6-12 hours,"Once you get to joins make sure to practice them a lot to really understand how they work and to cement your understanding of foreign keys. For the final project start on it right away, the real coding videos the last couple of weeks are very beneficial. ",No,,,,
8/19/2016 1:14:51,CS 161 - Intro to Computer Science I,2,6-12 hours,"Early Objects is a great textbook. Take time to do the reading and do a great job on assignments and you will have a good grasp of the material, which will buy you room to miss a few tricky questions on the tests. I did have some prior programming experience so the material came easier to me, as there was less completely new material.",FA 2016,No,,,,,,,,,
8/19/2016 1:17:04,CS 162 - Intro to Computer Science II,4,18+ hours,"Summer course was rough. Topics are not tough to learn, just make sure you have a good grasp of pointers. Just the condensed amount of work in the short time frame made for no weekends/social life to complete the assignments/labs and study for tests each week. I was easily spending 30 hours per week to get an A.",SU 2016,No,,,,,,,,,
8/19/2016 14:36:01,CS 161 - Intro to Computer Science I,2,13-18 hours,Do the practice problems in the textbook,Say 2016,No,,,,,,,,,
8/19/2016 15:21:00,CS 361 - Software Engineering I,1,6-12 hours,Get good group members. ,SU 2016,Yes,CS 362 - Software Engineering II,1,6-12 hours,Course organization is dismal and the assignments are barely graded.,No,,,,
8/20/2016 12:17:43,CS 496 - Mobile and Cloud Software Development,2,18+ hours,"I took it as a summer class, so the pacing might be different vs a normal quarter. The pacing is great, until the last 2 weeks. The last 2 weeks prepare to get wrecked, there were 2 projects and a paper due. It's a very open do whatever you want however you want style class, so if you don't like freedom and need lots of instruction, you might have a hard time in this class. Additionally, I have been playing around making android apps for 6+ months when I took this class, so I didn't have to learn as much.",SU 2016,No,,,,,,,,,
8/31/2016 6:18:25,CS 290 - Web Development,1,6-12 hours,"There is a lot of group work, so anything you can do to make sure your group works well together, with everyone happily contributing, will make this class (even) easier.",SU,No,,,,,,,,,
8/31/2016 6:20:16,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Starts off slower and ramps up (in difficulty) towards the end of the term. Work hard in the beginning of the term and take advantage of open note quizzes.,SP 2016,No,,,,,,,,,
12/4/2016 16:03:17,CS 261 - Data Structures,3,6-12 hours,,FA 2016,No,,,,,,,,,
12/7/2016 17:38:21,CS 325 - Analysis of Algorithms,4,13-18 hours,Schutfort just redid the lectures - they are still awful.  Watch the MIT algorithms lectures instead and save yourself headache.  ,FA 2016,Yes,CS 496 - Mobile and Cloud Software Development,2,13-18 hours,"Don't bother with Wolford's lectures unless you want to use Python/GAE/Windows phone (WHY?!?!) .  I used Ruby on Rails, Heroku, and iOS Swift and it was a lot of work but totally doable.  Make one project out of your assignments rather than a new project for each assignment and you'll have your final project mostly done! ",No,,,,
12/8/2016 6:17:06,CS 261 - Data Structures,3,13-18 hours,Redoing the worksheets was one of the most helpful things for me for studying for the exams,FA 2016,No,,,,,,,,,
12/9/2016 16:47:19,CS 361 - Software Engineering I,1,0-5 hours,,FA 2016,Yes,CS 340 - Introduction to Databases,2,0-5 hours,Start early on the final project,No,,,,
12/12/2016 6:41:43,CS 340 - Introduction to Databases,3,6-12 hours,"Complicated queries with joins, along with relational algebra, can be difficult concepts.  The course starts out slow and picks up in the last few weeks, mostly due to the course project.",FA 2016,Yes,CS 290 - Web Development,4,13-18 hours,"The first few weeks are cake - the last few weeks are time-consuming and the content is very detailed and complex (for me). Work ahead if you can (modules may not be available ahead of time), and, if you have extra time, learn about node.js and express ahead of time. The two recommended texts are useful, and the JavaScript text 'Eloquent JS' is available online for free.",No,,,,
12/12/2016 14:59:29,CS 162 - Intro to Computer Science II,3,18+ hours,Budget your time. There is a lot of work but the grading was pretty easy so don't spend too much time on the labs which are a lot less points than the assignments,FA 2015,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"The material is not too difficult, but with other obligations you may find that you just need more time to let it really sink in.",No,,,,
12/12/2016 21:19:10,CS 344 - Operating Systems,2,0-5 hours,Start the projects early and keep a steady pace. The projects aren't hard but you don't want to do them the night before they are due. ,FA 2016,Yes,CS 361 - Software Engineering I,1,6-12 hours,The course material is easy but projects can be time consuming depending on your groups collective knowledge and availability. ,Yes,CS 325 - Analysis of Algorithms,5,13-18 hours,"Study as much as you possibly can. Unless you are naturally gifted in the material its going to take some work. That said use as many outside resources as possible (search MIT, Cal Tech, etc) as the actual course content is lacking."
12/14/2016 11:12:16,CS 344 - Operating Systems,4,18+ hours,The concepts are not too difficult to understand but implementing them in a program can lead to some stressful days.  Listen to everybody who says start the programs early instead of waiting until the deadline.  The class discussion board is great for help and to see that you are not alone with these problems.,FA 2016,Yes,CS 362 - Software Engineering II,1,6-12 hours,"This term was the first one using Java instead of C, so the hardest part at the start of the class was getting familiar with Java since it is not taught in the intro classes anymore.  The class teaches about testing, so you do not have to write functioning programs, you have to test ones that should be functioning.",Yes,CS 372 - Intro to Computer Networks,2,6-12 hours,
12/15/2016 0:18:29,CS 325 - Analysis of Algorithms,4,18+ hours,Use someone else's lectures. ,FA 2016,Yes,CS 496 - Mobile and Cloud Software Development,3,18+ hours,Not a difficult nor easy course. Just very time consuming so plan accordingly. ,No,,,,
12/15/2016 15:13:51,CS 325 - Analysis of Algorithms,2,13-18 hours,"I found the lecture videos to be sufficient and didn't find the MIT lectures helpful at all, despite popular opinion.  Watch them at 1.5x speed.  For exams, study the homework and the sample midterm.  Understand why you are using the approach you are using and how to apply it to another situation.

If you have taken calculus, it will be extremely helpful in understanding asymptotic complexities.  I'd advise bringing a graphing calculator capable of calculating limits to the exam.",FA 2016,Yes,CS 372 - Intro to Computer Networks,3,0-5 hours,"Like the other Redfield/Paulson class (assembly), this class is similar in structure and has tons of information.  You can use notes on the exam, but be prepared to cram lots of information on it.  I'd advise taking 344 before this because the last project in 344 has a lot of code which can be reused for this class' projects.",No,,,,
1/31/2017 13:03:14,CS 161 - Intro to Computer Science I,4,13-18 hours,"Read the book. I had prior JavaScript experience, but even without that, the book is well written. DO NOT wait to start programs each week. There are late days starting Winter 17, but there were not my quarter and this burned me. ",FA 2016,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"I had not taken a math class in 10+ years. I did terribly on ALEKS, but I went through most of the modules. I came out with a B+ and was thrilled. The quizzes and HW are basically the tests. Show all of your work-she is very generous on a couple points here and there. ",No,,,,
2/20/2017 13:15:15,CS 161 - Intro to Computer Science I,3,13-18 hours,,WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,,No,,,,
2/21/2017 5:39:20,CS 161 - Intro to Computer Science I,2,6-12 hours,"Spend extra time learning the pointers.  These will be a major component of 162.  The workload in this course is far less than 162, so make sure you use the extra time to really understand the topics, peruse chapter 11 in Gaddis, and dive head first into double pointers (indirection.)

161 tests are basically T/F and code tracing. Be prepared to trace code without a computer/compiler.",FA 2016,No,,,,,,,,,
2/21/2017 23:22:57,CS 165 - Intro to Computer Science (Accelerated),3,6-12 hours,,SP 2016,No,,,,,,,,,
2/22/2017 9:37:17,CS 165 - Intro to Computer Science (Accelerated),2,0-5 hours,"The first few assignments are very easy, but the latter few will probably take extra time to debug",FA 2016,Yes,CS 225 - Discrete Structures in Computer Science,3,0-5 hours,"Be comfortable with basic algebra and learn properties of integers and rational numbers. Overall, the grading in the class was pretty easy, but some people have a hard time with logic and proofs. Fortunately, everything is covered in the textbook, so if you can remember the proofs from there, you will probably be fine.",No,,,,
3/8/2017 21:13:57,CS 162 - Intro to Computer Science II,4,18+ hours,,WI 2017,Yes,CS 271 - Computer Architecture & Assembly Language,2,13-18 hours,,No,,,,
3/8/2017 21:14:54,CS 161 - Intro to Computer Science I,3,6-12 hours,,FA 2015,No,,,,,,,,,
3/16/2017 8:03:23,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,"- Alcon likes to ask ""gotcha!"" questions on the exams.  Be prepared to parse and pay close attention to simple, but tricky questions.",WI 2017,No,,,,,,,,,
3/17/2017 10:56:12,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,,WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,1,0-5 hours,,No,,,,
3/19/2017 13:21:12,CS 271 - Computer Architecture & Assembly Language,3,18+ hours,"I actually didn't think this class was that hard, just a lot of work.  If you can review x86 Assembly basics before starting this course, then it'll make things go more smoothly.",WI 2017,Yes,CS 361 - Software Engineering I,2,6-12 hours,"The first half of the class doesn't have much activity, things ramp up a little in the second half of the class.  You will likely be doing a web based project, for Project B so having completed 290 and 340 before taking this class is a good idea.  Be prepared though if Rooker is teaching it.   Here are some things to watch out for:
Discussions - Rooker expects you to comment regularly in the discussions he posts for credit, so put a few comments in every couple of days
Group Evaluations - put comments in for every thing, and don't forget to evaluate the customer.",No,,,,
3/20/2017 20:34:29,CS 325 - Analysis of Algorithms,5,18+ hours,Programming the algorithms up in Python and trying them out helped my understanding a lot.,WI 2017,No,,,,,,,,,
3/20/2017 20:46:10,CS 361 - Software Engineering I,1,0-5 hours,"Take control of your group as soon as it is assigned.  Initiation communication on Google Hangouts (set up a group chat).  Set up file structure in Google Drive.  Do not leave anything to chance.  Drive the performance of your team.  Ask them why they've been radio silent for 6 days.  Badger them to complete their tasks.  Don't be shy.

Review the starred slides weekly for just a few minutes.  By the time the final comes around you'll be ready to go.",WI 2017,No,,,,,,,,,
3/20/2017 21:19:44,CS 161 - Intro to Computer Science I,3,18+ hours,Don't get behind on the reading. The textbook is your friend. Join slack!,WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,18+ hours,,No,,,,
3/21/2017 2:35:15,CS 161 - Intro to Computer Science I,3,6-12 hours,,wi 2017,No,,,,,,,,,
3/21/2017 7:53:33,CS 165 - Intro to Computer Science (Accelerated),3,6-12 hours,"The most important topics are C++ syntax, pointers, and object oriented programming.

Make sure you learn how to use valgrind, and write your own comprehensive tests for each assignment.",WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,13-18 hours,"The hardest part of this course is proofs, especially by induction. Quiz and exam proof questions are frequently taken straight from the book.

The professor provides plenty of practice exams, and they are very closely aligned with the real exams.",No,,,,
3/21/2017 9:21:12,CS 165 - Intro to Computer Science (Accelerated),3,6-12 hours,Start projects early. There were many times where I would wait until the last minute and have to work most of the day to finish. Would've been much easier to do little pieces every day. ,FA 2016,Yes,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,Not a very difficult class. Induction can be a difficult concept at first but there are plenty of outside resources and example problems. The grading is also very lenient on exams.,No,,,,
3/21/2017 10:41:00,CS 261 - Data Structures,3,6-12 hours,Revisit the worksheets to study for the midterm/final.,WI 2017,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Debugging and stepping through a program helped keep track of registers,No,,,,
3/21/2017 17:31:29,CS 162 - Intro to Computer Science II,4,18+ hours,Larger labs and projects. Make sure you understand pointers and how memory leaks work.,Winter 2017,No,,,,,,,,,
3/22/2017 4:34:54,CS 352 - Introduction to Usability Engineering,1,6-12 hours,,WI,No,,,,,,,,,
3/22/2017 5:29:48,CS 362 - Software Engineering II,1,6-12 hours,"Do what you think you need to do, then do 20% more, and you should be guaranteed an A.  I have 100% in the course going into the final.  They seem to like volume over substance.  Some of the assignments were kind of long - and they realize they didn't give you enough time, but don't start it earlier despite having nothing assigned before it.",WI 2017,Yes,CS 464 - Open Source Software,1,0-5 hours,Don't really need to do more than skim the readings and watch the short videos.  Just write more than you think you should and you can probably get an easy A.  Include a little material from the readings/lectures and you should be golden.  Find a project you want to work on early and start getting familiar with it.,No,,,,
3/22/2017 8:35:42,CS 340 - Introduction to Databases,2,0-5 hours,"If the course still uses PHP for the final project, use it.  You can reuse the example code provided which makes it easier.",WI 2017,No,,,,,,,,,
3/22/2017 11:23:24,CS 372 - Intro to Computer Networks,3,6-12 hours,Reading isn't required but you will have to do some googling on things not completely covered. I lucked out and had a very active weekly discussion group which contributed to my learning immensely so if that doesn't happen be the one to ask questions!,WI2017,No,,,,,,,,,
3/22/2017 12:03:03,CS 290 - Web Development,4,13-18 hours,"Don't rely on the course content; Justin Wolford's teaching style does not work for everyone. 

If you're struggling with the concepts, don't punish yourself by trying to use the modules. Instead, figure out what they want you to know and go find a good resource from which to learn.",WI 2017,Yes,CS 340 - Introduction to Databases,3,6-12 hours,"Get started on the project as early as possible. Ideally, have each part of the final project done immediately after you are taught it. That way, you have the remaining weeks to figure out the website implementation, which is a ball-buster (or ovary-buster).",Yes,CS 261 - Data Structures,3,6-12 hours,"Don't be afraid to use outside resources. The lecturer did a poor job of editing his videos. 

He frequently misspeaks and has to clarify what he's saying, and it's almost always in the middle of a complicated concept. Goodbye, train of thought."
3/22/2017 12:07:53,CS 261 - Data Structures,3,6-12 hours,"Provided book isn't that great, try Mastering Algorithms with C.  Professor is nice but a bit scatterbrained.",WI 2017,Yes,CS 271 - Computer Architecture & Assembly Language,5,13-18 hours,"Well organized but midterm, final, and last few quizzes are tough.  Make sure to double-check your calculations carefully on these.",No,,,,
3/22/2017 12:14:36,CS 464 - Open Source Software,1,0-5 hours,"Very light course.  Lots of writing assignments, pretty much no coding at all.  No groupwork.",WI 2017,Yes,CS 419/467 - Software Projects,3,6-12 hours,"Try to form your own group and have a clear vision what you want to do.  Brewster is very flexible with what he'll let you do.  Don't be too ambitious because you will have time problems, no matter what.

Difficulty in the course will depend on the project you select and how well you work with your teammates.  You are expected to work at least 100 hours per person on the project and you will do weekly video updates based on what everyone did that week.  There's a midpoint check where you will submit all working code to Brewster and he will determine if you've made sufficient progress. If you haven't, then he'll break the group up and you'll all do your own project and the highest grade you can get is a B.

Your grade for the final project is graded based on how much you did in addition to the project being bug free, the requirements being met, etc. ",Yes,CS 362 - Software Engineering II,2,0-5 hours,"Try to come in with a group already formed.  The course is mostly in C, writing test cases for various cards and functions for the game Dominion, written in C.  The code base is insanely buggy.  Keep your local repo handy, because the entire class uses the same repo, so you can imagine how many times stuff gets overwritten.  The final project is writing test cases in very simple Java.  I didn't study Java at all and did well.  Some of the individual assignments (which are in C) are long and tedious."
3/22/2017 14:38:24,CS 344 - Operating Systems,3,6-12 hours,Start projects as soon as possible,WI 2017,Yes,CS 325 - Analysis of Algorithms,5,13-18 hours,Hardest course I have taken I think. Try to find a good group and I recommend using Python as your language. ,Yes,CS 361 - Software Engineering I,2,0-5 hours,Be very active in trying to find requirements because the class is not formatted well. Make sure to read email for random updates from the professor.
3/22/2017 14:45:31,CS 261 - Data Structures,2,13-18 hours,,WI 2017,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,,Yes,CS 290 - Web Development,2,6-12 hours,
3/22/2017 17:32:23,CS 162 - Intro to Computer Science II,4,18+ hours,"Base your work off of the assignment PDFs, not what that TAs post on Piazza. Form a group on google hangouts/slack and communicate with other students! ",WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,Don't stress. Material is confusing but they grade fairly easily. Follow the study guides and practice tests and you'll be fine. ,No,,,,
3/22/2017 18:24:11,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"Midterm was much easier than the Final. Do well on the quizzes and you won't have to worry about the final. Final and Midterm are very fair. If you can do the quizzes/exercize slides, you don't need to worry about the exams.",W2017,Yes,CS 261 - Data Structures,3,6-12 hours,"Harder than 271, but doable. Weekly meetups with your group members. More coding needed than 271. Recommend you do all the worksheets and know them very well.",No,,,,
3/22/2017 18:33:37,CS 352 - Introduction to Usability Engineering,3,13-18 hours,,WI2017,Yes,CS 162 - Intro to Computer Science II,2,13-18 hours,,No,,,,
3/22/2017 18:41:20,CS 340 - Introduction to Databases,3,13-18 hours,Start on your project early.,WI 2017,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"This class is hard, but well structured and fair.",No,,,,
3/22/2017 20:51:32,CS 161 - Intro to Computer Science I,2,6-12 hours,Study pointers and start your projects early! Also practice your hand coding. ,WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,Do all the homework problems seriously. Samina takes so many exam questions from hwk and prior quizzes. Really just memorize how to do the problems and the exams should be okay. Also almost any assignment or quiz question can be found using the power of Google.,No,,,,
3/22/2017 21:26:40,CS 165 - Intro to Computer Science (Accelerated),3,13-18 hours,,WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,Just do the homework and have it open when u take quizzes,No,,,,
3/22/2017 22:48:55,CS 162 - Intro to Computer Science II,4,18+ hours,Pointers pointers pointers. This class is heavy on pointers so be sure to know your pointers.,WI 2017,No,,,,,,,,,
3/22/2017 22:58:16,CS 162 - Intro to Computer Science II,4,13-18 hours,,WI 2017,Yes,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,,No,,,,
3/23/2017 6:45:20,CS 419/467 - Software Projects,1,6-12 hours,Fund a good group and don't be too ambitious.,Wi 2017,Yes,CS 464 - Open Source Software,1,0-5 hours,,Yes,CS 362 - Software Engineering II,4,13-18 hours,
3/23/2017 8:13:35,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Set aside time with no distractions where you can really concentrate on the lectures. Then do the reading. THEN watch the lectures again, do the self check exercises (do not skip these). You can do the weekly summaries along with lectures and reading as  you have 6 hours and two tries. COPY these down somewhere (Word or whatever). This is because the quizzes and exams are identical to the concepts you'll see here. Lastly, projects aren't TOO bad if you understood the content. He gives lots of hints in the lectures!",WI 2017,Yes,CS 161 - Intro to Computer Science I,2,6-12 hours,"You should be able to get 100 on all programming assignments if your code works. Read the book-it is pretty good. Watch Bucky's videos for stuff that doesn't click. Alcon is great on Piazza(very dry, don't let this discourage you). If you know anything about any programming language, you should ace this course. ",No,,,,
3/23/2017 9:01:15,CS 464 - Open Source Software,2,0-5 hours,Start working on open source contributions early - it's amazing how long it can take to get started on open source.  ,WI 2017,Yes,CS 419/467 - Software Projects,2,6-12 hours,I spent 10 hours a week on the capstone project - work diligently and it isn't a big deal!  Try to have a group picked out ahead of time so you keep the group drama to a minimum.  ,No,,,,
3/23/2017 9:28:00,CS 161 - Intro to Computer Science I,3,6-12 hours,"Start early on the assignments. Utilize the resources available, such as the Slack channel and Piazza, they are especially helpful for later assignments.  I would read the required reading before working on the assignments, but as the class progressed this took time away from actually working on the assignment that was due, so I would suggest reading the relevant parts for the assignment and once the assignment is done read thoroughly for the test. Do not take test 1 lightly. There are many gotcha's that can hurt your score. Pay attention to any notes in the text labeled 'warning' and also practice hand tracing code. ",WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"The class starts off fairly challenging but levels off towards the end. If you have never done proofs before, the class goes over direct proofs, proof by contraposition, by contradiction and by (weak and strong) induction. The proofs were the most challenging part for me.

If you have not taken any math classes in a while, I would suggest practicing some algebra using the ALEKS program. Things like factoring, combining like terms, properties of different number types and other math concepts are useful for proofs. 

It is doable just put in the time. ",No,,,,
3/23/2017 14:54:17,CS 162 - Intro to Computer Science II,3,18+ hours,,WI 2016,No,,,,,,,,,
3/23/2017 17:29:38,CS 161 - Intro to Computer Science I,3,6-12 hours,,WI,Yes,CS 225 - Discrete Structures in Computer Science,4,18+ hours,Refresh you algebra.,No,,,,
3/24/2017 20:08:25,CS 161 - Intro to Computer Science I,4,13-18 hours,,Winter 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,,No,,,,
3/25/2017 18:02:07,CS 162 - Intro to Computer Science II,2,18+ hours,Make sure you have a lot of time.  This class took more than 30 hours every week and sometimes more than 40.  Know pointers and dynamic memory allocation inside and out.  ,WI 2017,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Study study study.  Technically difficult but great class.,No,,,,
3/26/2017 1:49:51,CS 373 - Defense Against the Dark Arts,3,6-12 hours,"Really rough in terms of organization, tools and instructions. I wouldn't recommending taking this as an elective. ",WI2017,Yes,CS 419/467 - Software Projects,4,18+ hours,Go into this class with groupmates you know will work well.,No,,,,
3/26/2017 10:09:02,CS 161 - Intro to Computer Science I,2,6-12 hours,"I've been through CS50 before taking the course so if you're a brand new coder my advice may not be very useful. 

This class was easy and as others say the textbook is phenomenal. Don't get too cocky for the exams because they are very detail oriented. The textbook has blurbs that begin with: ""Note"" or ""Warning"" pay close attention to those 'notes' and 'warnings' as they may make there way unto the exam. ",Winter 2017,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"I had a very interesting relationship with this class. Sometimes I loved it, other times I hated it. Looking back, I really do enjoy the material. I didn't find that this class get harder/easier after a certain point in the course - I think it remained at the same level of difficulty for the most part. I read somewhere that induction is the hardest part of the course, but unfortunately that was not the case for me and many others in the class. Permutation and combinations were very challenging (2nd to last week).

You'll find that most weeks are challenging since everything is new stuff but then you look back and study for the midterm/final and you're a pro at all the stuff before. Induction becomes fairly simple after a few weeks of letting it sit in your head, so don't sweat it if it's taking you a while to grasp it immediately. 

Regarding the lectures, for some weeks they were good and others they weren't. I found them more useful in the beginning , very weak during the middle, and better the last weeks. You'd think the practice problems they go over in the lectures would help you in the HW but for most weeks they don't. Apparently the lectures were made while they were using another textbook. Be prepared to watch youtube videos - plenty of great content on there. TrevTutor was especially helpful for me. ",No,,,,
3/26/2017 15:39:45,CS 373 - Defense Against the Dark Arts,1,6-12 hours,"-The course consists mainly of weekly writeups (in the form of blog posts) of the previous weeks materials (week 3 writeup is on week 2 material). The 1st assignment was like a proper lab submission and there was a single graded discussion post and then we just did writeups for the rest of the term. Basically each week there is about 1-2 labs worth of work to complete and then you make a blog post about what you did, what you learned, anything interesting you found and submit a URL to that post. Yeah, that is pretty vague instructions but that's the nature of this class. I would do a writeup of the portion of the lab(s) that I was able to complete for that week and include a bunch of screenshots and commands I used. Sometimes I was not able to get through all of the labs but I still received full credit on my writeups. The Final consisted of recording a ~30 min presentation on a cybersecurity issue of your choice.
-You get as much out of this class as you want. The professor is a ghost. If you are interested in CyberSecurity you have the opportunity to learn a lot, sort of an intro to many different areas of cybersecurity. If you don't give a shit, you can half-ass the writeups and still do fine. I thought the lectures were very interesting and different from the usual OSU format. They were all guest lecturers, different security professionals, most of whom worked at Intel Security and the videos are of the actual lectures given on campus. As a result, there is quite a lot of lecture video each week (about 1-2 hours) where they discuss the materials as well as go over the labs. I only thought the last one on Mobile Security kinda sucked, the rest I enjoyed. If you are interested in the material, and not OCD anal retentive when it comes to instructions or prompt grading (we received grades only 3 times the whole quarter, in week 8 covering weeks 1-7, week 10 covering weeks 7-9, and the final grade), I think you will enjoy this class because it is a class where you can learn a lot AND that is low stress at the same time. I think that is rare in this program. 
-McGrath is sometimes not clear with his instructions and is stubborn. Ask for clarification on the forums if you don't understand something. Some students may be tempted to offer reasonable suggestions for improvements (such as using a single place to post all course information rather than multiple websites or posting all TEACH submission links at the start of the term). He will not listen to you. Regardless, there is NO POINT in being argumentative with him on Piazza. This class is very easy and all you are doing is poking a sleeping bear. 
-TopHat is the ""textbook"" for this class. It's basically the equivalent of Canvas where videos and assignment due dates are posted. He will not allow students to download the videos. There is no point in paying for the year long access because you won't have access to the Virtual Machines so just choose the cheapest option which was the quarter long access for $60.
",WI 2017,No,,,,,,,,,
3/27/2017 6:58:22,CS 496 - Mobile and Cloud Software Development,3,18+ hours,"This one is a sneaky-lot of work IMO. I learned a lot, but it's also currently light on the lessons so you need to dig into some good self learning. I think it's being redesigned tho so stay tuned...",SP 2017,No,,,,,,,,,
3/27/2017 11:13:01,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,Look over the summary exercises and the quizzes before the exams. Do the early extra credits.,SP 2017,Yes,CS 261 - Data Structures,3,6-12 hours,Study the worksheets,Yes,CS 290 - Web Development,4,6-12 hours,Practice is key in this class.
3/27/2017 15:24:40,CS 325 - Analysis of Algorithms,5,18+ hours,"Stay on top of the material because there's a lot of it. Ask questions of the instructor, on the homework group discussions, and among your project group. If you know other students, choose your own project group (3 members) - you will interact with these people a lot. Watch the lectures at 1.5-2.0x speed.",WI 2017,Yes,CS 361 - Software Engineering I,3,6-12 hours,"It's Rooker, so be prepared to try to predict what he wants. Assume anything mentioned, either in passing or on a requirements doc, is a requirement. Participate regularly in the group discussions, or you will lose points. Be a good group member. ",No,,,,
3/27/2017 19:16:19,CS 162 - Intro to Computer Science II,4,18+ hours,"Be ready to work your ass off.  Start assignments early.  Do NOT wait until the weekend it is due to start.  As soon as material is available, dive in right away.  If you get behind, you might never catch up.  Took both this and 225 at the same time while working full time and it was extremely difficult.  Lack of sleep, more caffeine consumption, lack of exercise, weight gain, junk food (due to being glued to the computer chair), burnout, etc...  Learn pointers, input validation, inheritance, and polymorphism early and make classes for things so you can reuse them to save you from duplicating work.",WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"Some weeks I spent less than 2~3 hours on assignments, some weeks you had to spend a little more, thus averaging somewhere between 6 and 10 hours.  I pulled through due to prior math knowledge and doing quite a lot of ALEKS prep before the course.  This class is one where if you took it by itself, it would seem like it was too slow or too little.  However, a solid time investment should get you a 100% final grade.  The grading is very lenient, just make sure you do the work and put in a little genuine effort.  People made a big deal about induction, but it wasn't that bad.  Weak induction is pretty easy, but there are some tricky things you can do with algebra that aren't taught very well.  Strong induction is probably one of the more difficult sections in the course, but it isn't that bad.  Put in a few extra hours and you will be fine.  Definitely use some outside resources to supplement the book.",No,,,,
3/28/2017 2:24:25,CS 261 - Data Structures,3,13-18 hours,Review the worksheets for the midterm and final. Programs are fairly easy. ,WI 17,Yes,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"Took course during redesign period. Course itself is very easy. If your group cooperates it's best to split up each submission to minimize the workload for any one person. Final, no cheat sheet. No midterm. 4-5 short, timed quizzes which can be taken 2x",No,,,,
3/28/2017 8:11:47,CS 362 - Software Engineering II,1,0-5 hours,You can stop watching the lectures after the 2nd or 3rd week of class. The first quiz was the only thing that tested concepts. The only thing that caught me off guard was the length of home work 3 (unittest for dominion code). ,WI 2017,Yes,CS 496 - Mobile and Cloud Software Development,2,6-12 hours,I did the restructured version of the class. Class was split into half cloud half android programming. All but one of the home works were project based. As long as you stay on top of the material the class is pretty easy.,No,,,,
3/28/2017 11:21:26,CS 344 - Operating Systems,3,6-12 hours,,WI 2017,Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,,No,,,,
3/28/2017 11:36:03,CS 161 - Intro to Computer Science I,3,6-12 hours,"Keep ahead in the reading, practice extra problems in checkpoints and the review questions, learn pointers very well. ",WI 2017,No,,,,,,,,,
3/28/2017 15:31:41,CS 165 - Intro to Computer Science (Accelerated),2,0-5 hours,"If you have taken an intro course before, you can skip/skim over the lectures/readings. A lot of the exam questions come from the textbook, so review it before the test.",WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,1,0-5 hours,,No,,,,
3/28/2017 19:07:12,CS 261 - Data Structures,2,0-5 hours,"First half of the course is pretty easy, second half it gets a bit tougher so be prepared. As long as you do well on all the homework you should be in a good place for the exams",WI 2017,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Definitely a higher learning curve for this class compared to others. Make sure you follow all the criteria laid out for the homework and get all the points in the summaries and quizzes and you should be fine.,Yes,CS 352 - Introduction to Usability Engineering,1,0-5 hours,This course is a bit annoying because there is a lot of subjectivity when grading. Make sure to participate more than you think you should in the discussions or be prepared to be counted off. 
3/28/2017 20:28:25,CS 290 - Web Development,3,13-18 hours,"Don't skip the lectures. The videos/notes can be boring, but they give you a lot to get started with for the assignments. Definitely check out the class examples that you clone from Git during the first week, these are very useful towards the end of the class for the node.js/express/handlebars assignments. Start every assignment as soon as you get it, and write your code in small testable units. ",WI 2017,Yes,CS 340 - Introduction to Databases,3,6-12 hours,"Go through the lectures...they're boring (duh, they're lectures) but they're informative and will give you plenty from which to start your assignments/project. Start your project early, work on it in small bits when you finish each week's normal assignments...if you wait until you get a ""break"" from assignments to do it...you will be using time better spent studying for finals. ",No,,,,
3/28/2017 22:33:02,CS 261 - Data Structures,2,6-12 hours,"Try to find a good group in the beginning because you will be doing the weekly worksheets with them. All of the assignments are based off of the worksheets, so it's important to do them right.",WI 2017,Yes,CS 290 - Web Development,2,6-12 hours,"It's easy to get A's on all of the assignments (the last couple are harder) and in the class doing the bare minimum, but you won't learn much. If you are interested in web dev, you'll have to put in extra work than what it required. ",No,,,,
3/28/2017 23:31:48,CS 161 - Intro to Computer Science I,2,0-5 hours,,WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,Make sure you know Induction!,No,,,,
3/29/2017 5:43:43,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,"If you have some experience with OOP, this class is not difficult",Winter 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,13-18 hours,Certain topics are challenging later on in the quarter. Read the book. That is your best resource. They grade easily and give a lot of partial credit ,No,,,,
3/29/2017 8:14:13,CS 261 - Data Structures,2,6-12 hours,"Don't over think the assignments.  The data structure implementations are not overly complicated, and the worksheet solutions get you halfway there.",WI 2017,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,The course material (lectures and text) is very good and is really all you need to complete all the assignments.  Every programming assignment has extra credit options.  Make sure to do at least some of them.  They do not add a whole lot of complexity to the programs and the extra points will come in handy.  ,Yes,CS 290 - Web Development,2,13-18 hours,"It's been said before, but the course is seriously weighted to the last few weeks so after mid-term, make sure to stay on top of your other classes.  The final is not a gimme, but it is not difficult to go in to it with nearly full marks from the rest of the assignments."
3/29/2017 20:03:51,CS 372 - Intro to Computer Networks,2,13-18 hours,Take all of the quiz attempts and use these questions to study for the midterm and final. Also use the weekly exercises to study for the exams. It was helpful to have taken 344 before this as the programs built off of the cipher assignment from 344 with sockets.,WI 2017,Yes,CS 419/467 - Software Projects,1,6-12 hours,The class is really open ended and Brewster is very encouraging. Enjoy it and create something for the resume!,No,,,,
3/29/2017 20:57:40,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,"If you understand the readings (and especially if you've programmed before) then the assignments are very straightforward. The first exam was a little tricky so make sure you prepare, but the second seemed like you would do well if you did the assignments.",WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Use the answer keys from the quizzes for how to format your answers. It can be a little confusing how to format the homework based off of the lectures and book, but you get a demo quiz every week whose answers will make it clear on how you should format everything.

Most people struggle a little with induction, but the trickiest parts of induction just involve manipulating equations with algebra. It's definitely the hardest homework, but don't psych yourself out over it and you'll figure it out. ",No,,,,
3/29/2017 22:19:56,CS 165 - Intro to Computer Science (Accelerated),3,13-18 hours,"Study your pointers (I thought it was a joke passed around by students, but no actually study your pointers) and NEVER go a week without understanding the material in and out, because it all builds on itself. For example, if you don't know how to create variables (week 1), then you won't be able to create methods, and if you don't understand methods (week 3) then you can't create classes, and if you don't understand classes (Week 5) then you won't be able to create class interactions (week 7) etc... then you're screwed from week 1 lol",WI 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"Do all the homeworks, even if they aren't worth a whole lot, because it will help you understand how to approach the quizzes. This class is all about recognizing patterns. I'd say this class is easy if you have decent algebra skills and are good at memorization. This class is definitely doable otherwise, as all the math/logic tools you need to approach most questions are taught/reviewed during the course.",No,,,,
3/30/2017 1:15:41,CS 261 - Data Structures,4,13-18 hours,,SP2015,No,,,,,,,,,
3/30/2017 11:33:49,CS 464 - Open Source Software,1,0-5 hours,Take this course if you are not interested in learning and want an easy A. I was able to skip the final project and still have an A. ,WI 2017,Yes,CS 344 - Operating Systems,3,13-18 hours,"This course was challenging but doable. Like everyone said, start the projects early. I had to turn in one project late because the entire weekend was not enough time. Brewster is the best professor and this is by far the best course of the program. ",No,,,,
4/1/2017 7:17:07,CS 340 - Introduction to Databases,1,0-5 hours,I spent more time setting up the client side of my final project than on the actual database parts. ,WI 2017,No,,,,,,,,,
4/2/2017 0:52:10,CS 290 - Web Development,1,6-12 hours,Learn Javascript and some web development basics before taking the course. It's easy to get an A but doesn't teach the material well. ,Winter 2017,Yes,CS 325 - Analysis of Algorithms,1,0-5 hours,Easy class. Doesn't teach much. ,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Good class. 
4/2/2017 7:24:42,CS 464 - Open Source Software,1,0-5 hours,"This course was very light. The biggest thing for me was choosing a project to work on. That was a little intimidating, but once I choose one I was good. I would also recommend choosing an active project so you have other people to talk about the project with. This class would be really easy to pair with a more involved course, I wish it wasn't the only class that I took.",WI 2017,No,,,,,,,,,
4/6/2017 13:02:33,CS 162 - Intro to Computer Science II,4,13-18 hours,"Start early, read Piazza daily, and don't be afraid to Google. This class WILL take you more time than you're used to from 161. Also - the first few weeks are the worst, really make sure you've set aside ample time for those first few weeks.",WI 2017,No,,,,,,,,,
4/17/2017 17:15:29,CS 162 - Intro to Computer Science II,5,18+ hours,,WI 2017,No,,,,,,,,,
5/4/2017 22:14:55,CS 161 - Intro to Computer Science I,1,6-12 hours,,FA 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,13-18 hours,,No,,,,
5/24/2017 20:11:55,CS 161 - Intro to Computer Science I,2,6-12 hours,"This wasn't the first programming course I have taken. If you prep before and learn basic programming in c/c++, you'll easily ace the class.",WI 2016,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"I hadn't taken a math class in 10 years and I struggled. Ended up with an A, but it took a lot of effort. Use the study guides for the tests and review all of the questions listed. If you understand those, you'll do just fine.",No,,,,
6/10/2017 10:25:05,CS 344 - Operating Systems,4,18+ hours,"Get started early on the programs, as long as you do that you should be good.",SP 2017,Yes,CS 372 - Intro to Computer Networks,3,13-18 hours,There's a lot of memorization.  The weekly summaries require a bit more digging than the summaries did in 271.,No,,,,
6/11/2017 15:20:04,CS 344 - Operating Systems,4,18+ hours,"Start your projects early. Some of the projects can seem overwhelming, so break them up into doable chunks and work steadily on one or two pieces a day.  Try to finish each project at least a week before it's due, so that if you misjudge your ability to complete all the requirements, you'll have the time you need to finish.",SP 2017,No,,,,,,,,,
6/11/2017 18:27:16,CS 161 - Intro to Computer Science I,4,6-12 hours,"The programming assignments were not bad or difficult, however Alcons midterm and final were seriously on another level.  For the midterm the whole class , including myself thought we did well, however our grade showed otherwise. Make sure you hand trace and practice writing code, and take some time to read the test questions, dont just breeze through them.  

The only reason why I am giving the class a 4 rating is because of the   exams.  ",winter 2017,No,,,,,,,,,
6/12/2017 9:57:55,CS 344 - Operating Systems,2,13-18 hours,"There is a lot of lecture content, so what it early otherwise you wont have enough time for the projects.  The projects are large but the requirements provided are detailed.  Just code towards passing the grading scripts - don't worry about extra features.  Take advantage of the Slack room (details are on the subreddit) because Brewster is active in there in addition to Piazza",SP 2017,No,,,,,,,,,
6/12/2017 21:58:46,CS 361 - Software Engineering I,2,0-5 hours,"The first project is not too bad. Make sure everyone is on board with the IDE, timelines, and coding for the second project. Don't overcomplicate it.

Rooker is very hands off of this class and discussions are graded sporadically. ",SP 2017,No,,,,,,,,,
6/13/2017 5:07:50,CS 261 - Data Structures,3,6-12 hours,"Aside from poorly written exams, the class was okay. Learn to love https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",SP 2017,Yes,CS 290 - Web Development,3,6-12 hours,"Extremely backloaded workload with the database assignment coming right after the how-to guide. Minimal engagement from the instructor, so Slack is probably your best bet for getting help.",No,,,,
6/13/2017 5:36:18,CS 496 - Mobile and Cloud Software Development,2,6-12 hours,"If your group sucks you'll have a bad time, you're with these people for the whole term. If you suspect that things are going to go sideways start documentation, meeting notes, chat logs, etc as soon as possible.",SP2017,Yes,CS 475 - Intro to Parallel Programming,2,6-12 hours,The projects are pretty easy just be sure to know the why behind the results. This is probably the most interesting course I took. You can tell Bailey is passionate about the subject which helps keep you engaged.,No,,,,
6/13/2017 5:50:49,CS 419/467 - Software Projects,2,0-5 hours,Find a good group. Choose one of the pre-canned projects if you want lighter workload. ,SP,Yes,CS 325 - Analysis of Algorithms,4,6-12 hours,Focus on collecting as many points as you can from the HWs/Discussions/Projects. They add up quickly so that you don't need to do crazy well on the exams to pass the class.,No,,,,
6/13/2017 8:53:06,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,Practice a lot by testing the code samples from the book and assignments. ,SP 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"Brush up on your algebra before taking this. There are some really complicated algebraic operations, especially with the strong induction.",No,,,,
6/13/2017 9:57:32,CS 162 - Intro to Computer Science II,2,13-18 hours,,SP 2017,Yes,CS 271 - Computer Architecture & Assembly Language,2,13-18 hours,,No,,,,
6/13/2017 10:13:02,CS 162 - Intro to Computer Science II,5,13-18 hours,,FA2015,No,,,,,,,,,
6/13/2017 14:10:09,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Start early and do the extra credit early on in the course. The later programs are time consuming. ,SP 207,Yes,CS 352 - Introduction to Usability Engineering,2,6-12 hours,Set up a schedule with your group of times to meet. Breakup all the portions of the assignment so that everyone knows what they are responsible for. Communication is key. ,No,,,,
6/13/2017 16:12:10,CS 161 - Intro to Computer Science I,2,6-12 hours,,SP 2017,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,,No,,,,
6/13/2017 20:32:30,CS 261 - Data Structures,2,6-12 hours,,SP 2017,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,,No,,,,
6/14/2017 10:03:20,CS 325 - Analysis of Algorithms,4,6-12 hours,You can get a lot out of this class if you have the time to really focus on it. It's really interesting stuff. I wish I'd taken it by itself rather than doubling it up and working full time.,SP17,Yes,CS 362 - Software Engineering II,2,6-12 hours,"It's not difficult, but the assignments can take some time if you want to do them well.",No,,,,
6/14/2017 10:29:49,CS 162 - Intro to Computer Science II,4,18+ hours,"Get started early. Read early. Do the labs early so that A) you understand the material and B)you have more time to do the projects. Use your late days wisely. There is a generous late policy. Better to lose 10% and be a day late than turn in an incomplete project with memory leaks. Despite wanting to quit altogether at least 10x....I will end up with either a high B or low A and I learned a ton. Oh, and some weeks it seriously took me 25-30 hours. No exaggeration. ",SP 2017,Yes,CS 352 - Introduction to Usability Engineering,2,0-5 hours,"1)Avoid this course even if you are interested in UX/UI. 2)If you must take it, I hope you are assigned a good group. I got insanely lucky and was put in a group with the only other person I know personally in the program, plus 2 other really great group members. If you have that you'll be golden and the class should take no more than 4 hours a week at a stretch. 3)The final is short answer & multiple choice on the reading and lectures...and it's 25% of your grade. ",No,,,,
6/14/2017 11:15:59,CS 161 - Intro to Computer Science I,2,6-12 hours,"Watch the lecture videos, they often cover the same principles that will be applied to the week's project.

Reading the textbook is good for gaining basic understanding of programming principles, but implementing what you've learned through the completion of the assignments is far more helpful for overall development.

Learning how to hand-trace code is important for the exams, and the textbook has checkpoint questions within each chapter that are very useful for studying.",SP 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"Don't give up if you don't understand a concept at first exposure.  I'd often have to watch the lectures and read the book a couple times to let the information really sink in.  After you have a decent understanding, most problems are fairly straightforward.

Grading on the quizzes and exams is very fair, so be sure to show work or exhibit some level of understanding even if you can't get a final answer that you believe is correct.

The practice quizzes and exams are extremely similar to the actual versions, so use those as guides when preparing.",No,,,,
6/14/2017 11:53:09,CS 162 - Intro to Computer Science II,4,18+ hours,"Review pointers A LOT. You will need to figure out a menu function, input validation function and makefile in week 1 so if you can learn those in advance - do so!",SP 2017,No,,,,,,,,,
6/14/2017 15:44:24,CS 162 - Intro to Computer Science II,4,18+ hours,"Learn makefiles, input validation, and pointers before taking the class. Start assignments immediately, if you fall behind it is very hard to catch up",SP 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"This is a logic course, not so much a math course. Review basic algebra and you'll be ok",No,,,,
6/14/2017 15:54:36,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Get a chegg.com subscription for help with answers. Do more than just the assigned homework questions: do the practice quizzes, do the previous homework(s), do the example problems that have answers in the back of the book. The midterm is harder than the final. Review fraction multiplication, division, addition. Class gets hard around week 4, 5, then really calms down around week 6, 7 and 10. YouTube has better video tutorials than the class. ",SP 2017,No,,,,,,,,,
6/14/2017 16:38:20,CS 340 - Introduction to Databases,2,0-5 hours,Start the final project ASAP. Take the time to understand advanced SQL queries. ,SP 2017,No,,,,,,,,,
6/14/2017 20:47:34,CS 419/467 - Software Projects,3,18+ hours,"This class can be on the relatively lighter side, or you can put in a lot of work and create a really good project to showcase. Find a team sooner rather than later since that can really make or break you. I would recommend doing a project that is interesting to you AND has technologies/languages for the job you want.  ",SP 2017,Yes,CS 362 - Software Engineering II,3,6-12 hours,"Github familiarity is a must. Learning JUnit, Eclipse, gdb, gcov, and how to write basic unit tests will be helpful if you want to prepare. Otherwise, light to mid amount of work. Course content is not too difficult.  ",No,,,,
6/15/2017 5:36:41,CS 290 - Web Development,3,6-12 hours,"Last 2 weeks are intense, don't procrastinate",SP 2017,Yes,CS 325 - Analysis of Algorithms,4,6-12 hours,"Overall very fair, son't be intimidated by the first 2 weeks",No,,,,
6/15/2017 6:43:21,CS 372 - Intro to Computer Networks,3,13-18 hours,Stay on top of the lectures and weekly quizzes. Start labs and projects early as possible.,SP 2017,Yes,CS 464 - Open Source Software,1,0-5 hours,"Take this class if you just want to get 4 elective credits and want to spend as little time as possible doing work. Its not really worth the tuition cost but if you just want credits to graduate, its worth it.",No,,,,
6/15/2017 7:23:09,CS 340 - Introduction to Databases,2,0-5 hours,Take 290 first.  The final project for 340 is a lot easier if you've already done the final project for 290.,SP 2017,No,,,,,,,,,
6/15/2017 9:05:59,CS 340 - Introduction to Databases,2,0-5 hours,This class is a cakewalk up until the final project. Just make sure you give yourself enough time to do it and it's not that bad. Most weeks had barely any work. You should do well with minimal effort.,SP2017,Yes,CS 344 - Operating Systems,3,13-18 hours,"Certainly not an easy class. Brewster is great though and gives you all the tools you need. Plus, he's very active on Piazza and answers all questions. You'll learn a lot and the projects are interesting. Start them early! You will save yourself so much headache if you start projects early. I didn't twice and I was scrambling at the end.",Yes,CS 361 - Software Engineering I,1,0-5 hours,This class is a joke. Just make sure you get ALL the requirements and follow them exactly. Do not deviate in the slightest and you should do well.
6/15/2017 23:01:26,CS 325 - Analysis of Algorithms,4,13-18 hours,"Find outside sources. I learned very little from the course lectures. Download a chrome plugin to listen to the lectures with 3x speed. She speaks very slowly... Only watch the lectures to get an idea of what to look up/learn yourself and/or see if she mentions anything regarding exams or group work. I did not spend much time on this course compared to other, but I was flying by the seat of my pants the entire term. ",SP 2017,No,,,,,,,,,
6/16/2017 4:47:27,CS 162 - Intro to Computer Science II,4,18+ hours,"Try not to procrastinate. The work isn't terribly difficult, it's just constant and there's a lot of it. The first two weeks ramp up really fast! If you feel like dropping, wait it out. It seemed like things got a bit easier after getting through those initial weeks.",SP 2017,No,,,,,,,,,
6/16/2017 16:30:58,CS 290 - Web Development,2,6-12 hours,After the first half of the class get on the assignments early. The difficulty and time to finish ramps up significantly. ,Sp 2017,Yes,CS 340 - Introduction to Databases,2,6-12 hours,Queries can be really weird. Practice and it makes it not so bad. If you haven't already taken 290 i suggest php for the final project. ,No,,,,
6/17/2017 8:26:27,CS 162 - Intro to Computer Science II,2,13-18 hours,,SP 2017,No,,,,,,,,,
6/17/2017 22:04:31,CS 165 - Intro to Computer Science (Accelerated),3,13-18 hours,"The workload is decent, be prepared to read chapters or familiar with sample codes from textbooks. Usually every week covers 2 chapters. 

Read w/ Video materials, you will find the hw is alright.

Be aware of more reading materials in the first four weeks.

The Professor is always on the Piazza, usually take him 30 mins to response, if you got questions on your codes.

Most TA are reasonable with grading.

",SP2017,No,,,,,,,,,
6/18/2017 6:43:44,CS 290 - Web Development,5,18+ hours,"Be prepared to use google A LOT.  Instructor is completely worthless, and the assignments, though only worth 10 points require 40+ hours a week.",SP 2017,Yes,CS 464 - Open Source Software,1,0-5 hours,Get your homework done on time and it will be super easy to get an A.,No,,,,
6/18/2017 11:23:21,CS 325 - Analysis of Algorithms,4,13-18 hours,Realize early that the book is not going to help you at all.  Outside-OSU sources are very helpful.,SP 2017,Yes,CS 344 - Operating Systems,3,13-18 hours,"Enjoy Brewster's teaching!  He's great.  Assignments take a long time, but you are given everything you need to complete them successfully.",No,,,,
6/19/2017 9:21:57,CS 161 - Intro to Computer Science I,2,13-18 hours,"Do the readings and take some notes. I used notes for reference when doing assignments and for review  when studying for exams. If you have prior dev. experience, this course is easy.
When studying for exams, answer the quick check questions at the end of most sections in the book.",SP 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,18+ hours,"I had to do extra examples each week to prepare myself for quizzes and exams. If you do well in assignments and quizzes, exams will be easy.",No,,,,
6/19/2017 12:56:38,CS 261 - Data Structures,4,6-12 hours,Do not slack in this course. This will test your C language abilities pretty well. The information you learn in this class will definitely be helpful for all future software development.,Sp 2017,Yes,CS 290 - Web Development,3,6-12 hours,Do you assignments a week early so you can get TAs to help you through any bugs you encounter. Look up an Express tutorial on youtube,No,,,,
6/19/2017 13:48:40,CS 162 - Intro to Computer Science II,5,18+ hours,"Learn makefiles asap (it does not have to be complicated, just make sure it gets the job done)

Menu functions are needed in almost all your programs.

Input validation is required for your programs.

Start the labs early, I mean it ! ! !

Start the projects early, I mean it ! ! !

Check your leaks using valgrind ! ! ! 

Read the things required in your code sheet ! ! ! 

Read the lab directions, and project directions multiple times, until you get it ! ! !

Work load hours varied week by week for me,  in a week I could have spent anywhere from around 13 hours - 18 hours, the next week it could be 18 plus hours, another week it would could have been 40 plus hours. So it varied from week to week.  Grading was reasonable, and fair for the most part.",Spring 2017,Yes,CS 352 - Introduction to Usability Engineering,2,6-12 hours,"Just make sure you participate in the  discussion groups you are assigned.
Most assignments are writing papers, which are to be done by group.

Make sure you are on the same page with all your group members.

",No,,,,
6/20/2017 8:49:30,CS 261 - Data Structures,4,13-18 hours,"Start early on assignments. The worksheets are graded very leniently, but give them a serious shot and work with your group. The functions you write in the worksheets end up being necessary to complete the assignments. Don't skip the lectures or the reading, they're helpful. The first few weeks are easier than the rest of the term. As far as exams and long-term retention...don't focus on the specific implementations in C (although you will write code on the exams, only about 15% of the points are coding in C). Focus on understanding how the data structures and abstract data structures work, be able to describe operations, simulate them in a diagram, describe time complexities, and identify which data structures would be best for a situation.   ",SP2017,Yes,CS 352 - Introduction to Usability Engineering,2,6-12 hours,"This class isn't conceptually difficult, but the A isn't guaranteed. The bulk of your grade comes from a large project with multiple turn ins which you complete with an assigned group. Don't wait till the last minute to finish the project submissions, some require a good amount of work and writing. The final versions of your UI prototype need to be interactive (clickable), the examples are given as a PDF document containing intradocument links. Late in the term (it was already too late) we were told we had the option to create our prototypes using HTML/CSS (nothing fancy because it must run locally) and submit a zip file with all our pages instead of a PDF. I highly highly suggest doing this if anybody in your group knows HTML/CSS. You can host your prototype from your own ONID or any free service for testing/project galleries and just submit the zipped files for the project turn ins. Dealing with a hyperlinked PDF is  frustrating!",No,,,,
6/20/2017 11:01:13,CS 261 - Data Structures,4,13-18 hours,Worksheets reference each other and are used out of order. Prepare to skip back a few weeks to find functions/prototypes/etc.,SP 2017,Yes,CS 290 - Web Development,3,6-12 hours,Really pretty easy. I found the textbook to be boring and hard to focus on. Last assignment requires a synthesis of server side and client side coding.,No,,,,
6/20/2017 16:50:57,CS 162 - Intro to Computer Science II,3,18+ hours,Do all the extra credit because it's stuff you'll need for the next lab/project anyway!  Take pictures of your notes/Dry Erase board because you can include those in your design document if you don't have much to say.,SP 2017,Yes,CS 290 - Web Development,1,6-12 hours,"If you have ANY prior webdev experience, ANY at all, this class is a breeze. If you're thinking about getting an override to take it with CS162, I'd say do it because it was a nice, low-effort class that enabled me to focus more time on CS162.",No,,,,
6/21/2017 9:46:06,CS 325 - Analysis of Algorithms,3,6-12 hours,"Watch youtube videos, read through pseudocode of many algorithms. Not as hard as people say if you are exposed to the material many times.",SP 2017,Yes,CS 372 - Intro to Computer Networks,4,13-18 hours,"Just like 271, stay on top of the summary exercises. There is so much info you may have to go through the materials several times to remember things.",Yes,CS 290 - Web Development,3,6-12 hours,Some topics are explained poorly or not at all. Get started on How-To and database projects ASAP. Course is extremely back-loaded.
6/23/2017 14:07:48,CS 475 - Intro to Parallel Programming,2,6-12 hours,Have fun and enjoy a class taught by someone who truly cares,SP 2017,No,,,,,,,,,
6/25/2017 19:25:34,CS 261 - Data Structures,3,6-12 hours,"The data structures introduced aren't particularly challenging, but strong skills with C pointers will really help you grasp the material and complete the implementations more easily.",SPR 17,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"This class is heavily front-loaded, you'll be learning a ton in the first 3-4 weeks and then the pace slackens significantly.

I highly recommend all the extra credit! On early projects it will get you ahead for your future projects, and the later ones it gives you a chance to learn things that aren't emphasized in the course but are interesting, like writing code for the floating point unit.",No,,,,
6/26/2017 10:34:24,CS 340 - Introduction to Databases,2,6-12 hours,"This class should hardly be a full course.  There is almost no content and what there is should probably be taught over 2 weeks.  The project is really the only time consuming part right at the very end, but it is assigned really early so if you can manage your time with other courses, you can probably finish the project well before the deadline.",SP 2017,Yes,CS 344 - Operating Systems,3,13-18 hours,"This was probably my favorite class so far in the program because of the enthusiasm of the instructor, the quality of the video lectures, and the clarity of expectations.  As everyone else is saying, start the assignments early.  Follow the grading scripts for guidance.  They tend to start with the easy requirements first and then test for the more complicated requirements at the end so go in that order.  Everything you need to do the assignments is provided in the lectures, so if you find yourself looking outside the class a lot, then you are probably over-complicating things.  ",Yes,CS 325 - Analysis of Algorithms,4,13-18 hours,"I thought the class was front loaded and hits you pretty quickly with some tricky work while you get used to looking at the theory and language of algorithms.  The second half of the class was much easier since there is only so much depth you can go into linear programming and NP problems in an undergrad class that does not require a lot of math background.  

There seems to be a lot of people who recommend looking at other sources of information to get through the course.  I did not find that necessary.  I only used the textbook and lecture videos to do all the work.  The lectures are long and sooooo slow, but I would caution against watching them sped up too much because they are the best resource for completing the assignments.  I found 1.2x or 1.3x speed was best."
6/26/2017 12:27:07,CS 464 - Open Source Software,2,0-5 hours,the quizzes are literally verbatim from the lectures,SP16,No,,,,,,,,,
7/14/2017 4:37:15,CS 161 - Intro to Computer Science I,2,0-5 hours,,SU2016,No,,,,,,,,,
8/17/2017 14:53:25,CS 361 - Software Engineering I,2,6-12 hours,"Get your group organized if no one else steps up.  Plan to study for the final, especially some of the questions like, when would you use X?",SU 2017,Yes,CS 362 - Software Engineering II,1,6-12 hours,"Easy class overall, the first part is C and the second part is Java, but you don't really need to know Java to actually do anything.  Look on Piazza for people participating to find a group, which hopefully makes it more likely to be good.  This term people were posting right at the deadline looking for teams.",No,,,,
8/18/2017 12:54:22,CS 161 - Intro to Computer Science I,2,6-12 hours,"Start projects early, class is never particularly hard but the projects especially in the second half of the quarter do ramp up in difficulty and time required to complete them. Get familiar with pointers in particular and c++ syntax in general since you need to be able to read a block of code and understand how a program will function on the tests.",SUMMER 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,13-18 hours,"This class is not too difficult, just  if you make sure you understand all the concepts and can do all the HW problems without difficulty. All of the mid-term and final question will be drawn form the HW and quizzes so there will  be no surprises. Grading is very generous too so at least try to solve every problem on the tests for partial credit. While not too hard the HW and reading do take a lot of time so make sure you don't get overwhelmed especially if you are taking other classes.",No,,,,
8/18/2017 18:51:55,CS 161 - Intro to Computer Science I,2,6-12 hours,The exams are very tough so the assignments will save your grade.  Start them early and double and triple check that you did everything that was asked in them.,SU 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"Tests are very easy, generously graded, and often times repeat questions.  The homework and quizzes are what you need to focus on doing well on.",No,,,,
8/21/2017 8:43:20,CS 496 - Mobile and Cloud Software Development,4,6-12 hours,In the summer you need to dedicate one to two days MORE than you think you need. Debugging and searching for documentation online is what you will be doing most of the time,SU 2017,No,,,,,,,,,
8/21/2017 11:00:12,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,Practice a lot of example problems,SU 2017,No,,,,,,,,,
8/21/2017 13:13:43,CS 261 - Data Structures,2,18+ hours,"Homework is easy, tests are hard. Make sure you know which are ADTs and which are data structures.",SU 2017,Yes,CS 271 - Computer Architecture & Assembly Language,1,18+ hours,,No,,,,
8/21/2017 13:32:48,CS 162 - Intro to Computer Science II,4,18+ hours,Always start projects and labs as early as possible.  Get a plan outlined before starting to code.  Get very comfortable with Pointers.  ,SU 2017,No,,,,,,,,,
8/21/2017 13:53:04,CS 161 - Intro to Computer Science I,2,6-12 hours,Exams pretty much determine your final grade for this course.  Carefully read the book + course material and look for material that could be possibly be used as trick questions.,SU 2017,No,,,,,,,,,
8/21/2017 14:40:08,CS 261 - Data Structures,2,6-12 hours,"Focus on the lectures and worksheets, not the ""book""",SU 2017,Yes,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,,No,,,,
8/21/2017 15:57:44,CS 162 - Intro to Computer Science II,3,13-18 hours,Start your projects early and test them often. Get ahead of the reading so you can focus on your programs. ,Summer 2017,No,,,,,,,,,
8/21/2017 16:05:04,CS 344 - Operating Systems,3,6-12 hours,Start the assignments early,SU 2017,No,,,,,,,,,
8/21/2017 17:14:54,CS 162 - Intro to Computer Science II,4,13-18 hours,"Read the programs early and think about them while watching the videos, reading the book or just out doing something unrelated. Always think about the program. Study up on Github it is a great backup tool. ",SU 2017,No,,,,,,,,,
8/21/2017 17:45:20,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"It's a BS, fluff course. Use it to knock off a couple credits or bolster your GPA. Don't expect to actually learn anything.",SU 2017,No,,,,,,,,,
8/21/2017 19:17:02,CS 162 - Intro to Computer Science II,3,6-12 hours,Learn pointers,SU 2017,Yes,CS 352 - Introduction to Usability Engineering,1,13-18 hours,The entire class is a group project with the same group.  It could go either way.  ,No,,,,
8/22/2017 2:24:50,CS 290 - Web Development,1,0-5 hours,You need to do reading and practice beyond the course material.,SU 3017,Yes,CS 261 - Data Structures,3,6-12 hours,,No,,,,
8/22/2017 6:05:52,CS 362 - Software Engineering II,2,0-5 hours,I did not watch a single lecture or read any of the material. Just did the assignments and tests and got an A. ,SU 2017,Yes,CS 419/467 - Software Projects,4,18+ hours,"Tips are to actively try to find good group members because that will make or break your class. Also, I would highly recommend trying to find a project that uses languages and frameworks you are familiar with so you can start building right away instead of learning how to do basic stuff. ",No,,,,
8/22/2017 8:42:23,CS 161 - Intro to Computer Science I,2,0-5 hours,"Exams are mostly code tracing with ""tricks"" in the code (e.g. a single ""="" where you would normally put ""==""). The programming assignments have a big spike upward in complexity the last couple weeks, but not too terrible. Make sure you plan before you code, use Piazza for questions, and you should be fine. It's relevant to note, however, that I had prior experience before taking this class so I might not have the most relevant perspective for a total beginner.",SU 2017,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Do lots of practice problems. Check out trevtutor and Eddie Woo on youtube as both often explain things better than the text. Grading is super lenient so don't stress too much. As long as you take the course seriously and do lots of practice problems, an A is very attainable (our class average was a 90%!). ",No,,,,
8/22/2017 8:49:37,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,Brush up on algebra.,SU 2017,No,,,,,,,,,
8/22/2017 9:34:32,CS 161 - Intro to Computer Science I,2,0-5 hours,"I had prior programming experience, so tbh, this course was quite easy and straightforward.  If you have prior programming exp, you should be fine and able to get an A quite easily.  If you don't have (or pretty minimal) prior programming exp, read the book, take notes, do some/all of the checkpoints and chapter reviews with special attention to any code-tracing questions, and start the assignments as early as you can.",SU 2017,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"This class is not particularly hard, but does involve quite a bit of course work. 
 Read the assigned readings and supplement with the videos provided as needed, talk to your peers (Ehsan and the TAs are available but pretty hands off unless you email them - take advantage of them as resources if you're really struggling).  Look into YouTube videos (TrevTutor and Eddie Woo).  Know your basic algebra - it will help you understand induction. ",No,,,,
8/22/2017 13:47:05,CS 344 - Operating Systems,3,13-18 hours,"This class is hard but fair. He gives you plenty of time to get rolling on things so USE IT! I cannot stress that enough. Some of the programs are different than what you are used to doing and take some fiddling to figure out, so start early and stay on top of everything and you will be golden! He is also a very proactive teacher, so if you don't understand don't hesitate to ask questions.",SU 2017,Yes,CS 352 - Introduction to Usability Engineering,2,6-12 hours,"I spent a lot more time on this class than should of been necessary because out of my 4 group members I was basically the only one doing any work. If you need up in a group like that just be prepared to do the work without them, because if you try to wait them out and worry about them having time to help (when they wait till the last day to do so) you'll end up with a lot of work and a little time to do it. If you have a fully functioning group it really isn't much work.",No,,,,
8/22/2017 13:49:54,CS 290 - Web Development,1,0-5 hours,,SU 2017,No,,,,,,,,,
8/22/2017 13:52:21,CS 325 - Analysis of Algorithms,2,6-12 hours,Find outside resources like the MIT lectures/youtube/online class materials from other schools. Watch the class lectures at 1.5 or 2 times the regular speed.,SU 2017,Yes,CS 340 - Introduction to Databases,2,0-5 hours,"Don't expect to learn ER diagramming/MySQL from the class lectures. If you're unfamiliar with MySQL commands, find outside resources. Start the final project early.",No,,,,
8/22/2017 15:51:39,CS 261 - Data Structures,2,6-12 hours,Read the assignments very carefully and get clarification from the professor when needed. The course is very disorganized and it's easy to miss points on things that are not clear.,SU 2017,No,,,,,,,,,
8/22/2017 15:59:01,CS 225 - Discrete Structures in Computer Science,1,0-5 hours,,SU 2017,Yes,CS 261 - Data Structures,3,6-12 hours,,Yes,CS 290 - Web Development,3,6-12 hours,The last project requires you to combine DOM interaction and server-side javascript to create a database tracker. It feels clunky though because you don't really use a framework other than vanilla JS for client-side and node.js for server-side.
8/22/2017 16:42:43,CS 361 - Software Engineering I,3,6-12 hours,"There is a lot of writing.  Good communication between team members is key, make sure everyone knows what is expected for each weekly assignment.  We used google docs to write our reports, google sheets for scheduling and google hangouts for meetings.  We left tagged comments for each other in the doc.  Although they aren't prerequisites, it's good to have taken 290 and 340 before you take this class.  The last third of the course focuses on implementing a software project that you are given at random, and many of them were web apps.",SU 2017,No,,,,,,,,,
8/22/2017 16:52:04,CS 261 - Data Structures,2,13-18 hours,Definitely check out a lot of alternate sources. The class material is confusing and there are a lot of typos and contradictory material that will confuse you.,SU 2017,Yes,CS 290 - Web Development,2,13-18 hours,"Check out Udemy's Web Developer's Bootcamp. They really do not go deep into anything but the assignments are not too difficult. Unfortunately, that means that you do not get a lot of good practice. This does not count for the final project. It is way more complex than any other project. ",No,,,,
8/22/2017 18:11:38,CS 161 - Intro to Computer Science I,3,18+ hours,Start reading the book as soon as possible,SU 2017,No,,,,,,,,,
8/22/2017 20:32:35,CS 161 - Intro to Computer Science I,2,13-18 hours,"Practice coding in C++, writing your own code, and debugging to become more famiiar with C++ and programming. Read the textbook and supplemental notes. Doing the review problems in the book is also helpful. Don't be afraid to ask questions in Piazza or the Slack group if you're stuck on a concept you don't understand. Don't wait until the last minute to do assignments. Make sure to plan your assignments' programs before writing code so you can understand the logic of your program and catch any bugs before writing your code. ",SU 2017,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"In my term, there were two textbooks (the required textbook and an optional textbook). If your CS 225 term is like mine, definitely use both textbooks. Sometimes one textbook explained certain concepts better than the other textbook. Practice the homework problems, previous term homework problems, the demo quizzes, and similar problems from the textbooks. CS 225 was difficult for me at first, but I got the hang of it by constantly practicing problems and rereading the required readings. Make sure you review how to do algebra especially if math is not your strength. Also, don't wait until the last minute to do assignments and quizzes.",No,,,,
8/22/2017 21:17:34,CS 162 - Intro to Computer Science II,2,13-18 hours,"Start early! The minute..... the SECOND each module begins, start working on the stuff!",SU 2017,No,,,,,,,,,
8/23/2017 7:00:35,CS 261 - Data Structures,3,13-18 hours,Know the worksheets inside and out,SU 2017,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Starts easy, racks up later. Learn the concepts of stacks, passing parameters, array syntax clvery well. ",No,,,,
8/23/2017 13:15:38,CS 325 - Analysis of Algorithms,4,13-18 hours,"Don't skip her lectures, watch them at 1.5X speed. After lectures, skim the reading (it's a good reference but terrible as learning resource). Start the homework as early as you can. Don't leave any exam questions blank. She's pretty generous with partial credit so give each problem your best shot and write down your entire thought process and any partial solutions. ",SU 2017,Yes,CS 361 - Software Engineering I,2,6-12 hours,"The course is being redesigned. My term was the first term in which Rooker combined what used to be Project A and B into a longer project with weekly report submissions (similar to 352). Overall, still a relatively easy class...but be prepared to do a lot of writing. The entire class is group-based, so your experience will depend a lot on the kind of group you end up in (randomly assigned). For the final, don't just study the starred slides, go through all the power points. ",No,,,,
8/23/2017 18:02:35,CS 340 - Introduction to Databases,3,0-5 hours,"Practice just doing random stuff with databases using SQL. If you can understand how SQL syntax works then you basically will get an A in this class. Don't wait until the last second on the final project. I also HIGHLY recommend taking CS 290 (Web Development) before taking this class. There is no point struggling with CSS/HTML/JavaScript/JSExpress, websites, servers, and more ALONGSIDE the SQL work",SU 2017,No,,,,,,,,,
8/23/2017 18:42:15,CS 496 - Mobile and Cloud Software Development,2,6-12 hours,"This class gets a lot of hate, but I personally enjoyed it. I also didn't run into big time crunches like I did with some other courses. It was fun and I talked about this class quite a bit when I was doing interviews. No exams and the final project isn't bad. ",SU 2017,Yes,CS 419/467 - Software Projects,3,6-12 hours,"Make sure you either pick a project that uses a technology you're really comfortable with, or be prepared to do a ton of extra work/research. It's also better to complete with people you already know. My group really didn't work as much as we needed to and it left us scrambling at the end. They did grade our project pretty leniently and we got full credit. So my advice is to try and get as close to all the requirements as you can and have an in-depth explanation for any that you miss.",Yes,CS 362 - Software Engineering II,1,6-12 hours,"This class is very easy. The midterm and final were open book/notes/internet and tested you on the application of things you already learned. Not difficult. The most annoying part of the class is working through all the buggy code and weird requirements they give you to get assignments working. Still, this class is pretty light and can definitely be paired with more difficult courses."
8/24/2017 8:55:14,CS 340 - Introduction to Databases,2,6-12 hours,,SU 2017,No,,,,,,,,,
8/25/2017 9:10:56,CS 372 - Intro to Computer Networks,4,6-12 hours,"If you're confused, do the lab and the lab helps a lot on clearing things up.",SU 2017,No,,,,,,,,,
8/26/2017 6:59:35,CS 290 - Web Development,3,18+ hours,Take udemy boot camp by Colt Steele first if you have time.,Summer 2017,Yes,CS 340 - Introduction to Databases,2,0-5 hours,"Final project builds on project from 290, about 15-20 hours/week last two weeks or so due to working on the project.",No,,,,
8/29/2017 0:31:06,CS 261 - Data Structures,4,13-18 hours,,SU 2017,Yes,CS 290 - Web Development,1,0-5 hours,,No,,,,
8/29/2017 13:35:04,CS 261 - Data Structures,3,6-12 hours,"The lectures and worksheets are great resources. The book not so much. Supplement your learning with the Yale DS pdf found on the subreddit. Code in the worksheets usually end up being used for the homework, so do your best at completing them correctly. The exams can be difficult, but Google is your friend. Her practice tests are also similar to the exams. ",SU 2017,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Do not underestimate this course. It is very well organized but if you fall behind early (like I did) you will find yourself struggling. Keep on top of the material and give yourself plenty of time for the assignments. Once I began dedicating the time needed for this class I improved. The practice exams are helpful for the real exams. The book and lectures are great resources. He gives demo code when going over new topics, I highly suggest downloading them and running with the debugger to understand what is happening in the code. ",No,,,,
8/30/2017 9:36:17,CS 340 - Introduction to Databases,1,0-5 hours,Easiest course,SU 2017,Yes,CS 344 - Operating Systems,4,13-18 hours,Start early on projects,No,,,,
8/30/2017 15:31:29,CS 344 - Operating Systems,3,18+ hours,If you start early on assignments you will do fine,SU,No,,,,,,,,,
9/3/2017 7:09:58,CS 161 - Intro to Computer Science I,3,6-12 hours,Read the book.,SU 2017,No,,,,,,,,,
9/3/2017 11:18:00,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,Do the homework and watch the lectures. Don't both reading the book. The real explanations are in the answered questions in the back of the book.,SU 2017,No,,,,,,,,,
9/4/2017 18:21:45,CS 161 - Intro to Computer Science I,3,0-5 hours,"I had prior programming experience, which made this course fairly straight forward. I recommend getting ahead and taking an online introductory programming class before you take this class. Start your programs early and use the review questions in the book to help you study for the exams. The exams can be tricky, so make sure you understand everything.",SU 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,This class seems really difficult at first. We had weekly homework and weekly quizzes. She provides you with previous homework assignments and previous quizzes to help you study. Make sure you study and understand all of this material and you should do fine. The grading is VERY generous.,No,,,,
9/5/2017 17:15:56,CS 419/467 - Software Projects,1,13-18 hours,Pick a project that you think you'll really enjoy working on!,SU 2017,No,,,,,,,,,
9/30/2017 21:22:44,CS 261 - Data Structures,2,6-12 hours,,SU 2017,Yes,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,,No,,,,
10/16/2017 3:23:42,CS 225 - Discrete Structures in Computer Science,1,6-12 hours,"Marking is very generous, just make sure to justify your answer. If on the midterm or final exam you use the wrong formula but still work through the problem, you will likely still get 9/10. Quizzes are mc but are open book and are very similar to the assignment questions. Lectures are alright, but youtube teaches most concepts better. The textbook is written in a more mathematical and rigorous style than required for this class. Use chegg if possible, but remember the academic policy and keep in mind that you paid to learn this stuff, and it is useful in program design.",SU 2017,No,,,,,,,,,
11/3/2017 12:22:51,CS 161 - Intro to Computer Science I,4,13-18 hours,Read the book,FA2016,No,,,,,,,,,
11/3/2017 12:23:38,CS 162 - Intro to Computer Science II,5,18+ hours,Learn Pointers and Dynamic memory before starting the class.,WI 2017,No,,,,,,,,,
11/3/2017 12:25:18,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,Use the book,SP 2017,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,Study the quizzes and exercises,No,,,,
11/18/2017 19:07:18,CS 261 - Data Structures,2,6-12 hours,,SU 2017,No,,,,,,,,,
11/19/2017 20:17:15,CS 161 - Intro to Computer Science I,2,0-5 hours,,FA 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,,No,,,,
11/23/2017 19:34:38,CS 325 - Analysis of Algorithms,4,18+ hours,"Look at outside resources (MIT Lectures, etc), definitely try to understand the jist of dynamic programming before starting the class.  The exams and homework are pretty fair, but you'll have to work hard.",FA 2017,No,,,,,,,,,
12/2/2017 11:40:49,CS 165 - Intro to Computer Science (Accelerated),3,6-12 hours,Easy if you have programming experience. The assignments are too easy compared to 162. Taking 161 + 162 is better preparation if you've never programmed before.,FA 2017,No,,,,,,,,,
12/4/2017 6:42:34,CS 162 - Intro to Computer Science II,2,18+ hours,"Start early!  This class isn't difficult grade wise, it's the massive amount of work that is the challenge. You will not be able to cram the entire weeks material into a Sunday afternoon.",FA 2017,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Don't stress the first couple weeks.  It comes at you fast and with seemingly endless amounts of information.  Spend your time on the stuff in the Summary Exercises, that's really what you're expected to know.",No,,,,
12/4/2017 22:40:25,CS 361 - Software Engineering I,2,6-12 hours,Do deep breathing and meditation to contain your frustration with Rooker.,FA 2017,Yes,CS 372 - Intro to Computer Networks,2,13-18 hours,"Study the practice quizzes, read the book, and enjoy a well-organized course!",No,,,,
12/6/2017 15:43:39,CS 162 - Intro to Computer Science II,3,18+ hours,"This class has a unique workload.  Every week, there is just 1 lab due.  However, every 2 wks, there is a lab, project, and test/group project due.  Make sure you start on the projects early on, preferably the weekend the assignment is given. Even if you have programming experience, expect to spend about 20-30 hrs/week on this class.  Learn how to use GIt early on.  Use Slack + Piazza for questions.  Never fall behind in this class.",FA 2017,No,,,,,,,,,
12/6/2017 18:14:33,CS 325 - Analysis of Algorithms,5,18+ hours,This class sucks hard. Prepare to spend many hours watching videos and reading dry material. Prepare to be expected to master about 100 concepts having very little to do with analysis.,FA 2017,Yes,CS 372 - Intro to Computer Networks,1,0-5 hours,Good course - especially easy if you have a CCNA,No,,,,
12/6/2017 19:36:40,CS 162 - Intro to Computer Science II,4,18+ hours,"You need to work every day. Many assignments are not complicated, but the number and length of assignments is HIGH.",FA 2017,No,,,,,,,,,
12/8/2017 7:34:46,CS 290 - Web Development,3,6-12 hours,"The assignments are pretty easy overall except for the last assignment, which is incredibly difficult. Start on it immediately, and get help.",FA 2017,Yes,CS 261 - Data Structures,3,6-12 hours,A lot of this class depends on how good your group is. Don't spend time reading the textbook.,No,,,,
12/8/2017 18:04:14,CS 340 - Introduction to Databases,3,18+ hours,"Start the final project as early as possible, get a solid partner for said final project (aka don't do it alone).",FA 2017,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Stay in the books, do all the review questions (in the book and in the lectures). Overall well organized and put together. ",No,,,,
12/9/2017 10:55:38,CS 290 - Web Development,2,0-5 hours,"If you've never seen HTML/CSS this is perhaps an uphill battle, however I found it to be easier than 161.  The last assignment is the only thing that will have you scratching your head for a couple days as you are asked to bring everything together, but if you just look over past assignments it will make sense.  You are given 2-3 weeks to complete it.  Make sure you get 100% on all assignments as that is literally 75% of the final grade.  Final project has very low standards for getting a 100% (basic website with menu bar, pictures, etc).  No midterm, final is aight and covers a bunch of minutiae you barely ever saw in class...if you did the assignments like I advised you can get an F on the final and still get an A in the class.",FA 2017,Yes,CS 261 - Data Structures,3,13-18 hours,"I believe your group will be a big determiner in how you feel about this class. The material learned here is vital to separating you from the posers so do give it the attention it deserves.  The concepts require a good deal of abstract thinking, but if you give some effort you should be able to get an A pretty easily.  Reading chapters is not important.  I never read anything after the midterm and did great in the class.  Literally everything you need for the assignments/exams is in the videos/worksheets.",No,,,,
12/10/2017 8:14:09,CS 165 - Intro to Computer Science (Accelerated),3,18+ hours,Study c++ syntax,FA 2017,No,,,,,,,,,
12/10/2017 8:17:10,CS 165 - Intro to Computer Science (Accelerated),3,18+ hours,Study c++ syntax,FA 2017,No,,,,,,,,,
12/12/2017 15:12:55,CS 290 - Web Development,3,6-12 hours,Use outside resources. The majority of the grade is based on assignments/activities so it's easy enough to do well. The end of the course is where topics tend to get overwhelming and confusing; the material provided isn't incredibly helpful so try to find some supplemental resources in the last few weeks. The final is pretty difficult. Make sure to put plenty of information on your note sheet of things you wouldn't expect to need to know for the final.,FA 2017,Yes,CS 261 - Data Structures,4,18+ hours,"This course has a lot of busy work (worksheets) and the programs can end up taking a fair amount of time to finish. The majority of your grade in this class will come from the midterm and final, so make sure you thoroughly understand all the topics before going into each exam and take plenty of time to review the practice tests in order to do well in this course.",Yes,CS 340 - Introduction to Databases,4,6-12 hours,"The majority of this class isn't very time consuming -- however, this course is incredibly back heavy. The final project is incredibly time consuming and you will not be able to finish it if you put it off. I recommend finding a good partner to do the project with and starting early to make the work more bearable. A lot of the SQL concepts didn't fully click with me until the end when reviewing relational algebra, so don't worry if it seems overwhelming at first. This class has a good way to pad your grade a bit with the quizzes, as you can retake them until you get a perfect score. There isn't a lot of homework, but some of the assignments can be time consuming so don't put them off."
12/18/2017 14:56:17,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Study the lectures an the text book! Assembly programming is only part of the class! I found it to be easy once you dedicate the time watch all the lectures and read the text book.,FA 2017,Yes,CS 261 - Data Structures,3,6-12 hours,"Spend time learning how each data structure works, not just the code. There will be many questions on the theory as well as Big-o. The exams are worth a large part of the grade so don't shrug off learning the theory. Still, an enjoyable a fascinating class!",No,,,,
12/19/2017 8:59:37,CS 290 - Web Development,3,6-12 hours,"Don't get complacent with the first few weeks. HTML and CSS are easy and not covered. The final isn't as bad as everyone says, get your grade up before going in and don't worry about it. Think about how to start the projects before you start the base of the server side stuff is important.",FA 2017,Yes,CS 261 - Data Structures,3,13-18 hours,Data structures are pretty boring but they are the basis of computer science. This is one of the things you will probably not learn as well if you rushed your education(bootcamp).  This is something that separates programming from computer science.,No,,,,
12/19/2017 19:10:12,CS 261 - Data Structures,3,18+ hours,"Do all the worksheets yourself, even if your group splits them up. The class has a nice slow-down around the midterm and final so you should have some time to study for these tests. Since tests are over half your grade in this class, take them seriously - the midterm is heavier on coding, the final is heavier on trivia type questions. I made a huge stack of flash cards full of tidbits, trivia, and dry facts (run time complexities, signatures, etc. of data structures) and studied them for the midterm and final. Doing this helped me earn an A in 261.",FA 2017,No,,,,,,,,,
1/2/2018 0:50:26,CS 162 - Intro to Computer Science II,3,18+ hours,"This class isn't very difficult, but it requires a LOT of work. I didn't think the material was difficult, but I still probably spent about 20 hours per week on the class. There is a lab due every week and some larger projects due throughout the quarter. Unfortunately, there is group work and that was the most annoying part of the class for me. Start the assignments early and follow the instructions. They are usually pretty straightforward and the TAs and professor make an effort to clarify requirements.",FA 2017,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"This class was pretty tough. You are expected to know a lot of material. The first four assignments are pretty straight forward while the last two are much more time consuming. If you have a chance, do the extra credit for the programming assignments. Study the self-checks, weekly summaries, quizzes, and programming assignments (basically everything) for the midterm and final.",No,,,,
1/4/2018 16:47:53,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,If you're familiar with OOP it is worth your time to take the accelerated class.,SP 2017,Yes,CS 225 - Discrete Structures in Computer Science,1,0-5 hours,Just do the work. The grading is lenient so don't stress too much.,No,,,,
1/4/2018 16:54:52,CS 261 - Data Structures,2,6-12 hours,Take advantage of the opportunity to work as a group.,FA 2017,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,The class gets much harder the last 2-3 weeks. Take advantage of the extra credit and easy assignments in the beginning.  Treat weekly summaries like real quizzes.,Yes,CS 290 - Web Development,1,6-12 hours,"An easy A, fairly low stress.  The material got much harder the last few weeks but the grading was very lenient. I didn't come out of the class knowing much more than I did going in.  If you're looking for a GPA booster, this is a good course.  If you're looking to actually learn web development, this is a terrible course."
1/7/2018 12:32:36,CS 161 - Intro to Computer Science I,3,6-12 hours,,FA 2016,No,,,,,,,,,
1/11/2018 5:08:19,CS 161 - Intro to Computer Science I,2,6-12 hours,Read the book and work through the end of chapter questions - ideally with a study group. ,FA 2017,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"The homework, demo quizzes, real quizzes, and exams all build on each other. Use these examples.
Don't expect support from TAs or the instructor. You're on your own here.",No,,,,
2/14/2018 7:59:40,CS 325 - Analysis of Algorithms,4,6-12 hours,"Don't freak out; stay calm.  If you've never studied algorithms before (like me), then there will be weeks where you are lost. When no YouTube or reading will help, go to office hours ( I did 2 or 3 times and it helped tremendously).  At the least, office hours will get you through the HW. But for me, it helped me straighten out my thought process.  For tests, you get a whole week to study. I used each day (1-3 hours) to study 1 week of material, then used the last day to write my cheat sheet from my study notes and re-practice problems.  Remember, the problems on the midterm and final are the same structure as problems you've seen in the class and in lecture. Practice identifying the problem structures as you go and it makes getting the nitty gritty details down easier.",FA17,No,,,,,,,,,
2/20/2018 16:16:38,CS 161 - Intro to Computer Science I,3,6-12 hours,,SP 2017,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,Utilize outside lectures/videos a lot in addition to course materials.,No,,,,
2/20/2018 16:18:25,CS 162 - Intro to Computer Science II,3,6-12 hours,Assignments were a bit unstructured and course materials a bit sloppy. Pay extra attention to detail in assignment requirements and provided skeleton code.,SU 2017,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Pay extra attention to the practice questions after each lecture.,No,,,,
2/20/2018 16:20:11,CS 261 - Data Structures,3,6-12 hours,,FA 2017,Yes,CS 290 - Web Development,2,0-5 hours,Final project took much more time than the assignments. Don't delay.,Yes,CS 340 - Introduction to Databases,2,0-5 hours,"The final project took way more time than anything else in the program, so don't delay on that."
2/22/2018 7:53:27,CS 475 - Intro to Parallel Programming,2,6-12 hours,Challenging material but he made it really accessible. Great instructor and great course. Definitely watch the lectures.,SP 2017,Yes,CS 361 - Software Engineering I,2,6-12 hours,Graded discussions were total BS. I was fortunate to be placed in decent groups so it wasn't too bad overall. The final is very poorly written and tests over opinions that aren't even discussed in the lecture materials. You're given topics and told to go find information on them yourself. ,No,,,,
2/27/2018 13:24:04,CS 325 - Analysis of Algorithms,5,18+ hours,"Prepare to spend a lot of time on the class.  Start work on the midterm cheatsheet as soon as the class starts.  Consider reading Grokking Algorithms before you start the class ... it's an easy read that will help you get your bearings a bit, but the class itself is much more difficult.  If you're looking to do more to prepare, consider teaching yourself Python.  Take as a goal translating some of the more interesting data structures from the c/c++ implementation into Python.  Having working classes for graphs, vertices, etc., and a functional BFS would be great preparation.  ",WI 2018,No,,,,,,,,,
3/8/2018 8:14:40,CS 161 - Intro to Computer Science I,2,0-5 hours,"Read the book, look up how to implement unfamiliary library functions, familiarize yourself with finding answers on Stack Overflow, and always attempt to fix the first error when your program fails to compile.",WI 2018,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"The book is terrible at explaining concepts for the first half of the class (weeks 1-5), so look up videos on YouTube to make up for that. The assignments, quizzes, and tests are graded generously, so always attempt to answer a question, even if it's just a general explanation of HOW you would solve the problem.",No,,,,
3/19/2018 7:16:00,CS 325 - Analysis of Algorithms,4,18+ hours,"There is a ton of info to absorb in this class. Find the mix of lectures/reading/supplemental/code review that works best for you and don't worry about trying to get through all possible sources. The coding implementation parts of the homework can be time consuming, so it helps to take a look at those early in the week and see what's going to be involved. The exams are tough; investing time into building a good cheat sheet is very helpful.",WI 2018,Yes,CS 361 - Software Engineering I,2,6-12 hours,There isn't really a particular strategy for this course since the majority of it is random assignment (group and project topic). The individual assignments are heavily subject to instructor interpretation. There is a fair amount of writing. There isn't much in-depth instruction around the course content. It's just one of those courses you have to get through.,No,,,,
3/20/2018 22:23:36,CS 340 - Introduction to Databases,3,6-12 hours,"The final was challenging. I learned a lot through self-teaching and troubleshooting my webapp. Readings were nothing more than links to documentation and a strange page in Swedish... Similar to CS 290 (web programming) the course starts out very simple and easy and then ramps in complexity fairly quickly.

It seems like such a simple idea, select what you want from a database through joining tables but it is needlessly complicated...",WI 18,No,,,,,,,,,
3/20/2018 22:30:36,CS 340 - Introduction to Databases,1,0-5 hours,"Easy concepts and very light work throughout. I just watched lectures and probably spend <2 hours/wk during Week 1-7. Instruction more or less ends at Week 7, but don't procrastinate on the project - it can take a deceivingly long time, because not only are you doing DB stuff, you're building an interactive website, which can take some time to learn/build especially if you're not taking CS290 or have no web development experience, or trying to learn something new (React, etc.). I probably spend ~30-40 hours working on it Weeks 7-10. Final is fair.",WI 2018,Yes,CS 325 - Analysis of Algorithms,4,13-18 hours,"Concepts can be confusing, so take extra time to understand and practice. Midterm and finals are fair, but make sure you write some actual examples (especially to hard problems you can solve so you can use the solution pattern to guide you) on your cheat sheet. I recommend doing assignments in Python, great way to pick up a new language, and makes some of the assignments easier to implement. Project is not bad, and we're given more than enough time (2 weeks) to finish it - just don't research something crazy hard to implement. Overall a tougher class relatively, but fair and not bad if you aren't overly confused by concepts.",No,,,,
3/20/2018 22:40:26,CS 290 - Web Development,3,6-12 hours,"Decent class. It teaches you HTML/CSS/JavaScript, along with NodeJS - Express, Handlebars and a few other modules. The class is pretty light overall, but the assignments could take longer than you expect. Watch out for the last assignment! The difficulty of it compared to the others is way higher and can catch you off guard, especially if you're procrastinating and think you can do it in one day like your other assignments! I encourage taking time to build a decent website - you can do the bare requirements and get full points, but you walk away not really learning much, because so many things can be built copy+paste from the lecture notes. I recommend taking this class with CS340, because you can use the same project for both classes, and what you learn here will help you with the CS340 immensely (requires you to build a website with databases).",FA 2017,Yes,CS 261 - Data Structures,3,6-12 hours,"It starts off light but the concepts grow in complexity as the course progresses (linked lists, arrays, etc. --> hashtables, dictionaries, etc. --> trees --> trees/graphs traversal). Overall not a bad class, and as long as you take the time to read and watch the lectures, you should be fine. Make sure you understand the concepts each week, since they build on each other. This class should allow you to start Leetcoding with a software engineering mind :)",No,,,,
3/20/2018 22:44:54,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"A lot of reading. Lots of reading.. but ultimately really helpful. This class can get a bit confusing, and there's a lot of frontloading the first 2-3 weeks, because there are so many new concepts, but after you get the hang of writing assembly code and registry concepts, it's not at all bad.",SP 2017,Yes,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,"Can be challenging if you aren't proof/math inclined, but otherwise very easy and light. Study and make sure you understand the proofs and why, don't just memorize patterns. It's helpful for later courses.",No,,,,
3/20/2018 23:52:35,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Take the summaries twice to get access to the questions. Do the early EC! Start the final project way in advance. It is so much harder than any of the other programs.,WI 2018,Yes,CS 261 - Data Structures,3,6-12 hours,Check piazza regularly. Sometimes the requirements would change there.,No,,,,
3/21/2018 0:04:09,CS 362 - Software Engineering II,2,6-12 hours,"Be thorough in your thinking.  The midterm and final, you don't really need to study for them--you just have to think things through and write out your thinking.",WI 2018,Yes,CS 373 - Defense Against the Dark Arts,3,13-18 hours,"If your quarter is like ours, you will begin to doubt if your homework is even looked at.  Don't even bother doing the labs unless you have to hand something in for them, because you will get very frustrated with missing instructions and confusing set-ups.  Just write in general about the week's topic, at some length, and you will not get any points docked at all.  It was fun to do a final presentation instead of a final exam.  Interesting course--enjoy!",No,,,,
3/21/2018 6:57:25,CS 261 - Data Structures,2,6-12 hours,Don't memorize data structure and ADT implementation really try to understand how it works.  The Midterm and Final won't be nearly as bad that way.,WI 2018,Yes,CS 290 - Web Development,2,6-12 hours,I found the 2nd half of the course to be incredibly difficult.  Don't be lulled into a sense of complacency after the first 6 weeks.  The final is also insane so try hard to go into it with 100s on all hw,No,,,,
3/21/2018 11:05:24,CS 372 - Intro to Computer Networks,4,6-12 hours,Read the textbook.  Do the no-credit weekly summary exercises to review for the tests.,WI 2018,No,,,,,,,,,
3/21/2018 15:05:38,CS 162 - Intro to Computer Science II,4,18+ hours,"Don't procrastinate. It feels overwhelming at first if your only programming experience is coming from 161. It gets a little more comfortable after about the midway mark, but it's still a ton of work most every week. Use your resources. Ask questions on Piazza. Ask questions on Slack. ",WI 2018,Yes,CS 352 - Introduction to Usability Engineering,3,0-5 hours,"Communicate well with your group and be a nice person. A lot of the material is pretty intuitive, but if you wait until the last minute, you may find yourself in a bind. The quizzes aren't that difficult, but the final expects that you've read and paid attention to the video lectures.",No,,,,
3/21/2018 16:39:15,CS 325 - Analysis of Algorithms,5,18+ hours,Study with others. Use other materials such as online articles or YouTube videos.,WI 2018,Yes,CS 290 - Web Development,3,0-5 hours,Learn some bootstrap to make things look nice. Start early for the last homework assignment.,No,,,,
3/22/2018 5:55:08,CS 372 - Intro to Computer Networks,2,6-12 hours,"Get started on the assignments early, but if you have taken CS344 already than half of the coding will carry over to CS372.  You probably don't need the book, but some questions may require outside material to answer.  Also, there are practice summary exercises in the ""Quiz"" section of Canvas - they are ungraded and can be used for additional practice.",WI 2018,No,,,,,,,,,
3/22/2018 8:18:10,CS 340 - Introduction to Databases,1,6-12 hours,Get started on the final project early. It is the only difficult assignment in the class.,WI 2018,Yes,CS 325 - Analysis of Algorithms,5,18+ hours,Get started on each weeks material early. It can take some time for the concepts on the homework to sink in.,No,,,,
3/22/2018 8:49:32,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"This course is very fair but it is a lot of consistent work. When I say fair I do not mean is it easy. Most people have not programmed in MASM before so it can be time-consuming to wrap your head around the concepts. The lectures are very good, I stopped reading the book after about week 4 and only referenced it when needed. The homeworks are quite involved so get started ASAP. The grading is done on a TA rotation and some are much more lenient than others: keep that in mind. Midterm: study all quizzes, summaries and lecture exercise solutions. If you can do all summary and quiz problems you will do pretty well on the midterm. Final: make the practice final exam bae. Very very similar in structure. Recursion, albeit not a horribly difficult concept in high-level languages, is a bit wonky in MASM. Do the exercise solutions after all lectures, will help a ton. Piazza was pretty helpful. Slack, unfortunately, was nothing short of a toxic environment controlled by a few individuals. The circle jerk was real and it was really a shame. I think Slack on the overall is great but it became disgusting for the 271 channel. Since it was controlled by a few egomaniacs, I never really felt comfortable asking a question there. ",W 2018,Yes,CS 361 - Software Engineering I,1,0-5 hours,"If you're looking for a good way to light $1900 on fire, you've come to the right place. Almost exclusively group work and thankfully I had a pretty solid group. Use Slack to communicate with your group members, much better than Google Hangouts (esp when multiple people are involved). Rooker is a good guy but a bit of a bumbling idiot. People were overly dramatic about the final exam: it's 70 multiple choice questions and if you thoroughly review all lecture slides you will do well. No point in watching the lecture videos, just read the slides. This class is easy but the group work every week is fairly time-consuming, make sure to start it ASAP. ",No,,,,
3/22/2018 8:51:53,CS 162 - Intro to Computer Science II,1,13-18 hours,"The class isn't that bad it just requires being resourceful. Some weeks (like week 2) you get assigned 2 chapters for 200 pages of reading. Most of the material is interesting but not all of it is useful.

The lectures are useful because they demonstrate the most useful skills that are needed for the work due that week. learncpp.com is extremely helpful for getting a different perspective on certain things (inheritance and polymorphism I'm looking at you).

It doesn't hurt to read the project/lab specs for the week before doing any reading to understand what you'll need to learn. That's half the battle really. We didn't use copy constructors or operator overloading yet it takes up like 50 pages of chapter 11 which is the roughest chapter. 

Do the extra credit -- it's usually pretty trivial. The coursework is graded very fairly and may I even say a bit lenient. At the end of the semester I'm at over a 100%. ",WI 2018,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"The course is... interesting. I liked the course overall but the material was very dry. It was like reading a verbose instruction material. It made it hard to stay focused sometimes.

I found doing the project then the quizzes the easiest. I get to play around with new techniques/concepts before being tested on them.

I studied for the midterm and final using anki flashcards. I'd pull all of the questions from the summaries/quizzes/end of section textbook review questions and put them in to a flashcard app. This helped me get an A on both major tests.

The extra credit options for the projects are worth taking. They get harder as the semester moves forward so try to do as much as possible in the beginning of the semesters in order to give yourself a buffer for the midterm and final (worth a combined 40% of your grade).

Overall I learned a lot from the class and it was well put together. The textbook was the worst part of the course so don't get discouraged with the readings. The programming assignments and extra credit will teach you the most!",No,,,,
3/22/2018 9:38:15,CS 344 - Operating Systems,2,6-12 hours,,WI 2018,Yes,CS 372 - Intro to Computer Networks,2,6-12 hours,"Would have been easier if I had taken 344 first. 70% of the grade is tests (weekly reviews, quizes, midterm, final) on canvas so take them seriously. ",No,,,,
3/22/2018 10:42:13,CS 290 - Web Development,3,0-5 hours,"Instructor simply recycles material left by the previous instructor and barely ever answers any questions on Piazza. Answers given by the instructor even when she does respond are superficial and of little help. That said, the HW assignments are easy enough, and grading is fairly lenient. Start the last two assignments early though (final project and database HW). These will take up more time than all the other assignments combined.",2018 Winter,No,,,,,,,,,
3/22/2018 10:43:46,CS 340 - Introduction to Databases,1,0-5 hours,Seek outside resources on order to learn the material and check Piazza often as the assignment requirements can change on a whim.  ,WI 2018,Yes,CS 325 - Analysis of Algorithms,3,13-18 hours,,Yes,CS 361 - Software Engineering I,1,6-12 hours,
3/22/2018 10:58:40,CS 325 - Analysis of Algorithms,5,18+ hours,"Only a couple homework assignments offer extra credit, so don't assume that because there was a chance for EC this week that there will be a chance next week, too. The lectures are unedited, long, and generally not up to the usual OSU standards, but you should watch them anyway because they WILL help you on the exams (which together are 40% of your grade) and give you some idea of the topics the homework will cover. Use Google and YouTube to find better resources for those topics once you know what they are. They open the midterm after it's graded so you can see what you missed points on. The final is cumulative, so be sure to go back and study what you did wrong on the midterm and make sure you won't make those same mistakes again. Test study tip: several questions will ask you to consider a hypothetical ""word problem"" style problem you've probably never seen before, describe (in words) an algorithm that solves it, and then give the running time of that algorithm. The first 2-3 weeks are the hardest, but the class is well-paced overall. There is a homework-free week in the middle to give you time to prep for the midterm, and no homework to compete with the group project at the end of the quarter. One last tip: C++ is more performant than Python, so keep that in mind when picking a language for the final project, which is the only time actual running time (in seconds/minutes) will matter in an assignment for this class. ",WI 2018,No,,,,,,,,,
3/22/2018 11:08:12,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,"Do the readings, code the examples in the book and go line by line so you understand what each line of code is doing. Learn pointers (they're not as scary as people make them out to be). Don't leave the assignments till the day they are do, always test them on FLIP so you don't waste submissions on MIMIR.",WI 2018,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,I watched a lot of TrevTutor on youtube and I paid for a Chegg subscription that was definitely worth the cost for the quarter. The concepts can be difficult to grasp at times but they grade pretty easily. I thought the weekly quizzes were harder than the midterm and final exam.,No,,,,
3/22/2018 11:10:23,CS 161 - Intro to Computer Science I,2,6-12 hours,Make sure you read and are very clear on the specifications for each assignment. Learn hand-tracing and how passing to functions works for each data type,WI 2018,No,,,,,,,,,
3/22/2018 11:21:41,CS 362 - Software Engineering II,1,0-5 hours,don't procrastinate on the unit test assignment,WI 2018,Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,"Keep a running doc of summary exercise questions, it'll help you make your crib sheet for the midterm and final. Don't just copy and paste these, type them out, and you'll be surprised how much you retain. :)",No,,,,
3/22/2018 11:53:21,CS 352 - Introduction to Usability Engineering,2,0-5 hours,Don't take it until the class gets a major overhaul...huge waste of time.,WI 2018,Yes,CS 162 - Intro to Computer Science II,3,6-12 hours,Get started on assignments/projects ASAP.  Most assignments will have you writing as many lines of code as you did ALL TERM for 161,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Do ALL of the summary exercises and review the quizzes for the midterm/final exams.  The tests are hard, but 100% fair."
3/22/2018 14:27:18,CS 162 - Intro to Computer Science II,4,13-18 hours,"Start working early! The projects aren't necessarily hard, but they are very time consuming.",WI 2018,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,The class expectations are very clear and nothing on the projects or exams are surprising. There is a lot of content to grasp though. It's a very dense class and it can be challenging to understand all of the concepts thoroughly.,No,,,,
3/22/2018 15:29:55,CS 361 - Software Engineering I,2,6-12 hours,"Find the Starred slides doc floating around. Get a good group(good luck). There are 5-10 pages papers due almost weekly, but only a small amount of coding in the last 2 weeks. Rooker is as Rooker does, but study those slides and you'll be golden on the final.",WI 2018,Yes,CS 340 - Introduction to Databases,2,13-18 hours,"Get a smart partner. Start the project sooner rather than later. Brush up on aggregates and Joins for the final. All in all, I thought this was a fairly easy course, but the final was not the best and poorly reflected classwork even with the double sided cheat sheet. ",No,,,,
3/22/2018 15:31:44,CS 361 - Software Engineering I,2,6-12 hours,"Completely dependent on your group. If you get a good one, you'll have a decent experience.",WI 2018,Yes,CS 340 - Introduction to Databases,3,6-12 hours,This class is pretty scattered. Look to outside sources to get things done. Start your Final project as early as you can and make sure you follow the specifications.,Yes,CS 344 - Operating Systems,4,18+ hours,"This is the most we'll put together class in the program, hands down. Make sure you start assignments early. "
3/22/2018 17:56:44,CS 361 - Software Engineering I,3,13-18 hours,,WI 2018,Yes,CS 373 - Defense Against the Dark Arts,2,6-12 hours,Badass course. Seriously levels up your 1337 hxx0r skills.,No,,,,
3/22/2018 18:12:54,CS 161 - Intro to Computer Science I,3,13-18 hours,,Winter 2018,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,,No,,,,
3/22/2018 18:48:25,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"Exam questions come from lecture videos, lecture exercises, weekly summary exercises, and quizzes.  Projects are interesting, but require a high degree of focus.  You get to learn how a computer works, cool!",WI 2018,No,,,,,,,,,
3/22/2018 18:52:47,CS 340 - Introduction to Databases,2,6-12 hours,"Easy class.  Do some sql exercises on your own.  Final project is an opportunity to build something good for your portfolio, or you can stick to specifications and spend a few days building it and get an A in the class no matter what.  Final was a bit harder than expected, but I had a 100% in the class going into the final...the class is that easy.",WI 2018,No,,,,,,,,,
3/22/2018 19:21:02,CS 372 - Intro to Computer Networks,4,18+ hours,study the review questions so you know them inside and out,WI 2018,No,,,,,,,,,
3/22/2018 19:23:17,CS 162 - Intro to Computer Science II,5,18+ hours,Start assignments right when you get them. I barely touched the textbook and watched youtube videos on the relevant topics. ,WI 2018,No,,,,,,,,,
3/22/2018 19:27:34,CS 161 - Intro to Computer Science I,1,6-12 hours,,FA 2016,No,,,,,,,,,
3/22/2018 19:32:48,CS 261 - Data Structures,3,13-18 hours,"Don't sweat it if you don't understand AVL trees, it happens to all of us. ",FA 2017,No,,,,,,,,,
3/22/2018 19:34:32,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"Skip the textbook. Watch lectures and do the practice exercises after each one. Make your cheat sheet detailed, you'll be able to help yourself a lot on the midterm and final. Also the last project will take you a long time. Get started early, because you'll also have a final exam and 2 quizzes to take care of in the last week of the class.",WI 2018,No,,,,,,,,,
3/22/2018 20:18:54,CS 261 - Data Structures,4,18+ hours,Lecture videos help with the worksheets. Worksheets help with the tests!,WI 2018,Yes,CS 290 - Web Development,3,6-12 hours,Start the project early! Get comfortable with javascript,No,,,,
3/22/2018 20:20:28,CS 161 - Intro to Computer Science I,4,13-18 hours,"Reading the material is important but practice is even more important. Exams involve a lot of hand tracing and can be tricky at times. Also join Slack to communicate with your peers, they will be very helpful. ",W18,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Do the readings and homework. Do not be discouraged by the tough material. The exams are similar to the practice exams the teacher supplies. If you need help use your resources! TA appointments, NetTutor, YouTube videos (TrevTutor), etc. Class is pretty fun once you get a hang of it.",No,,,,
3/22/2018 20:33:44,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,Use her study guides! The class is very fair. No one is trying to trick you ! ,WI 2018,No,,,,,,,,,
3/22/2018 20:56:45,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,,WI 2018,No,,,,,,,,,
3/22/2018 22:30:31,CS 361 - Software Engineering I,1,0-5 hours,Checkin with former students and reviews about course directions. Rooker is often unclear and frequently contradicts his statements in his own grading.,WI 2018,Yes,CS 362 - Software Engineering II,1,0-5 hours,"Course organization and directions are poor, make sure you check piazza for updates/clarifications, but also realize that grading is fairly lenient.",Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,"Similar to 271, lots of reading, picking up fine details, and regurgitating them for weekly assessments. The programming assignments are challenging, but much easier if you've already done 344 and still have that code to reuse."
3/22/2018 22:31:51,CS 496 - Mobile and Cloud Software Development,2,0-5 hours,"Make sure you get your development environments (Google App Engine, Android Studio) setup well before assignments. Seek out tutorials not in the course material for better explanations of assignments.",WI 2018,No,,,,,,,,,
3/22/2018 23:34:52,CS 340 - Introduction to Databases,2,0-5 hours,"Buy the optional book, the lectures will not teach you well enough. Get started on the final project early. The final this quarter was not particularly representative of the material taught, but it sounds like that wasn't the case before, so who knows?",WI 2018,Yes,CS 290 - Web Development,3,0-5 hours,"It is super easy until the very end, where you will be wrecked if you didn't really bother trying to internalize the JavaScript concepts being taught (""taught""?) in particular. The final tests a lot of tiny pedantic detail, much of it drawn from the lectures/readings.",Yes,CS 261 - Data Structures,2,6-12 hours,"There are some annoying mistakes in the ""textbook"" and worksheets that seem to never be fixed quarter after quarter. That said, if you complete all of the worksheets yourself (without just copying what your group does), do all the reading, and be thoughtful as you complete the coding assignments, this class will both teach you the essential basics of data structures, and not be too difficult to finish with a good grade.  "
3/23/2018 2:20:46,CS 290 - Web Development,2,0-5 hours,"Colt Steele's class on udemy is useful for some concepts like http requests (post/get), DOM manipulation, and most of the js covered in the lectures. If you want a more rigorous web dev education, freecodecamp is the place to be. 

You will be learning front end: html/css/js backend: node.js, express, handlebars, sessions, request. jQuery, bootstrap, etc. are not covered, although you can use whatever you want on most projects.",WI 2018,No,,,,,,,,,
3/23/2018 6:29:42,CS 161 - Intro to Computer Science I,2,6-12 hours,"CS161 is a great course and I learned a lot. Workload is not really that bad if you stay on top of things. Read the the textbook and highlight any unusual exceptions or tricky concepts (these are likely to be tested on the exams). If you take your time and test thoroughly, you should be able to get close to 100% on all of the programming assignments (which represent 60% of the course grade). This leaves you some slack to get a few wrong on the exams and still earn an A. ",WI 2018,No,,,,,,,,,
3/23/2018 8:39:29,CS 361 - Software Engineering I,1,0-5 hours,Be prepared for dealing with vague requirements and a ton of writing. There are some good review materials for the final exam pinned in the class Slack channel.,WI 2018,Yes,CS 372 - Intro to Computer Networks,3,0-5 hours,"Similar to 271 with the weekly summaries and quizzes, but there are also a few Wireshark labs and two programming projects which you should definitely get an early start on (these go a lot easier if you've taken 344 before). Make sure to look through the exercises and solutions posted with each lecture before attempting the weekly summaries.",No,,,,
3/23/2018 11:45:50,CS 325 - Analysis of Algorithms,4,13-18 hours,"Start assignments early, watch lectures on 2x speed, make an amazing cheat sheet, take full advantage of the week to study for the midterm and final. This class is TOUGH but doable - just requires a lot of focus and effort. Look to slack, your hw discussion groups and Tushar's youtube videos for guidance. ",WI 2018,No,,,,,,,,,
3/24/2018 0:08:15,CS 361 - Software Engineering I,1,6-12 hours,"People will complain a LOT about this class but it's nowhere near as bad as the hype. This is the one class I'd say the slack community won't help you with, as it's mostly a place people go to rant. But you'll certainly find people to commiserate with! You won't necessarily learn a lot, but it's easy to get an A and you won't need to spend a lot of time to do it. In regards to Journals, just write a paragraph every few days about whatever you want and you'll definitely get full credit - just don't only turn in one page. Most of your grade in this class also depends on your group and customer; and if you're unlucky enough to get a bad group you will have to do more work, unfortunately. However if you watch the lectures (usually < 30min-1hr a week) or even just skim the slides you'll do fine on the assignments. People said that there was no point studying for the final, but in my opinion I think it was helpful as question topics were covered in lectures and slides.",WINTER 2018,Yes,CS 362 - Software Engineering II,1,0-5 hours,"This class doesn't take up much time (it is probably the least time consuming class I've taken in the program) and the grading was very lenient. The extra credit is pretty substantial but you probably won't need it. The midterm and final aren't proctored and are open notes, book, internet etc. There are five assignments and two group assignments. You pick your own group, so if you get a good team it's helpful. But even if you don't end up with a good group the group work is pretty easy. The individual and group assignments don't take much time to complete if you're just going for requirement completion. If you want to do the work well and beyond minimum requirements expect to spend more time working and learning more about testing resources outside of the class.",No,,,,
3/24/2018 4:47:57,CS 325 - Analysis of Algorithms,5,18+ hours,,WI 2018,Yes,CS 340 - Introduction to Databases,2,6-12 hours,,No,,,,
3/24/2018 14:31:56,CS 162 - Intro to Computer Science II,3,13-18 hours,"Workload starts off heavy, but if you write your functions for the first few labs and projects well, you will be able to use them for future assignments. The difficult part of this class isn't the work, it's the time required. ",WI 2017,No,,,,,,,,,
3/24/2018 15:59:33,CS 290 - Web Development,3,6-12 hours,Find outside sources for content.  Lecture videos are a dud,Spring 2018,No,,,,,,,,,
3/25/2018 8:05:51,CS 162 - Intro to Computer Science II,4,18+ hours,"The first four weeks of the course were the most challenging with a combination of stepping up from 161 and simply the amount of work to complete. Begin on labs and projects early so you're not rushed, and take advantage of the extra credit.",WI 2018,Yes,CS 352 - Introduction to Usability Engineering,2,6-12 hours,"Unfortunately, your experience in this class is likely to be dominated by the random draw of your group. Follow the reading and you'll be fine.",No,,,,
3/25/2018 11:06:33,CS 344 - Operating Systems,5,18+ hours,"Learn linux BASH before entering the class. The first assignment put me behind the while course, and it's written all in BASH. Learning there first is not optimal because the assignments are hard. Same with C. Do not use the class as an opportunity to learn C, you need to know it well already. Make sure you understand how to use a debugger(GDB would be best since your linux programming), valgrind to find leaks FAST and without fuss or you you should practice more coming in.  

I only say this because the assignments are legitimately hard in this class, you'll want to spend you time asking question on piazza about thew new concepts, not figuring out why there is a seg fault in a certain block of code!

It's a great way to practice software engineering skills that the program has been trying to teach us. Breaking down the problems into small pieces!",WI 2018,Yes,CS 352 - Introduction to Usability Engineering,3,0-5 hours,Get out there and get your group going if they are not taking the lead. It really pays off having a good group. I couldn't imagine having a bad group as the class sucks enough as is. ,No,,,,
3/25/2018 11:32:20,CS 161 - Intro to Computer Science I,2,13-18 hours,"Do the readings, read all the Piazza posts and announcements made by the instructors and of course, start your assignments early.",WI 2018,Yes,CS 225 - Discrete Structures in Computer Science,1,6-12 hours,"Like always, do the readings, read the examples, do your assignments yourself, don't copy from others and utilize the resources they give you (old exams, old quizzes, old hw).",No,,,,
3/25/2018 19:25:41,CS 162 - Intro to Computer Science II,3,18+ hours,"It's not a cakewalk and I wouldn't recommend taking this class with anything else if you're working. But, you'll walk away far more competent in C++ than you thought possible after 161",WI 2018,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,The tests are no joke. ,No,,,,
3/26/2018 9:46:49,CS 325 - Analysis of Algorithms,4,13-18 hours,"Focus on the lectures over the textbook (though the textbook is worth reading, if somewhat dense). Watch the lectures at 1.5x speed or above (Video Speed Controller is a great extension for Chrome). Get started early on each HW assignment to give yourself time to digest the new material. Don't get caught up in the wash of panic around Dynamic Programming -- watch the lectures, work through examples and attend office hours.",WI 2018,Yes,CS 361 - Software Engineering I,2,0-5 hours,"Take some of the more exaggerated complaints leveled against this course with a grain of salt. You will learn about software modeling, working together with others, the waterfall approach to development and how to bear down and just get through it. Make sure to avail yourself of study materials pinned to the Slack channel -- the final exam is only marginally correlated with the material covered in the lectures (at least in terms of depth). If you want to do reasonably well on the final, you'll have to do some of your own legwork.",No,,,,
3/26/2018 11:34:29,CS 344 - Operating Systems,4,13-18 hours,Start assignments as early as possible. Make sure to watch videos and leave time to review videos.,WI 2018,Yes,CS 325 - Analysis of Algorithms,2,6-12 hours,"Take the group discussion seriously - they can be a great resource. If the lecture videos aren't useful for you, invest most of your time on outside resources and just use the lectures for review.  The group discussion or Slack channel are great places to hear about good outside resources.  Google is your friend. Most of the HW problems can be found somewhere if you just know how to search for them.",Yes,CS 361 - Software Engineering I,2,6-12 hours,Plan group work in advance to maximize efficiency as following the suggested schedule can turn into 5-6 days of meetings every week.  Follow the HW requirements but don't lose sleep over completing the assignments - grading is pretty arbitrary so no need to stress too much about it.
3/26/2018 15:40:18,CS 362 - Software Engineering II,1,0-5 hours,Be sure to meet all the homework specifications.  The tests are easy.  Be sure to pick a good group.,WI 2018,Yes,CS 373 - Defense Against the Dark Arts,2,6-12 hours,"This was a pretty interesting course, the format for this course is very different than the other eCampus courses though.  There's about 3-4 hours of lecture material every week from a guess lecturer from McAfee, followed by writeups every week.  Some weeks there's a lab or homework assignment to do.  No tests or quizzes, just a final presentation that's due at the end of the quarter on a topic of your choice.  Overall I thought it was a good course.  Assignment descriptions/requirements are pretty vague though.  For the writeups just be sure to cover the lecture materials and talk about the labs.  A good opportunity to get an introduction to security.  Everything this quarter was graded promptly too.

Pros
 - Interesting course material
 - Educational labs
 - Lenient grading
 - No tests

Cons
 - Vague assignment requirements
 - McGrath can be difficult to interact with, although he was usually responds on Piazza
",No,,,,
3/27/2018 8:22:34,CS 325 - Analysis of Algorithms,5,13-18 hours,"Commonly recommended resources: Grokking Algorithms, The Algorithm Design Manual, Tushar on youtube. Use slack! Use slack. Be part of the conversation. Use the pinned resources there. Watch the videos at 1.5x at least. Start the assignments early.",WI 2018,No,,,,,,,,,
3/27/2018 12:03:43,CS 225 - Discrete Structures in Computer Science,2,13-18 hours,"Don't spend too long trying to understand everything from the book. If you get stuck, read/watch internet resources/videos. Review every homework assignment/quizzes on a regular basis. They will repeat or be in a slight variation on the exam. Grading is lenient, but I spent way too much time relearning concepts from previous weeks. Final grade 93%",WI 2018,Yes,CS 161 - Intro to Computer Science I,1,18+ hours,"Practice C++ everyday, especially to prepare for CS 162",No,,,,
3/27/2018 16:23:42,CS 372 - Intro to Computer Networks,4,6-12 hours,"Put all your effort into reading the slides and acing weekly quizzes. If you can ace those quizzes then you will ace the midterm and final. As for the projects, start them early. I would say this class is moderately difficult, but keep in mind that I did networking stuff for my internship last year, so I already was comfortable with about 1/5 of the material I would guess.",WI 2018,Yes,CS 362 - Software Engineering II,2,0-5 hours,Your number 1 task will be understanding how the dominion source code works. IF YOU DON'T UNDERSTAND THE GAME ITSELF AND HOW THE GAME CODE WORKS YOU WILL NOT UNDERSTAND HOW TO TEST IT. That was my downfall. Otherwise this class is really easy.,Yes,CS 344 - Operating Systems,4,13-18 hours,"I really liked this class, but it was challenging material in my opinion. There is a lot of memorization of tiny details that can make or break your programs. The projects are no joke, and they are graded strictly. i.e. f your code does 99% of the program correctly, but formats the output incorrectly, the graders will mark you down on it. Start projects early, procrastinate and you will fail"
3/28/2018 6:38:51,CS 340 - Introduction to Databases,2,0-5 hours,"Ask for clarification on every assignment, early, for anything that could be at all vague. Otherwise, someone will ask the day before the assignment is due, the professor will give an answer that makes no sense in context, and you'll have to redo your assignment.

Start the project early; it's more work than you'll expect!",WI 2018,Yes,CS 325 - Analysis of Algorithms,3,6-12 hours,"For the midterm and final, focus on making a robust cheat sheet! It can be double-sided, and you really should replicate algorithms onto the cheat sheet as well as (for the final) examples of NP-complete problems and their descriptions. ",No,,,,
3/28/2018 9:53:56,CS 325 - Analysis of Algorithms,5,18+ hours,"I don't even know where to start. Watch the videos they are long and drawn out but they have good information, watch other videos to clarify. The book is meaty, skip most of it unless your going for a PHD. ",WI 2018,Yes,CS 361 - Software Engineering I,1,6-12 hours,Meh. Focus on what you want in this course. It is a good practice in corporate BS.,No,,,,
3/28/2018 12:22:02,CS 162 - Intro to Computer Science II,4,18+ hours,"Know your pointers really well! Get a head start on all assignments if you can. Really focus on the Labs and Projects. Use outside resources (YouTube, cplusplus.com, etc) to thoroughly understand the concepts. It's okay if Big-O notation is confusing at this time, class did not dwell too long on the subject.",WI 2018,No,,,,,,,,,
3/28/2018 19:54:36,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,Read the book chapters and do the projects ahead of time. Make sure to test your programs thoroughly for all specifications. Projects are a big chunk of your grade and its nice to have a buffer going into the final.,WI 2018,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"Complex concepts, shallow depth so the class was a lot easier than it can be. Grading is very lenient as well.",No,,,,
3/28/2018 23:33:33,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"Focus mainly on doing the assignments to learn the material. Use the textbook as a reference. Do the extra credit as well! The summary exercises, quizzes, and lectures will help fill in any gaps. The tests are very challenging, but maximizing your points earned from the coursework will provide a nice cushion for you in the end.",WI 2018,Yes,CS 261 - Data Structures,3,6-12 hours,"The textbook isn't very helpful, to be honest. The lectures are pretty good. Knowing the worksheets backwards and forwards will help you the most.",No,,,,
3/28/2018 23:49:05,CS 290 - Web Development,1,0-5 hours,"This class seems to be constantly changing, but it's honestly pretty easy in its current state. The project could be done in a few hours. The final assignment was challenging, and the final was pretty tough (the class average was a D), but it was only a small percentage of the grade. Just do all of the assignments and coast into the final.",WI 2018,Yes,CS 340 - Introduction to Databases,2,0-5 hours,"Like others have said, this this class is only really challenging in the final few weeks. Start early on the project! I learned this the hard way. The website has a lot of things you need to implement and can take a deceivingly long time to complete. The final was challenging but pretty fair overall.",No,,,,
3/29/2018 10:15:34,CS 325 - Analysis of Algorithms,4,6-12 hours,"Slack is a godsend, ask others. Make sure you do the extra credit when its offered.  Getting bonus extra credit in the discussions is really easy to do as well.  The midterm and final are rough but fair (also graded pretty leniently). See the reddit sidebar for some great external learning tools. Highly recommend reading Grokking Algorithms ahead of time.  ",WI 2018,No,,,,,,,,,
4/1/2018 10:37:07,CS 162 - Intro to Computer Science II,4,18+ hours,Start your projects early to give yourself plenty of time for debugging. ,WI 2018,Yes,CS 352 - Introduction to Usability Engineering,2,6-12 hours,"It's all group work, so hope for a group with 2+ active classmates. Review the examples and instructions before turning in your deliverables. Balsamiq is good for prototyping.",No,,,,
4/2/2018 9:52:52,CS 373 - Defense Against the Dark Arts,1,6-12 hours,"It's very much a ""get out what you put into it"" course. The material is generally very interesting and not much seems to be expected in the weekly write-ups and occasional labs.",WI 2018,Yes,CS 419/467 - Software Projects,1,13-18 hours,"If you already have a job, just pick a project that is fun to you.  If you don't, think about what type of project you would like in a portfolio to show potential employers.  ",No,,,,
4/2/2018 14:01:33,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,The material is challenging but the grading is lenient. The prof wants to make sure that you understand the material more than get the perfect answer.,WI 2018,No,,,,,,,,,
4/6/2018 5:50:01,CS 261 - Data Structures,3,6-12 hours,"Grokking Algorithm book would be fun to read. This course didn't have a book but lots of pdfs. Midterm was hard, Final was more feasible. Practice lots on WRITING (not typing) code. Practice as if you won't have a compiler to check and have to submit it immediately.",WI 2018,Yes,CS 290 - Web Development,2,0-5 hours,"If you come into the course with HTML / CSS experience, you will be fine for 20% of the course. The course instructor tries to be funny but the material taught just isn't very enough... Last two weeks would be difficult. Comment on your early assignments, it will come back to help you later in the term. There was a project worth 10% of the final grade - don't spend too much time on it. I made the mistake of spending over two weeks on fine tuning it, and end up falling behind on my other two courses. ",Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"161 taught you how to cin and cout, right? 271 would be doing lots of those too... except now a ""cin"" will need 4 - 6 lines of codes. Learn to use the VS debugger to watch the registries, that was very helpful for most of my assignments. Skip the book, only use it to search for terms. Lectures are hard to pay attention to but a must. Final and midterms were both reasonable but not easy."
5/8/2018 8:45:50,CS 162 - Intro to Computer Science II,5,18+ hours,"Be prepared for a large learning gap from 161 to 162. 161 does a great job of setting the foundation for C++, but the first project in 162 is intimidating at first. Be sure to get really familiar with pointers, including double pointers. ",Winter 2018,No,,,,,,,,,
6/9/2018 15:28:08,CS 361 - Software Engineering I,3,0-5 hours,"Always always always have your stuff done early in the week. The final is a shitshow, just lightly review the lectures and wing it, as it doesn't ask you about anything you learned in the class anyways. Good luck",SP18,Yes,CS 464 - Open Source Software,1,0-5 hours,An easy class to pair w/ something harder. I liked it because you get to do projects on something you actually want to do (pick a legit open source project that you care about),Yes,CS 475 - Intro to Parallel Programming,3,6-12 hours,"Start homework early, they will make or break your grade. Tests are relatively easy"
6/9/2018 15:29:59,CS 419/467 - Software Projects,3,6-12 hours,"Do a project that is complex and interesting. This should be something you want to show off during interviews. Otherwise, it's a breeze",SP18,No,,,,,,,,,
6/11/2018 15:38:23,CS 325 - Analysis of Algorithms,3,6-12 hours,"This class isn't as difficult as people make it seem.  People get bogged down trying to understand every proof and every example from the lectures.  Don't worry about the details, focus on the big picture.  I didn't need to use outside resources either, the lectures were good enough (if you focused on big picture stuff.)  Extra credit is plentiful if you take advantage of it.  The first and last home work assignment have extra credit.  DO IT, it doesn't take too long and can make a big difference grade-wise.  Also every week extra credit can be earned in the discussion groups for posting early, often, or having a very useful post - these are basically free points so take an extra minute every day and post something.  Don't get freaked out and don't lose the forest for the trees and you will be fine.  Grading is lenient as well.",SP 2018,Yes,CS 340 - Introduction to Databases,2,0-5 hours,"First of all this class is in the midst of a re-design.  Take any older post or even this post with a grain of salt - things likely can and will change.  I won't talk about my frustrations (which were many) because it likely was due to a new professor coming in and trying new things out.  At the end of the day the material is pretty easy.  This class focuses on SQL and it never gets particularly difficult or complicated.  While the class material may change, I highly doubt this will ever be a very challenging or time consuming class.",No,,,,
6/12/2018 12:56:14,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,"The book and the teacher's notes are really all you need, which is good because the lectures are okay at best. Both the teacher and TA were responsive over email and Piazza. I did worse on the first exam than the second, mostly because of first time ProctorU issues. Prof does like to be tricksy on the exams, and there were errors with some of the questions, so double check your results when you get them. Protip: the reading for module 7 is extra long and arcane, and that week you also have two group assignments on top of the normal homework, so be proactive.",SP 2018,No,,,,,,,,,
6/13/2018 6:59:53,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,"Familiarize yourself with a unit testing framework like catch2 early on. If you can write your own unit tests for your projects, you can be almost 100% certain you'll pass the automated tests on mimir. Get a headstart on group work since it can be slow to reach consensus. The class is not that hard if you manage your time and test your code before submitting it.",SP 2018,No,,,,,,,,,
6/13/2018 15:08:22,CS 261 - Data Structures,3,6-12 hours,"Like everyone else says, make sure to do all the worksheets yourself - especially before exams. ",SP 2018,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,The lectures are really good. Make sure to do all the self-assessments related to the lectures. Make it a point to do as much extra credit as you can early on (before it gets harder). It can help improve your grade significantly.,No,,,,
6/13/2018 21:12:46,CS 340 - Introduction to Databases,3,13-18 hours,"This course is being redesigned since March 2018, and probably is still not finalized. The new instructor broke down the final project into ~8 steps, and encouraged students to do peer reviews. Mimir is also introduced to students. The software gives instant feedback, but is also rigid in terms of grading what is correct. There is a chance that you may spend ~2 hours on one query as you cannot figure out why your answer is one space off from the ""correct answer"". Get involve with slack (student-managed one) for information. One of the reason why this term was so difficult is that TAs and Instructors were taking ~2 days to answer a single question. Slack answered much faster. ",SP 2018,Yes,CS 344 - Operating Systems,5,18+ hours,"Brewster and his TAs are great at answering questions. Visit piazza and slack frequently to get a sense of  how to start your assignments. And start them EARLY. For an estimate, 162's final project took me 3 days to complete, and 344's each assignment took me 4-5 days of work.  If you want to start ahead, familiarize yourself with bash. It will greatly reduce the shock on the first part of the term. This course is challenging but doable, and help is extremely available. ",Yes,CS 475 - Intro to Parallel Programming,3,13-18 hours,"The projects are more for you to get a feeling of an ""experience"" versus the ""learn this and build that"". Concepts are taught and usually most of the code is written out, you just need to add your own twist and understand ""why is this happening"". Listen to the lectures, they're worth it. Tests are proctored this term."
6/13/2018 21:59:34,CS 362 - Software Engineering II,4,0-5 hours,"Reach out to the professor if things are not making sense.  This class has been my least favorite so far and I really struggled to understand things, mostly because they were not presented well.  Meeting with the professor really helped me!",SP 2018,Yes,CS 340 - Introduction to Databases,2,0-5 hours,"Take each project step seriously, don't just go through the motions.  Review quizzes and assignments a few times throughout the quarter - the more times your look at each problem, the simpler it will get.  Model your project off the example project so that when you get to a difficult step it is easy to see how the example translates to your project.  Review 290 material when there is a lull so that you can hit the ground running for the final steps of the project.  Don't be discouraged before even starting the class since there are many bad reviews out there - this has been my favorite class so far!",Yes,CS 475 - Intro to Parallel Programming,2,0-5 hours,Start projects early.  Use Slack as a resource early and often.  Don't overthink things.  Spend time on the writeups explaining your data and making connections to the lectures.
6/13/2018 22:39:37,CS 344 - Operating Systems,3,13-18 hours,"This is a great class. All the project have an associated grading script, so you know exactly what grade you'll get on it when you run it with your project. The professor and TAs are very helpful and want you to succeed. The only way to fail this class is if you procrastinate or get lazy, and turn in something with mistakes hoping it wouldn't be caught. Don't do that. The 4 projects each took me 18-25 hours to finish, with a good number of hours making sure it gets full credit based on the grading script, so give yourself plenty of time. Lectures are very helpful in understanding and getting the projects done. Easy final since it's open everything and very straightforward. Don't procrastinate, set a schedule, and you'll be fine.",SP 2018,Yes,CS 361 - Software Engineering I,3,0-5 hours,"This should be an easy course, except I was basically stressed out by this one, because things are graded so arbitrarily. Had an okay group that met and did everything as expected given what we learn in the lecture and the PDFs which list what we need to do. And we kept getting docked points off arbitrarily. There were times where I thought'd we'd did everything fine and detailed, only to get major points docked off, and times where it was a meh job only to get full credit??? The final is insanely vague too. Overall it is not a time consuming course, but prepare to write a lot of fluff and make things look pretty for the sake of completion.",Yes,CS 475 - Intro to Parallel Programming,1,6-12 hours,"Easy class, but beware, it's all points, and you can only miss a total of 30 points or so out of 1000 (>97%) before you drop down to an A-. Weekly quizzes are easy if you went through lectures, projects have very little coding, and most are given to you to just do the analysis, so it should take very little time. Everything's easily graded, and provided you've done everything, you'll be fine."
6/14/2018 10:07:13,CS 464 - Open Source Software,1,0-5 hours,The only difficulty is finding and contributing to a project for the final assignment. Do that early on and you’re golden. I spent <1 hour on this course per week all quarter. ,SP 2018,Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,Get an early start on the assignments,No,,,,
6/14/2018 12:01:28,CS 361 - Software Engineering I,1,0-5 hours,"Overall the class is a waste of time; get what lessons learned you can out of the course when working with your group. Most of our assignments were graded arbitrarily, losing few points for formatting versus content. The final is silly and studying won't really help you with the weird situational questions presented. ",SP 2018,No,,,,,,,,,
6/14/2018 19:09:20,CS 161 - Intro to Computer Science I,2,6-12 hours,Try to get a copy of the textbook in advance and read as many chapters as you can to prepare. Staying ahead of the course was a big help. The lecture videos aren't too helpful but outside resources such as learncpp.com were. The professor is very responsive on Piazza. The midterm and final are proctored and mostly M/C and T/F questions from the readings. Overall the courseload is pretty light up until the assignments for the last two weeks.,SP 2018,No,,,,,,,,,
6/15/2018 0:18:20,CS 475 - Intro to Parallel Programming,3,0-5 hours, Join slack. Other students often help each other out or at least you won't be completely confused alone since the instructor and TAs rarely ever answered questions on Canvas. Don't miss any of the projects.. the homework isn't hard(but often confusing just graded leniently) but there's very little leeway to lose points in this class. The grading scheme requires you get >97% to get an A. Don't miss any of the weekly quizzes either. Exams are proctored but not difficult.,SP 2018,No,,,,,,,,,
6/18/2018 4:28:42,CS 372 - Intro to Computer Networks,4,18+ hours,"I found the class delivery to be a bit dry, but it is the same format as 271, so no surprises ever.  Paulson-made classes are quite predictable.  Exams and quizzes are made from the weekly questions.  Take each weekly check twice as questions change.  Programming assignments are the most difficult part.  I'd say to budget 15-20 hours for each to be safe over the two weeks they are available.  YMMV. ",SP 2018,No,,,,,,,,,
6/18/2018 4:35:43,CS 344 - Operating Systems,4,18+ hours,Be disciplined and attack the content early and often.  It can be easy to fall behind because of the block format (not weekly as in other classes).  You are given much time to learn but need it to cover much material.  The programming assignments are fascinating and this was my favorite class so far (261 - Data Structures being a close second).,SP 2018,No,,,,,,,,,
6/18/2018 17:16:14,CS 162 - Intro to Computer Science II,2,18+ hours,"As with CS161, dive into the code as early as you can to practice learning the concepts. learncpp is sufficient for doing well on the assignments. I also used visualgo.net to learn about linkedlists. My grades were being submitted slow, but seemed to be more lenient than 161. Perfectionism will kill your time, just nail all the requirements, and double-check the grading rubric. My confidence went from 0 to 100 after the second major project. Code and test everyday on FLIP. I wished I used my time to learn VIM, would've saved me a lot of headache from trying to figure out errors from going from Visual studio to FLIP.",SP 2018,No,,,,,,,,,
6/20/2018 17:04:00,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,I was initially intimidated by the course due to the rumors.  Class is actually not bad.  First few weeks may be confusing but it will make sense around week 3-4.,SP 2018,No,,,,,,,,,
6/25/2018 22:25:43,CS 325 - Analysis of Algorithms,3,13-18 hours,"This class is not as bad as I thought it would be. I am more of a ""mathy"" person though. The lectures are as bad as everyone says they are, but watched on 2 speed made it better. I'd say lectures are worth speeding through, especially for second half of the course. Especially the midterm/final review lectures! They give a really good overview for studying. The book is worth reading for the 1st half, other resources are better for second half. Overall, I'd say it's a very fair class. ",SP 2018,Yes,CS 290 - Web Development,2,6-12 hours,"Most of the assignments can be done fairly quick, maybe a couple of days or so. As everyone mentions the last assignment is killer, but you get the most out of it. It seems like putting in a lot of effort and features in your website project is not a factor to get you in the running for EC. Also, it seems like the EC list is chosen willy-nilly.The lectures are really good and worth it, same with the readings. Supplement with Colt Steele's Web Dev course and you're golden. ",No,,,,
7/1/2018 22:55:57,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Watch the lectures and take notes carefully, and you can skip the readings entirely. Be able to solve all of the problems from the lectures and try to relate questions on the quizzes and exams back to them. 
Don't stress if you feel like you didn't do well on the quizzes and exams - grading is very lenient, so make sure you answer all questions so you get partial credit. Don't worry about formatting too nicely on the exams, that can be a real time suck that you want to avoid.
Chegg can save you quite a bit of time every week.",SP 2018,No,,,,,,,,,
7/2/2018 12:27:08,CS 361 - Software Engineering I,2,13-18 hours,"At the start of the course you'll get just 3 or 4 days to write a 2000 word ""vision statement"" and post it to Canvas for voting. Voting is worthwhile in that it'll help the good projects float to the top, but voting is also useless in that you'll be randomly assigned a project (and not necessarily one you voted on). Make peace now with the idea that whatever project(s) you thought sounded stupid in the voting will be the one you're assigned to work on all quarter. Weekly homework requires a ton of writing and diagram-making. Grading is extremely arbitrary. Expect to lose points for omitting things you didn't even know were requirements, and expect your TA to suck at English comprehension. Being a customer is a lot of work with minimal reward. I served as a customer and I still don't know if I got any extra credit for it as promised. The final is ridiculous - even if you study all the slides and lectures, the questions asked will be so vaguely worded you'll struggle to pick the best answer of the bunch. Shout out to my group members who contributed absolutely nothing during the coding weeks - I hope you all end up in shitty QA jobs.",SP 2018,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"The homework will not prepare you for the tests. Take the questions from the self-checks, biweekly tests and quizzes and put them in a doc. Print them. Do the questions over and over on paper until you truly understand them, and even then, expect the exams to wreck you with questions that are just different enough from what you saw on homework or practice tests. You'll probably run out of time on exams. GET A CALCULATOR that can do binary-hex conversions like the Casio fx-115ES PLUS. They don't make it clear in the syllabus or course materials that this kind of calculator exists and that you can use it on the exams. Don't be misled into thinking you have to do all the conversions by hand. There's no point in doing them by hand, it'll slow you down way too much on the tests and you'll never be tested on your abilities to convert/add/subtract binary or hex by hand. The extra credit part of the homework usually takes as long as the meat of the homework and is worth just 1-2 piddly points. You're better off using that time to study for the exams. Class is overly focused on minutia and details. Expect to spend 11 weeks learning a lot of stuff you'll (probably) never use in your CS career. ",No,,,,
7/15/2018 7:24:16,CS 161 - Intro to Computer Science I,2,0-5 hours,"If you can start reading ahead of time (before the course), do it! Getting ahead of the material will be super helpful. Also, I recommend using videos to really hone in on concepts you're having a hard time grasping.",SPR 2018,No,,,,,,,,,
7/19/2018 10:12:54,CS 165 - Intro to Computer Science (Accelerated),3,18+ hours,"Assess the difficulty of the assignments immediately after they are accessible to you on Canvas; last-minute coding will kill your grade. The textbook is extremely useful for studying for the midterm and final; do the exercises that relate to each chapter. The video lectures are poorly made and, for most topics, not helpful.",SP 2018,Yes,CS 225 - Discrete Structures in Computer Science,4,18+ hours,The Epp text is so full of errors and badly organized that you'll need the Rosen text for clarity. Obtain both. Study the old homework and quizzes from on-campus classes; their questions show up on exams. Video lectures are not very helpful.,No,,,,
8/5/2018 7:57:02,CS 161 - Intro to Computer Science I,2,13-18 hours,,Winter 2018,No,,,,,,,,,
8/5/2018 8:22:04,CS 162 - Intro to Computer Science II,4,18+ hours,"Read through the advice on OSU Course Explorer and follow it: learn about/prepare makefiles, menu functions, input validation, etc. before you even reach the first day of class.  You hit the ground running in this class and it doesn't let up until you're in the last few weeks.  I found the book helpful and stopped watching the lectures completely by week 3.  LearningLad and TheChernoProject on YouTube were helpful for some of the more difficult concepts.",Spring 2018,No,,,,,,,,,
8/15/2018 17:36:37,CS 161 - Intro to Computer Science I,3,13-18 hours,"Read the book and get started on the assignments sooner than later. I would start the week off with reading and lecture videos, and then start the assignments afterwards. The lecture videos were sometimes helpful for reinforcing concepts, but I don't think you'll be missing out on much if you skip them. Piazza was a great resource. The last 2 assignments were significantly more work than the earlier assignments. Get started on those projects early. Read the exam questions carefully and take the time to study for exams. Very enjoyable class.",SP 2018,No,,,,,,,,,
8/15/2018 17:45:00,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"I found this class to be more difficult than CS 161. The book is difficult to follow at times. The lecture videos are helpful about half the time and they are dated. Sometimes the lectures aren't in line with the book. As everyone else has said, Youtube videos are a great resource: TheTrev Tutor and Eddie Woo. Chegg can be a good resource for checking homework or additional problems not included in the back of the book. Piazza is pretty dead in this course, but slack was fairly active.",SU 2018,No,,,,,,,,,
8/16/2018 9:18:50,CS 362 - Software Engineering II,2,0-5 hours,"This is a course where you need to have a mind-meld with the professor.  Specifications are not given clearly and yet points are deducted when you do not meet the phantom requirements and you cannot challenge the deduction. 
More than actual testing, you better know the terminology of testing.  The final project that is worth  20% of the grade is in Java, which might be the first time you have used Java.  No help from the TAs in answering questions on Piazza.  Professor only answers periodically and typically not for student's problems with Java and JUnit.  It is mostly fend for yourself.  If you have a good group, you will not get slaughtered for the project.  Check that someone in your group knows Java and has some testing experience in JUnit.  ",SU2018,No,,,,,,,,,
8/16/2018 9:24:22,CS 261 - Data Structures,3,6-12 hours,"Studying up on linked lists and dynamic arrays will make the course much easier, as they're both the fundamental data structures you'll be using to write each of the abstract data types. Familiarizing yourself with C, particularly with regards to dynamic memory allocation and print statements, will also make life a lot easier. 

The class also has a heavy focus on group work with the weekly worksheets. Worksheets are graded based on effort, as opposed to correctness, and you could technically split the worksheets among group members to lighten your workload. However, completing the worksheets yourself not only helps you better understand ADTs, but will also make the coding assignments and exams much easier.",SU 2018,Yes,CS 290 - Web Development,3,6-12 hours,"Don't spend too much time reading the textbook - it's not the most helpful and there are much better resources out there. Lectures are great and do a good job at stepping through each of the concepts using sample code. If you are struggling with a concept - especially with express or AJAX - find outside resources immediately. The course modules provide a basic overview of these concepts and do not go too in-depth.

The class project is relatively straightforward - if you are only looking to complete the requirements then just make a quick static website. You do NOT need to implement any server-side code for the project. However, be prepared to spend a fair amount of time on the final homework assignment, especially if you are not comfortable with express, AJAX/asynchronous events, and mySQL. The last assignment combines everything you cover in the course in a basic CRUD app, so you'll be juggling a lot both on the client and server side.",No,,,,
8/16/2018 10:01:48,CS 162 - Intro to Computer Science II,1,6-12 hours,"Ignore the textbook and the provided lectures as they provide very little value. Instead, rely on learncpp.com, cplusplus.com, Paul Programming on youtube, and TA office hours. The TAs for this course were tremendous. It was not the super difficult class that it is made out to be. If you are able to plan your assignments and manage your time, you will get exceptionally fast at the concepts.  ",SU 2018,No,,,,,,,,,
8/16/2018 10:41:18,CS 290 - Web Development,2,0-5 hours,Brush up on Javascript/Node before the class and it'll be easy,SU 2018,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Don't wait until the weekend to cram in all the info.  Read the book; the lectures were pretty bad near the end.  Literally, the professor said that the definitions in the video were wrong and you were expect to remember the book definitions, but here's the video anyway.",No,,,,
8/16/2018 15:52:34,CS 161 - Intro to Computer Science I,1,6-12 hours,"Watch the lecture videos, take notes, and read the textbook. All of the assignments in this course are fairly simple as they're meant to go over basic programming concepts. Be sure to READ the assignments and the syllabus as all of the information you need is contained within them. ",SP 2018,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"The lecture videos don't quiet cover the full scope of  the material each week and could use updating. The test and quiz questions come directly from the textbook, so your best bet is to study and understand those as best as you can. ",No,,,,
8/16/2018 15:56:05,CS 344 - Operating Systems,3,13-18 hours,"This is an enjoyable, well made and taught class with an amazing batch of TAs.  The programs are difficult but everything you need to complete them is included in the lectures / reading material - especially the reading material.  I can't emphasize enough, everything in the reading material is there for a reason and likely very important to completing the project.  Even things that you first think ""oh I don't really need that"" you will need.  I think this class is similar to 162 in that the material itself isn't necessarily that hard or complicated, but the assignments are very large and take a lot of time to implement.  Most students end up with an A so don't worry too much.  Brewster is the best professor in the program bar none",SU 2018,Yes,CS 361 - Software Engineering I,2,0-5 hours,"The weekly work likely won't take much longer than 5 hours to complete - that being said the constant group work requires lots of group meeting, discussion.  I found that even though I wasn't spending a lot of time on the class it always weighed on my mind, remembering the various group meetings, customer meetings - it just wears on your over the course of the term.  The test at the end is difficult.  I strongly recommend making note cards as you go through the term and study a little bit each week.  This will make the final much more manageable.  It is stressful to cram all the material in the final week while also trying to decipher Rooker's confusing, ambiguous questions.  Seriously, study as you go and you will thank me come the final.",No,,,,
8/16/2018 15:59:04,CS 162 - Intro to Computer Science II,3,13-18 hours,"If you know pointers really well prior to taking this course then you'll be fine. If not, then I would recommend you do the Microsoft Intermediate C++ course on EdX. This course also covers inheritance and polymorphism, so it would be beneficial to have some exposure to those concept beforehand as well. Otherwise, the material isn't overly difficult, there's just a ton of work to do each week. Prioritize and plan ahead and you'll be fine.",SU 2018,Yes,CS 290 - Web Development,4,13-18 hours,"While the lecture videos are some of the more interesting I've seen to date, the material included doesn't give you everything you need to be successful for the final project and the final exam. If you've had experience with Javascript, AJAX, and Express then you'll be fine. But for a newbie like me, it was a lot to get used to. Especially when some of the assignments essentially throw you into the deep end that you're not sure what questions to ask. It also didn't help that the instructor and the TAs were non-existent during the duration of the quarter. I would recommend avoiding this class over the summer. And if you're new to JS, the  take this class by itself during the summer.",No,,,,
8/16/2018 16:33:53,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"This class feels slapdash and indifferently maintained. The primary book is bloated and the videos are from some other class using some other book, though you can get by with them. Assignments are graded slowly, often still not returned by the time you have to take a quiz, midterm or final on the material. During the quarter I took it, the second section got their stuff back much more quickly, presumably because they had a lot fewer people, so consider that when registering. Teacher presence is minimal.",SU 2018,No,,,,,,,,,
8/19/2018 15:13:50,CS 361 - Software Engineering I,2,0-5 hours,"Write more than necessary and format everything nicely. That should help you get good scores on the coursework. Pray that you get a good group. The final is full of weird and subjective questions, but be sure to study all of the slides anyway.",SU 2018,No,,,,,,,,,
8/20/2018 5:24:33,CS 344 - Operating Systems,3,13-18 hours,"Be aware that nothing is shortened or simplified due to the summer term - this is the full-blown 10 week course in 8 weeks. With that said, I can't add anything that hasn't been said before - Brewster and his TAs really put their everything into this class. Take advantage of high quality lectures and assigned readings. The assignments are fair, applicable, and interesting, just will take you a bit of time. Don't sleep on OTP.",SU 2018,Yes,CS 361 - Software Engineering I,1,0-5 hours,"You're stuck in the same group and with the same randomly assigned project all term. Accept that, accept that this class while being ""revamped"" is not going to get better until there is a new instructor, which isn't going to happen. ",No,,,,
8/21/2018 16:57:06,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,"To prepare for this class, try out the mobile/PC game ""Human Resource Machine."" It doesn't teach you code, but it does get you in the ""assembly mindset."" 
The early projects are very easy compared to the later projects. Don't let the early ones mislead you on the time commitment to finish the later projects. 
The weekly summaries and couple of quizzes were great for checking my understanding between exams. For exams, I studied the weekly summaries, put these questions onto notecards, and rewatched lectures. ",SU 2018,No,,,,,,,,,
8/21/2018 23:29:36,CS 161 - Intro to Computer Science I,3,6-12 hours,Having programming experience beforehand really helps make things really easy. I didn't really read the book until it came to midterms. The TAs were much better at getting answers than the professor. Not a difficult class. it was a busy summer paired with CS225 though. ,SU 2018,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Do the homework and all the practice you can. If you have a question, be prepared to look for it on your own because there doesn't really seem like there's anyone to help. It isn't terribly bad though. Lectures are well done, grading is generous, and the class is actually kind of interesting if you like logic games.",No,,,,
8/22/2018 19:49:04,CS 261 - Data Structures,2,6-12 hours,"The first few weeks of this class are fairly straightforward, covering things like dynamic arrays and linked lists. On top of these you implement interfaces like bags, stacks and queues. The latter part of the course becomes more challenging conceptually, covering trees (BST, AVL, heaps), hash maps/tables, and graphs(BFS, DFS, Dijkstra). Exams have a lot of questions revolving around time complexity (e.g. whats the average case for adding to a linked list, what about a hash map with chaining, with buckets?). They also have a few programming questions for which you can use a text editor (offline), and of course application questions like simulate breadth and depth first searches of this graph or remove the value 16 from this BST.

The assignments required us to implement the interface as specified in the header (.H) like add, contains, removeAt, etc. You do not need a strong understanding of headers, OOP, makefiles, etc. as the focus is on the data structures themselves. Some assignments will build on these data structures (we built a spell checker on top of a hash table with buckets).

Most weeks you will have group work covering 3-5 worksheets (taking 1-3 hours to complete in one go), and an assignment. The worksheets require the group to work on implementation of the same basic functions you will implement in the assignments. They are worth basically nothing in the grand scheme of things at 1 mark each for participation. That said, understanding the worksheets will help you succeed in both the assignments and exams for this class.

The lectures are basically visual versions of the textbook readings. I found myself reading the chapters less and less as the semester wore on. Most of the content in the readings are covered in the videos, with the longest being around 30 mins and the shortest around 10 min. Make liberal use of the 1.5x speed to get through some of the repetitive or drier sections. In addition, Mycodeschool on youtube does excellent comprehensive lectures about most of the data structures covered in this class.

For me the most difficult part was rebalancing AVL trees (although we didn't implement it). Conversely, the easiest part was hashmaps/tables (since these are basically identical to the first weeks coverage of dynamic arrays and linked lists).  The best advice I can give for this class is to understand the abstract data types (ADTs) conceptually along with their interfaces. If you can visualize the data structure (like a linked list or a tree) and imagine traversing through it or removing elements then you will find this class a breeze. Best of luck to future students!",SU 2018,No,,,,,,,,,
8/28/2018 5:27:40,CS 373 - Defense Against the Dark Arts,1,0-5 hours,"Be sure to read the notes in the lecture module.  A few mention that the weekly write-up should include some detail about a lab, but that requirement isn't highlighted anywhere else other than a sentence below all of the videos.  If the module doesn't mention the lab as required, then you can skip it, though as a learning experience it might still be worth doing.  The programming assignments are easy though the directions are nonexistent.  Just do the bare minimum, if it doesn't say the program has to be interactive than you don't need to make it interactive.  Also, the syllabus mentions something about compiling on the VM but it's not actually possible since you can't transfer on/off and the TA wont be able to either.  If you show some effort and can check off any of the requirement in some form you should get a 100.    ",SU 2018,No,,,,,,,,,
9/5/2018 12:46:36,CS 373 - Defense Against the Dark Arts,3,6-12 hours,"The format of the class is to watch weekly lectures about 3-4 hours long, then regurgitate the content in a blog post, peppered with maybe 2 easy coding assignments throughout. The final is to make a 30 minute presentation that counts for 50% of your grade over some security topic. I would have liked more 'hands-on' activities weekly.  If I could speak to my past self, I would advise to take another elective.",SU 2018,No,,,,,,,,,
9/5/2018 12:49:07,CS 361 - Software Engineering I,1,6-12 hours,"The class focuses almost entirely on group work and writing (it's the intensive writing course for the degree).  Points will be taken off here and there for seemingly nominal reasons, but just accept it and continue on.  Everyone will get an A if they pull their weight.",SU 2018,No,,,,,,,,,
9/5/2018 12:51:46,CS 362 - Software Engineering II,2,0-5 hours,"Similar but easier than 361 in my opinion.  The group work is still consistent, but much less writing and shorter assignments for that matter.  I felt that we would get an A simply for turning in the assignment.  Learn how to play the card game Dominion before starting to get a leg up on the class.",SU 2018,No,,,,,,,,,
9/26/2018 9:15:32,CS 161 - Intro to Computer Science I,2,0-5 hours,"The class starts off really easy, which is a great opportunity to make use of the book and stay ahead. If you spend a consistent amount of time each week, then the exams and final project should be a breeze. If you are new to programming, I do suggest reading the book as the exam questions may seem tricky if you didn’t.",SU 2018,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"There was a lot of complaining about this class this quarter, but the truth is, you are given everything you need to succeed. There are even practice quizzes for the quizzes. Study the homework, quiz and practice exam questions, and you will be fine on exams. You may need to use almost all of the time on the exams, but the grading is fair and lenient.",No,,,,
9/29/2018 10:03:37,CS 161 - Intro to Computer Science I,1,0-5 hours,"This is a solid introductory C++ course. If you have some experience with OO programming, you'll find the course very easy. Most of the assignments can be completed in just a few hours, but I still found them valuable in drilling down the fundamentals and building a foundation. While it can be boring to once again learn conditional statements, loops, and other basic programming techniques, it's good practice. ",SU 2018,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"Course is more work heavy than I expected. Lots of different concepts (boolean math, basic probability, basic data structures) lumped together into one class so you will feel like your changing gears every other week or so. The course was more annoying than anything having to deal with equation editors. Still, it's pretty easy if you have a decent math background, but perhaps a struggle if you don't.",No,,,,
11/16/2018 8:19:14,CS 161 - Intro to Computer Science I,1,0-5 hours,"If you've had previous experience in C++ or Java, consider taking 2225 at the same time even if working full time if you don't have a ton of other responsibilities.  ",FA 2018,No,,,,,,,,,
11/26/2018 19:10:50,CS 362 - Software Engineering II,1,0-5 hours,"Prepare to beat you head against your desk and still get an A. Also be prepared to learn 1 weeks worth of information about unit testing over the course of 10 weeks. This course is poorly taught and poorly organized, but they will slap a 100% on just about anything so you wont even be mad. This class is the poster child of blow off classes",FA2018,Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,"This class is the same structure as 271. Everything you need to know is in the lectures. There are two programming assignments which are both difficult but very meaningful and teach you a lot about the coding side of the material. There are also a number of labs where you simply walk through packets and answer questions about what you see. The rest of the class is really ""book learning"" where you need to prepare to answer multiple choice/ fill in the blank style questions. It is very straightforward and there are zero surprises.",No,,,,
11/27/2018 12:29:44,CS 162 - Intro to Computer Science II,2,6-12 hours,"This course can be as time consuming as you make it. Grading is very lenient. Lots of extra credit, make sure to take advantage of this early.",FA 2018,Yes,CS 271 - Computer Architecture & Assembly Language,2,0-5 hours,"Lecture are very boring, but useful. Exams are very similar to weekly summaries and quizes.",No,,,,
12/1/2018 17:18:39,CS 161 - Intro to Computer Science I,2,6-12 hours,"If you are familiar with programming, this class will be rather easy.  If you aren't, I wouldn't stress - concepts and syntax may be unfamiliar or hard to wrap you head around, but you will be able to pick up on it quickly. Reading the textbook and looking through practice problems in each section, particularly ones where it asks you what the result of some code is. Being able to step through lines of code will help a lot.  Getting a head start on reading or looking up an online tutorial for C++ basics before the course can help a lot if you are unfamiliar.",Summer 2018,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"The reading is tough and the subject matter can be hard to wrap your head around. Try taking good notes on theories and starting off strong, which will help you get in the mindset for the logic taught in the course.  Grading was rather lenient, it seemed that the instructor/graders cared more about you understanding the concept as opposed to getting it perfectly correct, which was a big positive of the course.  

Brush up on some math if it has been a while, and get familiar with your text editor of choice early in the course so you can spend more time on the test material as opposed to formatting and getting the symbols right.  Also definitely save your work often for homework and tests - I used Microsoft Word which crashed on me twice during a test and having to re-type an answer wasted a lot of time.",No,,,,
12/2/2018 17:43:34,CS 344 - Operating Systems,5,18+ hours,"Ask questions and check piazza a lot. There is a lot of good info to be found in there. Project 4 was probably the hardest so get started on that early so you can ask questions. Other than that this was my favorite class. Brewsters lectures are hilarious and informative. Even if I don't get an A this was the most worthwile class. I learned so much. Even when I felt like there was no way I could do what the requirements were asking, I found a way. Break the assignments down into small steps and you will get through it. Good luck!",WI 2018,Yes,CS 340 - Introduction to Databases,3,6-12 hours,This was one of my least favorite classes. Everything is so disorganized. The instructor is awful. I missed part of a super easy assignment because I didn't even see it since everything is all over the place. When I emailed the instructor explaining my situation I got two words as a response. I learned very little about databases in this class. The lectures aren't all that great but it's a good idea to watch them anyways since they are very short. You will learn more about routes and node.js/handlebars than sql in this class. ,No,,,,
12/3/2018 13:07:33,CS 261 - Data Structures,2,6-12 hours,"The videos are more helpful than the readings provided in each module. The stakes on the group work are low, you get your 1 point as long as you turn something in, correct or not. Class is more coherent than 225, but there's still plenty of conflicting and/or nonsensical instructions. You get a pretty good gut feel for Big O and the various data structures by the end, though, so I would say the content is actually good. Tests are fair, if not immune to gibberish.",FA 2018,No,,,,,,,,,
12/3/2018 14:53:03,CS 290 - Web Development,2,6-12 hours,"Starting after week 5 or so, start the assignments as early as possible.  A lot of the material required to do the homeworks isn't covered well in the modules provided in the class.  Some others suggested taking Udemy courses or others beforehand - I highly recommend this, especially if ones exist that focus on client/server side interactions in Javascript and other JS extensions as this was a focus that was significantly under-covered in this course.  Maybe the pain of this course is that HTML and JS are so fragmented, but this course is extremely poorly organized relatively to other courses (344, for example).",FA 2018,No,,,,,,,,,
12/6/2018 11:31:44,CS 325 - Analysis of Algorithms,3,6-12 hours,"Focus on bigger picture ideas instead of remember every little detail on an algorithm's implementation. The class is intended to teach you how to identify which approach to take for solving problems and how to identify a solution's complexity. You're allowed to create a crib sheet for the exams, so if you're worried about being tested on the small details put them on there. ",FA 2018,Yes,CS 340 - Introduction to Databases,2,0-5 hours,"Use the Canvas calendar to keep track of assignment due dates. This class is a complete mess with its organization, and is still in the process of being redeveloped. Overall, the concepts covered in the class are extremely basic. There's also much more of a focus on back-end web development than there is on actual database management/design/theory, which is disappointing. 

Most of the work in the class focuses on a term-long project that you can complete solo or with a partner. If you do it solo and are not comfortable with back-end development, I suggest keeping your project extremely simple and to follow the specs closely. You're able to change project ideas whenever you want, but this can add a lot of extra work if you realize your original project idea was too complex.",No,,,,
12/7/2018 8:36:55,CS 261 - Data Structures,4,18+ hours,"Read K&R before the class. Pick a group early. Start homework right away, especially later in the term. Don't take the information given to you about complexities at face value.",FA 2018,Yes,CS 290 - Web Development,2,6-12 hours,"If you have any web development experience at all, or if you take an online course in webdev before this class, it'll be a breeze. The last homework assignment is much more time consuming than the main project; start it early.",No,,,,
12/9/2018 12:46:30,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"The course introduces various concepts. Some concepts are used to build further concepts on top of, while some are kept at a very introductory level. Start early on the homework assignments and use the other problems that have answers in the back of the book as a guide. On Youtube, find the Eddie Woo and TrevTutor discrete math tutorials as additional guidance. Find a LaTeX editor and get comfortable with it for the first half of the class (through the mid-term). After the mid-term switch back to Microsoft Word. Grading is forgiving. ",FA 2018,Yes,CS 161 - Intro to Computer Science I,1,0-5 hours,"Fairly straight forward class if you have any sort of programming background. For the coding assignment, follow the specifications strictly and you will get full credit. Study the end of chapter problems in the textbook for the exam.",No,,,,
12/9/2018 15:47:14,CS 162 - Intro to Computer Science II,3,18+ hours,,FA 2018,No,,,,,,,,,
12/9/2018 15:47:53,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,,FA 2018,No,,,,,,,,,
12/9/2018 15:48:58,CS 352 - Introduction to Usability Engineering,1,0-5 hours,,FA 2018,Yes,CS 162 - Intro to Computer Science II,3,18+ hours,,Yes,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,
12/10/2018 6:25:27,CS 372 - Intro to Computer Networks,3,6-12 hours,"While not terribly difficult, there is enough steady work in this class where you can find yourself behind quickly. Don't expect much interaction from the professor or TAs. Most of the info you'd need is already well covered by the lectures and readings.",FA 2018,Yes,CS 362 - Software Engineering II,1,0-5 hours,"The description for this class reads like a dream for people applying for jobs - Learn git! Learn testing! Buzzwords!
Unfortunately, the class compiles 3 different sources of lectures for material where you'll spend more time listening to someone saying ummm than actually teaching. 
Don't bother with the lectures. You can sign your name and write lorem ipsum in each assignment and I'm confident they'd still give you 100% for it. Don't stress too much about the group project - it's as worthless as the rest of this class",No,,,,
12/10/2018 8:38:54,CS 161 - Intro to Computer Science I,3,0-5 hours,Read the book for the technical jargon and concepts. Tests focus on the terms heavily.,FA 2018,Yes,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,Practice problems are your friend. Try to find the answers online so you can look back at your work and correct yourself.,No,,,,
12/10/2018 18:06:48,CS 325 - Analysis of Algorithms,3,6-12 hours,Don't watch the lectures. They're a complete waste of time. Glance over the slideshows and then go find a better resource to learn the material (people really love MIT classes). The assignments aren't that difficult but the exams can be a challenge. If you do well on the exams you have quite a bit of cushion to do poorly on the exams. ,FA2018,Yes,CS 352 - Introduction to Usability Engineering,5,0-5 hours,Here's hoping you get a good group. Use myBalsamiq for your prototypes. Look over the weekly objectives before taking the final. The final is all open ended questions and very fair. ,Yes,CS 361 - Software Engineering I,4,0-5 hours,"Your group is everything, so hopefully you get a good one. The lectures aren't great but at least there aren't any readings. The final is an absolute mess, it's all multiple choice and honestly horrible. Duplicate questions, poorly worded and not great. I ended up submitting it in like 25 minutes because I just went with my gut on everything. Honestly ended up being a pretty good strategy."
12/11/2018 10:36:24,CS 162 - Intro to Computer Science II,1,13-18 hours,"Code Langton's Ant before the class starts, and read ahead in the book. This class has generous and worthwhile extra credit. The labs get more ambiguous in the later weeks, but nothing too bad. The (unproctored) quizzes do have some poorly worded questions, but getting 18/20 average should be doable if you slow down and read the questions carefully. You are able to pick your groups for the group project, so take advantage and get a good group going as soon as you can. Overall, the class was fun, and you learn a  lot.",FA 2018,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"The organization of this class's content is pretty great except the syllabus section. The lectures are generally very good, and grading was fairly prompt. Take advantage of the early extra credit opportunities. Study the course material well and often because the exams are not a walk in the park but they are 40% of your grade.",Yes,CS 352 - Introduction to Usability Engineering,2,13-18 hours,"Pray for a good group otherwise you will be sinking a lot of time either doing the project with yourself/less people or trying to get team members to communicate. The problem with this class is that people have labeled it an ""easy A"" so people sign up for it expecting to do very little. That is only the case if the group all works and functions effectively together. You are expected to report people who don't work, or else they get a good grade on your work. Here's the catch though: you have to call them out and write it on the group report each week. There are also individual team member evaluations at the end of the term, so everyone feels pressure to play nice up to that point. The bottom line is: **if you have a bad group, you'll have a bad time and it will be a long quarter and not an 'easy A'.** I was stuck with 4 morons and ended up spending a ridiculous amount of time on this class. This class is A LOT of writing. Also, the assignments themselves and the final are VERY subjective and not concrete. Be aware that you are rolling dice when you take this class."
12/11/2018 11:52:17,CS 344 - Operating Systems,3,6-12 hours,"Course basically boils down to 4 assignments, but they get harder so don't procrastinate. I personally found the lectures to be very helpful, but stay active on Piazza because there will be a lot of useful details shared there.",FA 2018,Yes,CS 325 - Analysis of Algorithms,5,18+ hours,Read the textbook. I know proofs are annoying but I think fully understanding those is when you start to make the jump from someone who can simply write code to a problem solver/computer scientist.,Yes,CS 340 - Introduction to Databases,2,6-12 hours,"I would not recommend taking this course without web development knowledge. Most of the work in this course involves the class project, so if you're not familiar with web development it will be very frustrating. Lectures are enough to get through the quizzes and assignments."
12/12/2018 17:29:24,CS 162 - Intro to Computer Science II,3,6-12 hours,Read the textbook where you can. Start all the projects early and factor in some buffer time in your schedule early on,FA 2018,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Do all the easy EC on the projects that you can. Really makes up for any mistakes on the Midterm or Final,No,,,,
12/12/2018 17:34:52,CS 372 - Intro to Computer Networks,2,6-12 hours,"This is a 300 level class meaning not every solution will be handed to you on a silver platter like in most of the lower level courses in this program.  Before you throw a fit that ""question x"" was never taught - yes, it was.  This class gives you everything you need to succeed but you need to do the reading, you need to watch the lectures, and you need to work out the practice problems.  I really enjoyed this class but the entitled classmates who expected everything to be handed to them on a silver platter got tiring after a few weeks. You need to put in the work yourself.  This is an upper level course and a higher level of study and critical thinking is expected of you.",FA 2018,Yes,CS 362 - Software Engineering II,1,0-5 hours,"This is probably the easiest and least time consuming class of this program - especially the second half.  Still watch out for the 3rd assignment, however.  It took me about as long to do that assignment as the other 4 took combined.  I noticed many students complaining about the debugging assignments and how it wasn't taught or explained well.  I disagree  completely.  I noticed the same students who complained about how we weren't taught how to complete the assignments were the students who talked about how they never watched the lectures because ""it didn't matter.""  Actually pay attention to the lectures - there is good information and it is applicable to the debugging assignments - although maybe not explicitly.  Once again this is a 300 level class so you may be expected to apply lecture concepts to assignments without it being explicitly explained. ",Yes,CS 352 - Introduction to Usability Engineering,2,0-5 hours,"This is a frustrating class - even with a decent group.  I think there is some valuable information to be learned here which makes it even more frustrating that it's poorly taught.  One thing to keep in mind - Everyone talks about how easy this class is but if you don't put in time studying for the final your ""easy A"" could easily turn into a B - which happened to several of my classmates."
12/18/2018 8:08:50,CS 325 - Analysis of Algorithms,3,13-18 hours,"This class wasn't as hard as I thought it was going to be. Yes, it is challenging and some of the math in the first few weeks can be a struggle. However, after the first two or three weeks it kind of slows down. I found that the most challenging topics in the class were dynamic programming and NP problems, so if you have the opportunity or time, at least get familiar with those topics. Resources are plentiful on the internet but for the most part I stuck to the provided lectures and watched a few YouTube videos about topics that gave me a hard time. The provided lectures are not great, in some cases far from it, but I believe it covers everything you need for the homework. I didn't really touch the book as it was too mathy for me but YMMV. Some people really like the in-depth breakdown of algorithms along with their proofs that the book offers. Fall 2018 grade breakdown: 55% homework, 5% discussion, 20% midterm, and 20% final. If you make sure to do the discussion each week and focus on your homework grade the exams won't hurt you too much. I found that the midterm was easier than the final but that could be from my lack of motivation to study at the end of the term. Make sure you take full advantage of your cheat sheet and fill it with lots of example problems. I did pretty bad on the final but finished the class with an A-. ",FA 2018,No,,,,,,,,,
12/19/2018 17:15:59,CS 362 - Software Engineering II,2,6-12 hours,Know java,FA 2018,Yes,CS 372 - Intro to Computer Networks,2,13-18 hours,"Don't slack on the weekly quizzes,  commit to either the lectures OR the book, take 344 first, don't spend too much time trying to port your 344 assignments over",No,,,,
12/20/2018 9:20:32,CS 225 - Discrete Structures in Computer Science,2,0-5 hours,Start early,FA 2018,No,,,,,,,,,
12/26/2018 13:26:15,CS 161 - Intro to Computer Science I,3,6-12 hours,"Do the readings and chapter exercises, and you'll do great. The final project takes a lot more time than the previous ones, so be ready for that. I preferred YouTube and Udemy videos to the lecture videos. ",FA 2018,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"If this is your first math class in a while, I would recommend reviewing basic algebra before you take this course. It was usually the algebra that made things difficult, instead of the actual concepts we were learning. Grading is very lenient. ",No,,,,
1/2/2019 19:43:16,CS 161 - Intro to Computer Science I,3,13-18 hours,,Fa18,No,,,,,,,,,
1/2/2019 19:43:23,CS 161 - Intro to Computer Science I,3,13-18 hours,,Fa18,No,,,,,,,,,
1/4/2019 21:19:17,CS 161 - Intro to Computer Science I,1,13-18 hours,,SU 2018,No,,,,,,,,,
1/4/2019 21:28:23,CS 162 - Intro to Computer Science II,1,18+ hours,"Procrastination is not your friend in this class. Do your best to get readings, labs, and projects done early. Find a group for the group project early, one that actually communicates. Find the time to do the extra credit, not does it only help your grade, but it reinforces the topics that show up on the quizzes. Start planning your final project the day the specifications are released to allow time for debugging.",FA 2018,No,,,,,,,,,
1/6/2019 19:49:21,CS 361 - Software Engineering I,3,6-12 hours,"Your group's work ethic, general learning attitude will determine your workload / stress levels for this course. If you have a mismatch in any of the above with your group mates, you will have a tough time. Grading may be lenient depending on the TA. You have to code a small portion of your project at the end of the term. Rooker is a patient instructor, but it's difficult to get definitive answers out of him.",FA 2018,Yes,CS 362 - Software Engineering II,3,6-12 hours,Do whatever you want and you'll still get an A as long as it looks like you did something.  A very buggy project was handed out to students at the beginning of the term for debugging practices. We were also expected to jump in and handle Eclipse and Java for two weeks of course work. ,Yes,CS 325 - Analysis of Algorithms,5,13-18 hours,"In retrospect, priming myself with a Udemy / Coursea course before starting this course might have been a better idea. The lecturer makes it quite difficult to follow her lectures. I suggest turning on captions to read the lecture instead of listening, as she pauses mid-sentence, and may even change the whole sentence in mid sentence. Turning on the captions helps you anticipate what she is about to say. Likely by the time you finish reading the captions, then she would complete her sentence. Material is challenging and fun. I found myself relying heavily on external resources because of the difficulty in staying awake in lectures. It seems like there use to be a group project in the past few terms, but we didn't have it this term."
1/16/2019 16:09:58,CS 162 - Intro to Computer Science II,2,6-12 hours,People make this class out to be way more time consuming than it is. The grading is so lenient and there's so much extra credit that almost anyone should be able to get an A.,FA 2018,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"If you really want to learn this material, it can be tough. But if you just want to get through the course, they set it up so you don't actually have to learn/memorize a ton of stuff.",No,,,,
2/23/2019 17:33:13,CS 161 - Intro to Computer Science I,3,6-12 hours,I had no programming experience beforehand. The assignments are not time intensive until the second half when you are introduced to pointers and arrays. For a beginner this was a little confusing but the TAs were willing to help look at my code. For this reason I would recommend starting on the assignments when you can so you can get feedback outside mimir on what you can do to improve your code. I found the exams difficult. Textbook checkpoints are suitable review. Overall enjoyable class though.,FA 2018,No,,,,,,,,,
2/24/2019 7:37:38,CS 290 - Web Development,2,6-12 hours,Take Colt Steele's Udemy course and prepare to do a lot of googling.,FA 2018,No,,,,,,,,,
2/25/2019 14:26:59,CS 325 - Analysis of Algorithms,5,13-18 hours,"The first few weeks were horribly hard, but the number of hours I put into the class declined after the midterm. Dynamic Programming week was probably the hardest. For the midterm and final, you're allowed a double-sided cheat sheet, which was extremely helpful. Put every single definition/proof example you can think of. The grading for the exams is pretty lenient, the homework grading less so. But almost every question on the homework is a classic algorithms question, so Google is your best friend. There's tons of examples online and I recommend looking up outside resources rather than relying on the textbook and over-long lectures offered by the class. The homework is half math questions, half programming questions. There wasn't a group project in Fall 2018, but there are weekly discussions (mostly BS but I did get some helpful nuggets there). Some interesting topics but I think most people will need more prep after this class before attempting technical interviews.",FA 2018,Yes,CS 361 - Software Engineering I,2,6-12 hours,"Thankfully I got a good group and client. Group, client, and project assignments are totally random. We did have trouble scheduling meetings across four timezones, but the work itself was not too difficult, just long - about 10 pages of writing and diagrams most weeks. Try to add as much as possible. There's only a little bit of coding at the end, implementing a small part of the client project. The TA we got was pretty lenient with grading, though I got the impression grading across the board was kind of random and people got docked for arbitrary things. Rooker emails several times a week and seems really engaged, though I can't forgive him for that final. Tons of random questions confusingly written. Studying the lecture slides is helpful to an extent, but there was no reinforcement of the lecture material in assignments so I did pretty badly on the final. YMWV.",No,,,,
3/15/2019 10:48:39,CS 161 - Intro to Computer Science I,3,6-12 hours,Just read the book and do your homework in time. Make sure you test your stuff thoroughly.,WI 2019,No,,,,,,,,,
3/16/2019 9:24:25,CS 361 - Software Engineering I,1,0-5 hours,"Try to avoid talking to the professor - he contradicts himself and makes things seem harder than they are - instead follow the written instructions to a T. Get into a good group - but you have no control over that, so good luck!",WI 2019,No,,,,,,,,,
3/18/2019 4:54:52,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"As of Winter 2019, Rooker isn't the only professor for this class. Professor Sanandaji was available during this term and had great additions. While she was still constrained by needing to use Rooker's lectures/most of his content, she provided her own additional option content which was excellent. She and her TA managed to grade everything in what must have been 24 hours. ",WI 2019,Yes,CS 373 - Defense Against the Dark Arts,2,6-12 hours,"I wanted to love this class. Like others have said, you get out what you put in to this. The professor can't be bothered by students asking questions which was off putting.  Overall... fine survey course that left me uninspired.",No,,,,
3/19/2019 11:44:56,CS 340 - Introduction to Databases,3,18+ hours,"Take it after 290 so you can use the last two projects from 290 as starter code for the huge project you'll spend most of the quarter on in 340. Don't expect to learn much SQL, this is a web dev class. You'll have to work with a partner but at least you get to choose, so get in the Slack chat early and pick a good one. The workload is very uneven, with a ton of work to do in the middle to end of the course. Start early. For example, they'll give you a whole week to do the HTML, but that's more time than you should need for just some measly HTML work. Bang out the HTML in a day or two and then go right into the backend work. They'll only give you like, a single week to do all your updates and deletes, which is ridiculous. Just start working ahead, it's the only thing that'll save you from a massive crunch at the end. No midterm and no final. ",WI 2019,Yes,CS 344 - Operating Systems,3,18+ hours,"It's like doing four final projects in a row. The four projects of this course are all large and time-consuming and the course feels more like an advanced C course than it does an intro to operating system topics. You'll get introduced to things like file i/o, threading, sockets, but expect those parts of the assignments to feel slapped on to a behemoth C project that could've easily been 162's final. However, unlike many courses in this program, this one is ORGANIZED and the expectations are CLEAR. You will be given a grading script to run and interpret to determine if your program will get a passing grade. Final is open book and multiple choice. Hot tip: the class will tell you to author all your work on the school server using Vim, but that's insanity mode for C files with hundreds of lines. I was able to do all of my work in my usual IDE on my Macbook and transfer it to the school server with no ill effects. Reports of things going horribly wrong if you develop on your own machine are overblown. Signed, someone who did all the work on their own machine.",No,,,,
3/20/2019 19:45:04,CS 361 - Software Engineering I,2,0-5 hours,"Write in your journal every day, especially after meetings--it will come in handy for team reviews later in the quarter. Have an agenda outlined for each meeting before you meet. Teammate reviews should be as lengthy as possible to avoid getting marked down. Wait to take the final until after the review videos are posted late in the quarter (they appeared, mysteriously, in Canvas shortly before finals week). Be sure to know the characteristics and processes of each software development methodology for the final.",WI 2019,Yes,CS 325 - Analysis of Algorithms,5,18+ hours,Take notes as you read the materials for each module; don't just read what you need in order to complete the homework. Monitor the instructor-led Canvas discussions; she often revises homework requirements on the fly and is frequently notified by students of errors in the course handouts. Don't forget to participate in the group-level Canvas discussions; the extra credit will come in handy. Attend office hours and eliminate any doubts you have about your homework answers.,No,,,,
3/21/2019 14:45:04,CS 325 - Analysis of Algorithms,5,18+ hours,"Watch the lectures, and google youtube videos for better explanations of what she is talking about.  Her lectures are obtuse and filled with pauses as she tries to figure out what to say, so only half of the lecture actually has good information.  Rely on your group discussion work. You can get extra credit there and they are usually better at explaining concepts than the professor is.  I stopped trying to read the book about halfway in and it saved me a lot of time, so I don't know that it's necessary.",WI 2019,Yes,CS 361 - Software Engineering I,1,0-5 hours,"Watch the lectures and be proactive with your group.  This is a document heavy course, with very little coding.  The hardest thing was trying to get 15 pages of documentation per week with a group that had a hard time getting together at the same time.  The final is awful, and filled with T/F and MC questions that have tricky wording. Otherwise this class was an easy A. ",No,,,,
3/21/2019 16:53:40,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"Make sure you take the time with the homework to study it and absorb material. It will make things easier on the long run. Everyone on here says ""Just review the study guide, quizzes, homework and textbook and you can easily get an A!!"". Well, duh, that's a majority of college courses. I thought the homework is the most useful, because the study guides reference it a lot. 

",WI 2019,No,,,,,,,,,
3/23/2019 23:37:15,CS 325 - Analysis of Algorithms,3,13-18 hours,"First three weeks are difficult. After you complete Dynamic Programming (Week 3), the class gets much easier. The lectures are really bad so seek outside sources for learning. Overall, this course isn't as hard  as people state. However, if you want to get an A, this is the class to pull out all stops and try hard. Speaking with the TA, actively participating in discussions, and monitoring the general discussion is extremely important if you want to get a good grade.",WI 2019,Yes,CS 340 - Introduction to Databases,3,6-12 hours,"This class will be semi-difficult if you are not familiar with NodeJS and MySQL. Try to find a good partner that will complement your own strengths so you guys can create a 100% working application by each deadline. Overall, the course is good but do not take this class for granted. I witnessed many colleagues suffer towards the end due to their lack of knowledge on back end development. In addition, make sure you find a partner that is time zone compatible with you because a lot of things need to be verbally discussed. ",No,,,,
3/25/2019 11:04:50,CS 290 - Web Development,2,6-12 hours,"Forget about the lecture and books. It would be better to teach yourself with outside resources unless you already have some strong experience in JS and Ajax. Also, there are two options: Zhang and Ianni. If you are good at JavaScript/Ajax and want to talk to the professor personally for some reason, Dr. Ianni's class might be good. Otherwise, you should take Zhang's class. It saves you time.",2019Winter,No,,,,,,,,,
3/25/2019 21:27:44,CS 225 - Discrete Structures in Computer Science,2,18+ hours,"Finish homework and quizzes early. Make sure to absorb the material as best as you can each week. To supplement the course material I suggest watching TrevTutor, Trefor Bazett, and Eddie Woo on YouTube. Start studying for the midterm and final the moment that the materials are released. Grading is lenient; as long as you show your work and try to regurgitate theorems/proofs you should get the majority of the points.",WI 2019,No,,,,,,,,,
3/26/2019 7:45:05,CS 261 - Data Structures,3,6-12 hours,"Overall this course was pretty good. I thought the lectures were clear, but the worksheets are poorly formatted and some of the questions in the later worksheets are also poorly worded. The programming assignments were fair, and I appreciated the skeleton file format. I would recommend spending a little bit of time each day making sure you really understand the concepts and implementations, and the class should be cake.",WI 2019,Yes,CS 290 - Web Development,1,0-5 hours,"I really hope this class gets a rework very soon as it's one of the worst in the program. The first couple weeks teach basic things, which is ok. I found it very difficult to stay focused while watching the lecture videos. By the way, the general theme of those lectures is ""this is a deep topic, so we're going to hardly cover it and instead spoon feed you an outdated and incorrect implementation."" While it's not hard to get an A in this class, you won't learn much if you just watch the lectures and do the assignments. Definitely invest in other resources to be anywhere near competent at web dev.",Yes,CS 340 - Introduction to Databases,2,0-5 hours,"Though advisers don't seem to have an issue giving overrides to take this class with 290, it's definitely for the best to take 290 first if you have no back end knowledge. I realize 290 does an awful job of teaching that too, but the project in this class is more complex than 290's final assignment so you need some idea of what you're doing. To be frank, this is also a pretty terrible and basic class as far as material goes. 
It seems partners were optional before, but were mandatory this term. Thankfully we were able to choose our partners. The entire class is building on ""project steps"" while doing ""group reviews"" with a separate group (which some people gave good feedback and others clearly did not care at all). There were also some easy quizzes and assignments sprinkled in. You design your own project and can make it as ambitious or as basic as you want, but don't expect to get much from the class itself."
3/26/2019 11:58:20,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,"This class is toughest in the first few weeks, when you're still trying to learn the basics of MASM and have a ton of readings to cover. Once you get past that, the class slows down and becomes much more manageable content-wise. It does start to peak again towards the end, but that's mostly due to the amount of time it takes to complete the last two programming assignments, so get started on those early. Go for as many easy extra credit points as you can, because they do add up and can really boost up your final grade. Most of the weekly reading quiz questions are either directly from the book or from the lecture slides, so take your time while doing them (6 hours) and don't worry too much because you get 2 attempts. For quizzes and tests, go over each of the questions listed after every lecture video and also review the weekly reading quizzes. This is a very straightforward and well-organized class, and as long as you put in the work, you will do very well (I ended with over 100).",WI 2019,No,,,,,,,,,
3/26/2019 12:32:50,CS 373 - Defense Against the Dark Arts,2,6-12 hours,"The Good:  Really interesting course with some great lecturers some cool tools and malware you get to explore, as well as a fun final which now consists of completing challenges on Hack the Box.  You will learn a lot.

The Bad:  The professor begins by stating that this is a ""get out what you put in class"" and that is BS.  That's the excuse the professor uses to justify getting full pay for ""teaching"" a class in which I doubt he spends more than 15 minutes a week on.  Seriously, the most you can expect out of him in answering 1 or 2 questions on Piazza (some weeks he ignores all questions)  but most of his answers are not helpful.  The TAs are non-existent as in several of us wonder if they even exist.  We don't know who they are or their emails, they aren't on piazza, and they don't comment on grades, they simply deduct points with no explanation.  Furthermore there are people who completed the class and still hadn't received grades for about half of their assignments.

Advice: Don't expect a well run class and you will get really frustrated at times when trying things like setting up your VM and getting no help from the instructor when things go wrong.  That said if you go into the class with that expectation you will have a decent time and learn a lot.  Also the grading is incredibly lenient.",WI 2019,Yes,CS 419/467 - Software Projects,1,6-12 hours,Can be as easy or as difficult as you want it to be. That said grading is lenient and you get a ton of flexibility in your project - even if it's a pre-made on,No,,,,
3/28/2019 8:09:10,CS 161 - Intro to Computer Science I,4,18+ hours,"If you have no background in CS, I would spend way more time trying to learn C++. Get a head start on all the readings because they are really long. Watch youtube videos to help you explain concepts. The exams can be tricky, try hand tracing everything before you answer exam questions. Be prepared for the last assignments which can take a long time to debug and figure out. ",WI 2019,No,,,,,,,,,
3/28/2019 18:18:49,CS 290 - Web Development,4,13-18 hours,"I'm late to review my experience in 290 but looking back, after taking almost all the classes in the program, I would rate this as one of the 3 worst classes. The course is theoretically supposed to help you develop the skills needed for Databases(CS340) but it is presented very poorly.The lecture content was pretty awful.  The lectures are given as if everyone is already familiar with the topics and just needs a refresh on material. You'll find that a large amount of the class does have Web Dev experience and will rate the class as easy but do not be lulled into a false sense of security if this is your first time with Web Dev. 

This course was my first experience with Web Dev and it was one of the hardest  
classes I've taken. I would rate it harder than 325 because of the lack of quality reference material. I took this course over the summer along with data structs and found myself spending about twice as much time on 290 than 261. The asynchronous requests on the last project were brutal and I went to office hours multiple times to try to get my code working but the TAs would just alter the code for you and not really explain anything. 
Final thoughts: If you are concerned about this course I would strongly recommend Colt Steele's Web Dev Bootcamp Course on Udemy. In total it has about 45 hours of lecture and covers almost every topic from 290 in much better detail. I came out of 290 scared of web development and I took the Udemy course and feel so much more confident in my ability to put together professional web pages.",Su 2018,No,,,,,,,,,
3/30/2019 16:26:05,CS 162 - Intro to Computer Science II,1,13-18 hours,"162 does require a higher time commitment than other classes, but the grading is very lenient. If you meet the grading rubric and have a foolproof input validation, you should be averaging close to a 100%.  You have the option to retake each quiz a 2nd time, but you only keep your last score. Only retake it if you scored less than 18/20. Prior to the semester starting, go through Suraj Sharma's C++ tutorials, learn to use makefiles, and learn to use Valgrind. Get familiar with Langston's Ant and maybe even start on it. I found the video lectures to be of no use, and the textbook was marginally better. C++ online resources and Stock Overflow will be better resources for this class. This class is all about producing code that meets the specs, don't make it any harder than that.",WI 2019,No,,,,,,,,,
3/31/2019 10:09:33,CS 162 - Intro to Computer Science II,4,18+ hours,"This course is all about time management. I spent over 20 hours per week on it. The concepts aren't difficult, but projects are time-consuming.  Grading is lenient, but make sure you double-check requirements before you turn it in, because there are a lot of components to each assignment. The course starts very heavy, especially around weeks 3-4, then becomes easier in later weeks. The basic requirements for the final project are pretty easy, but you can spice it up if you want to use it on your resume. To prepare for this course, I would recommend learning about makefiles, robust integer/string input validation, 2D arrays of pointers, and inheritance. Lectures are useless. The textbook is good preparation for quizzes. learncpp.com and stack overflow are good resources for programming assignments.",WI 2019,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"This course is structured well, so that you always know what's expected of you. My time was split pretty evenly between weekly checks, bi-weekly quizzes, and programming assignments. The textbook is useful but dense. Early programming assignments are simple, but the last two take a substantial amount of time/frustration. Don't be afraid to ask for help! I found office hours very helpful. The proctored midterm and final are similar in difficulty to the quizzes.",No,,,,
4/2/2019 12:06:52,CS 162 - Intro to Computer Science II,1,6-12 hours,Start projects early,WI 2018,Yes,CS 225 - Discrete Structures in Computer Science,1,0-5 hours,The book is dry. If you review the quizzes you should be able to do okay on the exams. ,Yes,CS 271 - Computer Architecture & Assembly Language,1,6-12 hours,"Read the early chapters of the book to make sure you understand it, later on you can be more selective in what you read. "
4/7/2019 12:26:43,CS 165 - Intro to Computer Science (Accelerated),3,6-12 hours,"Get a testing suite like Google Test or Catch up and running in the first week of class and learn how to use it. This will save you tons of time debugging during the middle of the course when the assignments get longer. Get comfortable debugging in an IDE or with gdb. Fixing non-working programs will go much more quickly with a debugger than with cout statements.

Exams are about 50% reading code and being able to discern a result. Reading a lot of code will help with this - go through the book examples with your whiteboard and get practice tracing values through the sample programs.

The other 50% of exams will be language features. Things like default constructor behavior, ""which function gets called""-type questions for polymorphism, and ""which variable is in scope at this time?""

The best practice for the exam would be doing all of the checkups at the end of the book sections. If you can do well on these, you'll do well on the exam.",WI 2019,No,,,,,,,,,
4/10/2019 9:51:55,CS 325 - Analysis of Algorithms,3,6-12 hours,"Do well on the first half, since it is super interesting, relevant to interviews and actually fun. Some people say that Dynamic Programming is the hardest week in the program, but if you take it super seriously and hook up with Tushar Roy, you will ace it. The second half of the class is boring proofs and I barely, barely kept my A. That said, I played 120 games of League of Legends during this term and still got As in both classes with minimal effort after week 5. ",WI 2019,Yes,CS 361 - Software Engineering I,2,0-5 hours,,No,,,,
4/11/2019 13:47:58,CS 325 - Analysis of Algorithms,3,6-12 hours,,WI 2019,No,,,,,,,,,
4/11/2019 14:11:17,CS 373 - Defense Against the Dark Arts,1,0-5 hours,The hardest part of the course is setting up the labs and assignments. ,WI 2019,Yes,CS 362 - Software Engineering II,1,6-12 hours,"The course is supposed to get a rewrite sometime soon (as of Winter 2019), so past reviews may be invalidated. This course was an utter organizational mess and low on content. Good to pair with a hard class. ",Yes,CS 419/467 - Software Projects,4,18+ hours,"I was one of the first people to post a project idea and my group formed very quickly. I figured that the type of person who was looking at the projects before the term even began would probably be the type of person I want to be group members with (e.g. proactive, knows what they want). Turns out I was right. I ended up with a wonderful team. My other suggestion is to use technologies you already have experience with if you want to produce something substantial. Otherwise, you'll be under a lot of stress and pressure."
4/11/2019 18:09:09,CS 162 - Intro to Computer Science II,2,13-18 hours,Do not procrastinate. Work at developing reusable menu and validation functions/classes early on. Don't let yourself get stuck on the first step of the final project. Decide and move on.,WI 2019,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Lectures are great in this class. Take the weekly summary twice, if possible. Start the first reading early and don't skim those chapters. You will need to become familiar with that information.",No,,,,
4/11/2019 19:05:06,CS 261 - Data Structures,2,6-12 hours,"Learn some C before the first week. Assignment 1 is a bit more work than you will originally think it is. The tests are not bad. Do your best to conceptually understand each data structure and abstract data type. The midterm had one coding question(worth more points than any other question though), the rest were conceptual questions about data structures. The final had 2 coding questions(again, worth more points), and the rest were conceptual questions about data structures. 

There are a ton of typos on the worksheets. It's honestly ridiculous how many typos and errors there are. Why no one has taken the time to fix them after countless numbers of students have complained about it is beyond me.

Get familiar with an IDE. I used CLION. It will be especially helpfull when you get to trees. You can step through each branch and see what's the the left/right of each node. 

Class is designed well, it just needs some serious re-polishing. It can easily be turned into a great class with just a little bit of effort. Tests combined are worth 55% of your grade. For some odd reason, they have you download a text file, write code into it for the coding questions on the exam, then reupload the file onto canvas. Utterly ridiculous method if you ask me, and so prone to error. So just be sure you are submitting the correct file for each question on the exams.",WI 2019,Yes,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"Tough class, but it's pretty well designed and organized. Don't get bogged down by the minuscule details. Just write a very good page of notes for the midterm and final. Split your notes page into 2 columns and use really small font.",No,,,,
4/11/2019 20:05:22,CS 162 - Intro to Computer Science II,3,13-18 hours,It gets easier towards the end. Stay on top of things early. ,WI 2019,No,,,,,,,,,
4/11/2019 22:12:59,CS 344 - Operating Systems,4,13-18 hours,,SU 2018,Yes,CS 361 - Software Engineering I,2,6-12 hours,,No,,,,
4/13/2019 8:37:27,CS 161 - Intro to Computer Science I,2,6-12 hours,,WI 2019,No,,,,,,,,,
4/14/2019 22:14:54,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"This is the best organized class I have taken so far. It is tough, but they provide you with everything you need to do well. For the exam make your cheatsheet. and then don't use it. The book is good, the lectures are better. The lecture check worksheets should be done over and over as practice for the exam until you can do all of them with no issue. Class was hard at first, but things start to coalesce midway through. Prof is super responsive on slack/piazza/email, even on the weekends.",WI 2019,No,,,,,,,,,
4/16/2019 0:16:33,CS 165 - Intro to Computer Science (Accelerated),2,6-12 hours,,WI 2019,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,,No,,,,
4/16/2019 5:45:58,CS 344 - Operating Systems,3,6-12 hours,"Watch all the lectures (at regular speed for once!), read all the required reading, and take advantage of the TAs on Slack. All of the information you need to complete the assignments can be found in the materials you are provided, though you may need to tweak things a bit from what's on slides, etc.

Start on each of the programs as soon as they're assigned and work on them incrementally during the couple weeks you have to complete them. It's much, much easier to put in 1 or 2 hours every day or two than to cram 20 hours of work into the weekend before the due date.",WI 2019,Yes,CS 361 - Software Engineering I,2,6-12 hours,"My biggest complaint about this class is that it's light on material, doesn't teach what material it offers very well, and has assignments that feel much more like busy work than anything.

Personally, I didn't find Rooker to be as bad as everyone made him out to be - he really does seem to want to do well as an instructor. Students disagree with some of his teaching methods or feel that he should have concrete answers for things that are incredibly subjective - but if you just follow the assignment instructions and explain your reasoning then you should end up with a decent grade.",No,,,,
4/20/2019 7:37:53,CS 161 - Intro to Computer Science I,3,6-12 hours,"Not as hard as 162, but careful with the last project. ",WI 2019,Yes,CS 225 - Discrete Structures in Computer Science,4,18+ hours,"If you don't have a Math background, you'll spend a lot of time trying to understand concepts. ",No,,,,
4/28/2019 16:28:48,CS 162 - Intro to Computer Science II,4,13-18 hours,,WI 2019,Yes,CS 199 - Companion Course,2,6-12 hours,,No,,,,
5/9/2019 0:31:34,CS 290 - Web Development,3,0-5 hours,"First half is super light.... don't get used to it. Not sure what else to add that hasn't already been added. Watch out for due date of final assignment. All quarter long, everything was due on Sunday, except the last assignment. ",WI 2019,No,,,,,,,,,
5/21/2019 7:19:32,CS 161 - Intro to Computer Science I,3,18+ hours,"I came in without any prior programming experience, so admittedly I probably spent way more time on everything than most people. That being said, Todd is very responsive on Piazza, so take advantage of that. Read the book and really know how to step through lines of code and figure out what the output will be. I just forced myself to use VIM the whole time, but perhaps using an IDE would have saved me some headaches.",WI 2019,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"The first half of the class you might be like ""wtf"" but it seriously gets easier as you go along. It just took a bit for me to adjust to thinking logically after so long! The book is basically trash, use youtube instead! I used TrevTutor videos a lot. The videos are also not very helpful. Take advantage of the free tutoring, that helped me the most. Grading was super lenient, as long as they saw that you know what you're doing. Problems repeat a lot, so you will recognize patterns.",No,,,,
6/6/2019 18:10:49,CS 162 - Intro to Computer Science II,2,13-18 hours,No preparation needed. 161 was my first exposure to programming and that was  adequate for 162. It was easier than expected but time consuming. Not a class to put off until the last minute. The projects had game like themes if you like games. Just think of coding in this class like grinding in an rpg for EXP to level up and that will essentially be this class. ,SP 2019,No,,,,,,,,,
6/8/2019 8:13:38,CS 340 - Introduction to Databases,2,0-5 hours,"This class was easy. Feedback was lacking. Don't depend on the TA's or instructor(s) (yes, there were two) to answer many questions or grade your assignments in a timely manner. Around week 6, I still had things not graded from assignment 0, for perspective. It's Week 10 right now, and I still have things from Assignment 4 that haven't been graded. Frustrating, but I'm anticipating good grades.",SP 2019,Yes,CS 361 - Software Engineering I,2,0-5 hours,"This class was incredibly annoying, but didn't require much of a time commitment. It's almost exclusively group work, and the TAs will take points off the group assignments as some sort of power trip. When approached, he would deflect questions and try to point out other deficiencies in the homework (but not address what we lost points for). 

The first two exams were not proctored, but you have 15 minutes to answer 20 questions. The questions will be filled with errors and you will be confused. Just take your best guess and hope that the professor throws out a question or two (he did for my class).

I'm glad it's over.",No,,,,
6/9/2019 9:06:35,CS 271 - Computer Architecture & Assembly Language,2,13-18 hours,"The course material and lectures are great compared to other classes (such as 290/162/161). The material necessary to receive an A is clearly defined and reinforced with the Summary Exercises and Quizzes. Justin Goins is a great professor and is active on Slack/Piazza. The TA's actually grade things on time (as opposed to 162 with Zhang). Start early on the assembly programs and load up on as many extra credits as you can, especially for #1 - #4. Programs #5 and #6 are significantly more time consuming that 1-4.  Learn to use the VS debugger features as you will definitely need them for #6. If you have time prior to the term, read CODE by Charles Petzold. Great book if you're unfamiliar with computer architecture. If you commit the time, there is no reason to not get an A.",SP 2019,Yes,CS 271 - Computer Architecture & Assembly Language,1,0-5 hours,Take Colt Steels Udemy course on web development prior to the term starting. This will make the class much easier. The class moves swiftly and does not dive deeply in to the topics.  Homework 6 is harder than the Project so start early. There's only 1 option for extra credit and its on an early assignment. Make sure you do this because it is actually worth a lot of points.,No,,,,
6/9/2019 19:15:05,CS 162 - Intro to Computer Science II,4,18+ hours,"Start assignments early, plan carefully, make use of extra credit. Contact your TA's often or other TA's frequently with questions. ",Spring 2019,No,,,,,,,,,
6/9/2019 19:18:02,CS 225 - Discrete Structures in Computer Science,2,18+ hours,"Do the homework, do the quizzes, work on assigned problems. Complete the study guide for midterm and final and if you don't know the answer write down how you would solve the problem. Midterm and final have lenient grading. ",Spring 2019,Yes,CS 161 - Intro to Computer Science I,3,13-18 hours,"Start assignments early, watch Cherno, participate in slack and ask TA questions. ",No,,,,
6/10/2019 10:19:21,CS 344 - Operating Systems,3,6-12 hours,"Get started early. The course is divided into 4 ""blocks"" as opposed to weekly assignments, which requires a bit more attention to time management. However, all lecture materials are available on day one, which makes it easy to get ahead. The TAs and instructor are amazing and super supportive, which ultimately makes the class really enjoyable.",SP 2019,Yes,CS 361 - Software Engineering I,1,0-5 hours,"Probably one of the worst courses in the program. While the course material and assignments are ""easy,"" you'll spend a lot of your time paranoid and/or frustrated about points getting taken off for random/unjustified reasons",No,,,,
6/12/2019 0:28:36,CS 344 - Operating Systems,5,13-18 hours,Start your programs early and use Slack as much as possible. The TA's are there to help and are the most helpful TA's in the program.,SP 2019,Yes,CS 372 - Intro to Computer Networks,4,13-18 hours,"Really pay attention to the weekly exercises, they will help you immensely on your midterm and finals.  Start the projects early, and see if you can take this after you have taken 344. There's not a whole lot of guidance for socket programming, but the programs are a decent chunk of your grade.",Yes,CS 362 - Software Engineering II,2,6-12 hours,"Easy class as long as you get a good group. The java debugging can be a mess and the instructions aren't the greatest, but very easy once you set it up."
6/12/2019 12:16:01,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"This class is a grind. The book is really dry, and the video lectures are generally unrelated to what you'll be asked to do on homework/quizzes. This course suffers from its ""memorize and regurgitate"" format. It's tough to build intuition because the topics change so much from week to week. TrevTutor and Eddie Woo should be first stops on YouTube after you take a browse through the weekly homework. If you're looking to do prep before your quarter starts and you haven't taken Calc II, go over series and sequences. It seems like a lot of people got lost there. On a positive note, you can pull off a good grade if you put the time in since the grading is pretty lenient.",SP2019,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"The first 2 or 3 weeks are very overwhelming. There's a lot of information needed to start learning assembly. The middle 60% of the class isn't so bad, but the last 2 homework assignments can be really time expensive. Make sure to start the last project (#6) as early as possible so you don't get stuck trying to study for the final at the same time. The quizzes and exams are very similar to the summary exercises. Review them early and often before taking exams. If you want to prep before starting class, get Visual Studio up and running with the Irvine library via the instructions from the Irvine book's website. This can be time consuming if you aren't used to Windows or Visual Studio.",No,,,,
6/12/2019 16:44:40,CS 162 - Intro to Computer Science II,3,18+ hours,"Start early, even if it's just writing down requirements and formulating a plan for coding later, this will save you time. Reusable code is your friend (menu/input validation). The front half of the class is an uphill slog, it does get better but be prepared to code, a lot. If you can take this course alone, do so, especially if you are working. If you need to take another class try and take one with a lighter work load.",SP 2019,No,,,,,,,,,
6/13/2019 17:35:33,CS 344 - Operating Systems,2,6-12 hours,"Watch the lectures, then read the assignment requirements and start thinking about them. Plan your program, then write it, then read over the reqs AGAIN to make sure you got them all. The requirements are long, but they are clear and precise. Three of the four programs even have grading scripts. The majority of your time will likely be spent debugging, so **get started early!** I think the first bash assignment was the hardest, and the 3 others were all C and not too bad at all. The small python program takes all of 10min to write, even if you do not know python. The TAs are awesome and make themselves freely available on the Slack, so use that if you need it.",SP2019,Yes,CS 361 - Software Engineering I,2,0-5 hours,"This class will likely be miserable for anyone. There is such a low chance that the stars align and you are matched with a motivated and capable group that just cruises through the assignments. And the assignments themselves do not even take long, except for coordinating with 4 other people plus a customer. It is almost guaranteed that you will be stuck with AT LEAST one person who does not care to contribute anything worthwhile. The instructor thrives on ambiguity, and instructs his TAs to take off petty points for not meeting some imagined requirements that were never shared with the students. It's quite an interesting concept for a class that is all about gathering requirements. When questioning about such deductions, prepare to see deflection like you've never seen. I really have yet to figure out why a class setup like this is necessary for post bac students, most of which are aware of what the 'real world' work force is like. Thank you for wasting my $2000 and my time.",Yes,CS 475 - Intro to Parallel Programming,2,0-5 hours,"This class is great, I would recommend it to anyone. The instructor does his best to fit a good amount of information in the short term. The listed pre-req is CS325 (algos), but if you've taken CS261, you should be fine. I thought having CS271 done was more helpful than either of those though. This term, the class had 8 projects, weekly quizzes and two exams (midterm and final). Grading is not harsh, but you do need a 96-97% or so for an A. The (unofficial) Slack group was really helpful, and the instructor is also very helpful and responsive."
6/19/2019 5:09:55,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"This class, as taught by Ehsan, is not bad. You might not come away from it being a discrete maths genius (it is a very lite survey over the topics with no deep dives into them), but as a class it's not a tough one to get through. 

The content in this class can be obtuse in spots, but as others have mentioned after the midterm things get easier. As a person that isn't a mathy in any way at all I managed to do ok by simply brute forcing the information. Continuously go over the answers provided to you for assigned HW questions and quizzes, as those are the types you will see on the exams. Familiarity with the subject matter makes everything easier. Also, using chegg/slader to check your answers and see how problems are worked out is very helpful as well.  And you might even find that these concepts start to make sense to you after a while.",SP 2019,No,,,,,,,,,
6/20/2019 16:23:52,CS 162 - Intro to Computer Science II,4,18+ hours,"Start all projects as early as possible - you will be thankful you did because you'll need the time to debug and test your projects. The quizzes are more or less helpful, so don't stress too much about them. There is a huge knowledge jump from 161 to 162 (though I don't know how this will change as the courses switch to Python). ",SP2019,No,,,,,,,,,
6/21/2019 22:24:50,CS 362 - Software Engineering II,1,0-5 hours,"As it is now, this class is pretty cut and dry. There are 5 assignments relating to Github and a C program that is given to you, along with some straightforward quizzes, a midterm, a group ""final project"" and a final. The assignments involve writing tests and then writing about what you did. Assignment 3 is the most intense. The project consists of you and two people of your choosing figuring out exactly how some given Java code works, and then you all write tests for another buggy version of the code. You are given very clear indications of what to expect from the unproctored midterm and final. The material itself, as far as the lectures and the assignment code, isn't overly interesting, but the class is absolutely better than 361.",SP 2019,No,,,,,,,,,
6/23/2019 21:37:11,CS 261 - Data Structures,4,13-18 hours,"I highly suggest finding group members that are engaging, ones that discuss the topics beyond just the worksheets. Make sure you understand how and why structures and sorting methods work. Focus on watching the lecture videos and worksheets rather than the readings when studying for the exams. The topics for the first half of the class are not too bad, but the latter half ramps up in difficulty.",SP 2019,No,,,,,,,,,
6/26/2019 19:49:50,CS 161 - Intro to Computer Science I,3,13-18 hours,Do practice coding problems,SP 2019,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,Do all the problems on the exam study guides.,No,,,,
6/29/2019 2:06:16,CS 464 - Open Source Software,1,0-5 hours,"Don't take this class unless you have no choice, such as to maintain full time status, or you want to pad your GPA. It starts off interesting, but it's been turned into nonsense revolving around someone's pet project called Gendermag. It's the pet project of another professor at OSU, aiming to eliminate perceived gender biases.The problem is it has absolutely nothing to do with open source software and this class is a sacrificial victim to the project instead of being integrated into Usability Engineering. You spend a lot of time on it, and what's utterly moronic about it is the page for it brags about how it's adopted in companies like Microsoft...so it's used in proprietary software. It's a method that has nothing to do with open source.",SP2019,Yes,CS 475 - Intro to Parallel Programming,2,6-12 hours,"Far and away the best elective at OSU. It's practical, Bailey is readily available and helpful during office hours, and it's interesting. Start the assignments early. And note that he gives you starter code, it's not explained very well how that part works but I initially thought I'd have to re-learn parts of calculus for the first project, but didn't realize he gave us all the math, our job was just to parallelize it.",No,,,,
7/1/2019 0:33:09,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,Do most everything that's offered you in terms of comprehension questions and end-of-chapter exercises. Not doing any of that is a recipe for not having a good understanding of the material and struggling to get an A or B in the course. ,SP 2019,Yes,CS 475 - Intro to Parallel Programming,2,13-18 hours,"This course should be taken after, or in concert, with CS 271, as there are some aspects of it that build and expand upon what's learned in Computer Architecture.",No,,,,
7/2/2019 18:28:12,CS 165 - Intro to Computer Science (Accelerated),3,18+ hours,,SP 2019,No,,,,,,,,,
7/9/2019 8:39:22,CS 464 - Open Source Software,1,0-5 hours,"I tried not to listen to the naysayers and took this class both for the easy A and to get my feet wet in open source. I succeeded in both! I submitted an issue to a major software project that now has a small bounty on it to get fixed, and I submitted a pull request that was merged. It felt pretty good to get that done! Now, the bad. GenderMag had no place in this class and seemed more fit for UI/UX topics. You get out what you put in...quizzes are easy, download the pdf book and watch the lectures. ",SP 2019,Yes,CS 344 - Operating Systems,5,18+ hours,"It's very difficult and I'm probably dropping out of the program due to the time intensity. I cannot stress enough. START EARLY. Take alone if you can or with a very light course. Spend weekends and nights on this. Toughest course in the program, and I've only got 4 left.",No,,,,
7/9/2019 20:41:14,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Start projects ASAP. I thought this was a pretty easy course but I also found it extremely interesting so I was pretty motivated to learn the material. This was the first class I saw clear organization in the material and definitely something every course in this program should strive to be. I didn't find the material to be terribly complex, but there is a fair amount to know and understand. Watching lectures was helpful, going over all the material that's provided online(quizzes, week summaries, exercise questions) before taking the exam was the most helpful to me. Read the book early on to get a good understanding of the basics and after about week 4 you can probably just use it as reference. Tests are challenging so really study, but they are absolutely fair. The final two programs take a significant amount of time compared to the first three. The last one tests your knowledge and your ability to keep track of the stack.",SP 2019,Yes,CS 464 - Open Source Software,1,0-5 hours,"Try finding a project that you might want to contribute to before even taking the course. This is absolutely the hardest part of the course. It was intimidating to make a contribution to a project and I had trouble finding a project to contribute to but it was pretty rewarding process. I can't really recommend taking this course though unless you just want an easy A and need a reason to contribute to an open source project. A project was added to this course this last quarter that a lot of people had problems with as it lasted way too long. I personally didn't care for that part of the course. I personally couldn't take a different elective but if at all possible, take something else as the best part of the course can just be done for free in your own time.",No,,,,
7/24/2019 8:14:50,CS 225 - Discrete Structures in Computer Science,4,18+ hours,"Practice the sample quizes and exams. Find youtube videos to help with example clarification. Make sure your text editor is solid, I used Microsoft word. Just grind away at practice problems and homework examples and you got it.",SP 2019,No,,,,,,,,,
8/12/2019 16:02:01,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,"Assembly, the language, is annoying, but I did find the worm's eye view educational. The class is very well structured, stuff is graded in a reasonable time frame, and the professor is present, fair and kind. He actually replied to an email I'd sent him multiple times, to make sure I understood. All in all, it's an example for other classes to follow.

Tips: The book is a bit messily laid out, but it's actually pretty good. Read it. Become best friends with Visual Studio and its debugger, especially the memory, register and flags panel. Don't be afraid to copy things to a register so you can see what's going on. You don't have to buy a calculator, you can use the Windows one, so get used to using its Programmer view. Do as much extra credit as you can. Do not fall behind!",SU 2019,No,,,,,,,,,
8/13/2019 12:30:26,CS 261 - Data Structures,2,6-12 hours,,SU 2019,Yes,CS 290 - Web Development,2,6-12 hours,,No,,,,
8/18/2019 13:21:00,CS 261 - Data Structures,3,13-18 hours,"The first half of the class covers Arrays and Linked Lists which is mostly a review from 161/162. Because of the limited material in the first half, the midterm exam tries to compensate by using trickeration and leetcode type coding challenges. The midterm is hot garbage, presumably written by a TA that has no formal training in exam writing. The 2nd half of the class covers Trees, BST's, AVL Trees, Heaps, Hash Maps, and (limited) Graphs. Because it covers more material, the exam is more general with less trickeration. Hope you get to experience the Python rewrite (Spring 2020) because this class is not good. I recommend using the Udemy C/C++ data structures class to actually learn data structures.",SU 2019,Yes,CS 340 - Introduction to Databases,1,6-12 hours,"There's a few random assignments throughout the course, but your grade is all centered around your 2-person group project. Understand the project requirements from the beginning and do not exceed the requirements. You will only create excess work and problems for yourself in the final week. The class is very lacking in terms of SQL data validation, security, protection etc. There is a reliance that you already understand node or flask as you have write the front end and backend of your database project. The relational algebra assignment at the end makes no sense.",No,,,,
8/20/2019 8:29:33,CS 261 - Data Structures,2,6-12 hours,"Laurel and Larissa were teaching this term and were very responsive and friendly. It looks like they are taking over this course while it is being re-worked for next year. The content in the class is VERY old. You can trace the assignments and worksheets back many years. Throughout the years, it has received little to none quality of life updates as the worksheets use inconsistent code style or are even incorrect. If you can do anything to make your life easier in this class is get in a good group. My group was great. There are weekly meetings and it is key to get a group who is engaged with going through these spaghetti worksheets. The greatest part of all this is the amount of time spent on the worksheets in the end makes up so little percent of your grade (15%) it is ridiculous. Assignments are copy-paste from worksheets so they are meaningless. Tests are the only meaningful part of your grade so you better pray to rng gods. ",SU 2019,No,,,,,,,,,
8/20/2019 10:20:27,CS 161 - Intro to Computer Science I,3,6-12 hours,"Practice as much hand-tracing of code as you can, especially for the midterm and final exam. The book is adequate at explaining concepts, but the video lectures were not very helpful. Do the end of chapter reviews, and code and compile examples from the book if you're having a tough time with a topic. Reach out for help when you feel you need it, as once you fall behind it's tough to catch back up. Google and YouTube will become your close friends as they have tons of available helpful information. The accelerated Summer schedule made this class feel a lot tougher than the original reviews I'd read here. ",SU 2019,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"Take advantage of the free ALEKS review materials before this class if you feel like you need to brush up on any math topics. Give yourself ample time for homework and quiz/midterm/final review, as the topics you cover will increase in scope quickly. Take the practice quizzes/midterm/final multiple times and get comfortable with them, as you will see very similar and sometimes exact problems on the actual quizzes/midterm/final. Get ready to do more proofs than you've ever imagined you'd do. The grading was fair and the instructor and TA's were quick to respond. Trefor Bazett's Discrete Math tutorials on YouTube were EXTREMELY helpful multiple times when I was stuck on particular topics. I took this during the compressed Summer term and the pace was very fast and merciless, so do your best not to fall behind as it would be extremely tough to catch up. ",No,,,,
8/22/2019 1:07:22,CS 261 - Data Structures,3,6-12 hours,"This class was a shitshow. It was reworked and poorly done. The midterm average wound up being a D+ students then began pulling apart the poorly written midterm and points were given back. The issue was their was a poor correlation between the topics and structure of the midterm and the assignments. The textbook for this class is very useless. The lectures were OK but I recommend San Diego State University's lectures (there is a bald headed british guy) , the lecturer there explains AVL trees, Binary Trees etc much, much better then the OSU lecturer. The final for the term was better then the midterm but still had some ambiguity. In fact both exams I believe the professors knew some of the questions were written poorly because they included an assumption box on both exams where you could basically write down what you assumed about the questions and why and they would look at these while grading. Overall, I am one of many students who is disappointed with the quality of this class and hoped for something better. Not sure if other terms are better but the summer term was paltry at best. The group work in the class was another annoyance. I had a good group , but the group work felt superfluous and not really beneficial in any meaningful way that couldn't be accomplished in a more efficient manner. The course work wasn't difficult but the poor presentation overly complicated the course.   Do better OSU. ",SU 2019,No,,,,,,,,,
9/2/2019 8:59:45,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,"The tests are faithfully taken from the lectures and weekly summaries. Convert that content into flashcards and/or retake those regularly. Make sure you are familiar with even the last few lectures for the final. The final project seemed significantly harder than the others, but I found the grading to be fairly forgiving for that one. In hindsight, I would recommend ""timeboxing"" that project so that you can be prepared for the final.  I took this compressed which required a lot of time for me, but I think they did remove one project for that version of the class so it's doable. I purchased a calculator for conversions which is allowed and is useful for most of the conversion problems. I would also stress that TAs are very helpful (for this class they were mostly available during the weekdays) and held office hours on slack. Also, piazza was useful. I even put questions up on piazza and slack in the hour prior to my exam for topics that turned out to be on the test and they were answered in time for me to understand - so that saved me some valuable points.",SU 2019,No,,,,,,,,,
9/5/2019 9:14:21,CS 261 - Data Structures,4,6-12 hours,"I was pretty lost the first few weeks of class, which starts with logic and expressions. This wasn't a typical 'numerical math' class, where you just operate on numbers. There is a lot of terminology and evaluating written statements. I think some general context and background of discrete math would have been helpful to ground the material in the real world, so if you want to prepare I'd suggest reading up on the subject and learning the basics of what this type of math is about and what it's used for.  As the class progressed I could start to see how all the modules fit together and tied into computers (as well as many other areas of life). Toward the end of the class I was enjoying the subject much more and wondered why I hadn't learned this stuff before. 

The language in the required book can be confusing at times, and using the other recommended book or outside materials was helpful to parse some of the concepts. I also tried using an ebook version of the textbook for the first half of the class but eventually broke down and bought a physical copy around the midterm. I think having the physical version helps a lot when you need to skip around and review material. 

Unfortunately the midterm and final make up a HUGE portion of your grade (50%). However, the teacher provides some nice practice exams and the questions appear to be taken directly from the homework or quizzes with only slight changes. I thought the TA's and teacher were good at responding on Piazza and Slack.",SU 2019,No,,,,,,,,,
9/5/2019 9:27:41,CS 162 - Intro to Computer Science II,4,18+ hours,"I had very little programming experience going into this course. The workload is challenging for sure and I found myself spending about 20+ hours per week, especially in the first half. Weeks 3 and 4 are particularly difficult and I felt overwhelmed by week 4, even questioning if this was something for me. I powered through it though and things started to get easier in the second half. The workload is still heavy but you can start to reuse a lot of the code you developed in the first half. By the end of the course I felt pretty good about programming in general. Be prepared to do a lot of reading as well, mostly in the first half. The book is well written and worth having for reference in the future. While you could certainly get by without reading everything and just looking things up online, I think the book helped me see how a lot of these concepts fit into the bigger picture. ",SP 2019,No,,,,,,,,,
9/15/2019 10:28:45,CS 261 - Data Structures,3,6-12 hours,"The only concepts from C that you might not have covered in earlier classes were void pointers and function pointers - these will come up in the last quarter of the class. No need to do any specialized C prep. The most valuable things you can do to keep a good grade are (in order of importance): 1. Join a group early via slack, preferably before class starts. The students forming groups then will be the most motivated, and will help push you when you start getting lazy halfway through. 2. Create an implementation of each data structure from each worksheet along with unit tests. This will end up being a lot of work (10 hours per week, and more when doing AVL Trees/Heaps) since there are generally 5 worksheets per week. Your own C implementations internalize the structures/code so that you can answer questions on the exams that you might not have done before (if you don't Leetcode). Generally, exam coding questions will be something from the worksheets but with a twist. 3. Leetcode practice targeting each data structure is a fantastic supplement to the worksheets and their implementations - this will really help on the exam coding questions. It seems like it's easy to get a bad grade. Lots of students complained about the exam difficulty, but I'm not sure what kind of prep they did. I feel like doing these three things (and staying on it) helped earn an easy 97% final grade. ",SU 2019,Yes,CS 290 - Web Development,2,0-5 hours,"If you have a little professional experience with web development, this class will be a breeze. Knowing how to use git from the command line and how to start/stop a node server (with forever) would be good things to practice before starting class. Do an hour long node tutorial on this so you can focus on learning the development concepts. If you want to prepare for the final project, learn how to setup a mysql server on your computer and make a connection from a simple node app. The mysql queries are super simple - no worries there.",No,,,,
9/21/2019 12:46:46,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,"I was pretty lost the first few weeks of class, which starts with logic and expressions. This wasn't a typical 'numerical math' class, where you just operate on numbers. There is a lot of terminology and evaluating written statements. I think some general context and background of discrete math would have been helpful to ground the material in the real world, so if you want to prepare I'd suggest reading up on the subject and learning the basics of what this type of math is about and what it's used for.  As the class progressed I could start to see how all the modules fit together and tied into computers (as well as many other areas of life). Toward the end of the class I was enjoying the subject much more and wondered why I hadn't learned this stuff before. 

The language in the required book can be confusing at times, and using the other recommended book or outside materials was helpful to parse some of the concepts. I also tried using an ebook version of the textbook for the first half of the class but eventually broke down and bought a physical copy around the midterm. I think having the physical version helps a lot when you need to skip around and review material. 

Unfortunately the midterm and final make up a HUGE portion of your grade (50%). However, the teacher provides some nice practice exams and the questions appear to be taken directly from the homework or quizzes with only slight changes. I thought the TA's and teacher were good at responding on Piazza and Slack.",SU 2019,No,,,,,,,,,
10/30/2019 4:47:50,CS 161 - Intro to Computer Science I,1,0-5 hours,,SU 2019,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,,No,,,,
10/31/2019 9:27:27,CS 161 - Intro to Computer Science I,3,13-18 hours,,SU 2019,Yes,CS 225 - Discrete Structures in Computer Science,5,18+ hours,,No,,,,
11/3/2019 19:12:42,CS 161 - Intro to Computer Science I,2,6-12 hours,Start projects early.  Stay on top of concepts.  ,SP 2019,No,,,,,,,,,
11/3/2019 19:14:13,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Practice.  Doing the required assignments isn't enough practice to anchor the concepts in your head.,SU 2019,No,,,,,,,,,
11/3/2019 19:18:04,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,Spend more time working exercises and reviewing the answers in the appendix than trying to understand the material from reading or watching the lecture videos.  ,FA 2019,Yes,CS 290 - Web Development,1,0-5 hours,"Take Colt Steele's Udemy course beforehand, and you'll get a lot more out of this class.  This class seems to focus quite a bit on odd exceptions rather than building things.  The Colt Steele Udemy class takes the opposite approach, and the introduction and framework will give you something to hang all of these little oddities and exceptions off of. ",No,,,,
11/8/2019 9:02:40,CS 340 - Introduction to Databases,1,0-5 hours,If you take this course after 290 and read/watch the weekly material then this class is a breeze. It takes some effort and is not a free A but grading is lenient and the material covered is not difficult. Start the project early.  ,SU 2019,No,,,,,,,,,
11/12/2019 15:28:42,CS 161 - Intro to Computer Science I,3,6-12 hours,,SU 2018,No,,,,,,,,,
11/12/2019 15:29:11,CS 162 - Intro to Computer Science II,4,13-18 hours,,FA 2018,No,,,,,,,,,
11/12/2019 15:32:13,CS 225 - Discrete Structures in Computer Science,5,18+ hours,I found the book and course material to be difficult to understand but with enough time spent slowly re-reading everything I was able to get it. I subscribed to Chegg.com specifically for this class which helped me a ton. They literally have the answers on Chegg so be careful not to use it as a crutch. I found it really difficult to see what was done between each step when reading the book or going over lecture materials and found Chegg had more in-depth examples as well as additional examples for other forms.,WI 2015,No,,,,,,,,,
11/12/2019 15:34:21,CS 261 - Data Structures,3,6-12 hours,"I found this course really interesting and the topics covered are SUPER useful and important for pretty much every other class, especially Algorithms. The provided lectures and material are pretty poor so make sure you do whatever is necessary to understand what's being talked about. The concepts covered in this class are fundamental to lots of programming so it's easy to find outside resources.",SP 2019,No,,,,,,,,,
11/12/2019 15:38:11,CS 290 - Web Development,3,6-12 hours,"This is hands down the worst class I have ever taken, ever, at any school or program.The provided material is confusing and doesn't explain what you're doing or why. It fails to connect any previous topics to later topics and frankly made me lose all interest in Web Development. I was told by numerous people to take Colt Steeles Web Dev course on Udemy before taking this class and I'd recommend that to anyone else. It's around $12 and supposedly covers all the topics for this class except way better. Full disclosure, I haven't personally taken Colt Steele course but I'm planning on it cause I actually wanna learn Web Dev and not hate it.",SU 2019,No,,,,,,,,,
11/13/2019 13:08:44,CS 165 - Intro to Computer Science (Accelerated),4,6-12 hours,"Study hard, keep good notes, get into good coding habits, and make sure you understand all of the assignment requirements!",FA 2018,Yes,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,"Be honest about your class understanding with your group mates, be engaged in the Piazza discussions, start work early, and keep good notes. ",No,,,,
11/13/2019 13:10:10,CS 261 - Data Structures,4,6-12 hours,,WI 2019,Yes,CS 271 - Computer Architecture & Assembly Language,5,13-18 hours,"This class was the most difficult for me. Ask lot sof questions, work lots of examples, read all of the notes and watch lectures.",No,,,,
11/13/2019 13:13:17,CS 340 - Introduction to Databases,2,13-18 hours,"Find a really great group partner with the same ideals as you, don't spend too much time on fancy-ing up your project (lay the groundwork first), and read the class lectures (they're actually really helpful)!",FA 2019,Yes,CS 361 - Software Engineering I,2,13-18 hours,"The instructor is terrible, so create great relationships with your group mates to get you through the semester. Write more than you think you need to, study the lectures for the exams, and be prepared to decipher a lot of confusing and vague instructions!",No,,,,
11/13/2019 23:21:33,CS 161 - Intro to Computer Science I,4,18+ hours,"Take an intro to CS course in Python on Coursera or Udemy before this class. No textbook is needed,  but I would google what the best beginner Python books are and buy one of those for extra practice/understanding. Stack Overflow has some pretty bad/inefficient code that doesn’t always work. Rely on academic literature online or your personal Python beginner’s book.",FA 2019,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,The algebra that you take on ALEKS will not be enough for this course. Best way to prepare is to buy the solutions guide to the textbook and do extra practice problems that resemble the assignments. Pay particular attention to the algebraic techniques. There is a good reason that you are taught Boolean Algebra initially... it carries on for the rest of the quarter into math induction and proofs.,No,,,,
12/1/2019 1:16:42,CS 161 - Intro to Computer Science I,2,0-5 hours,Take an intro to python programing course and you will be fine.,FA 2019,No,,,,,,,,,
12/3/2019 7:58:08,CS 161 - Intro to Computer Science I,1,0-5 hours,"Take a Udemy/Coursera class on Python beforehand. Doing so will morph this class into a cakewalk. I watched people with no prior programming experience wade into this class and have a ton of difficulty. I have no prior professional programming experience but took the Python Masterclass on Udemy over the summer before starting this class and the hardest I had to work was probably on the two projects at the end, both of which took me about 4-8 hours total time each. The time was simply due to how large the projects are compared to previous assignments and subsequent debugging and documenting you will have to do.",FA 2019,Yes,CS 225 - Discrete Structures in Computer Science,4,18+ hours,"I am not really sure what advice I can offer here. The hardest part of the class, for me, is weak/strong mathematical induction around week 4. Things get dramatically easier after that. I am coming up on my finals and still really don't understand induction. The best advice I can give is put something on paper for every question even if it is blatantly wrong (within reason). Whether we are talking about quizzes, exams or assignments, I found the grading to be abundantly lax in this class which I think is its saving grace.",No,,,,
12/3/2019 19:16:13,CS 161 - Intro to Computer Science I,2,6-12 hours,"No textbook required, but free online PDF helps a lot when understanding material. Don't get behind on early material as is all reused on assignments... especially classes. ",FA 2019,Yes,CS 225 - Discrete Structures in Computer Science,4,18+ hours,Use outside resources especially on topics before the midterm. Make sure you understand homework and quizzes prior to midterm and final. Keep on top of the material as it is easy to fall behind. ,No,,,,
12/6/2019 15:34:52,CS 344 - Operating Systems,4,13-18 hours,Easily the most challenging course of the program in terms of the complexity of the programming. Hone your basic C skills before the start of the class and allocate large amounts of time to all of the projects. Do not start a project with fewer than five days before the due date.,FA 2019,Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,This is not a class where you can either read the text or listen to the lectures. Some material that's tested on is present or elaborated upon in one set and not the other.,No,,,,
12/9/2019 8:08:45,CS 361 - Software Engineering I,3,6-12 hours,Stay on top of the material. Very text heavy,FA 2019,No,,,,,,,,,
12/9/2019 22:26:46,CS 493 - Cloud Application Development,3,6-12 hours,Start asap on project 4 and final.,FA 2019,Yes,CS 419/467 - Software Projects,2,6-12 hours,Make sure your team is communicating often every week so that deadlines are hit,No,,,,
12/10/2019 5:32:02,CS 161 - Intro to Computer Science I,2,0-5 hours,,FA 2019,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,,No,,,,
12/10/2019 6:23:49,CS 362 - Software Engineering II,3,6-12 hours,"Don't expect to learn the ins and outs of testing with the garbage game code that's used throughout the quarter. Lecture material is ok but the assignments don't match the material as well as it should. If no major change has yet been made for Winter 2020, make sure you play & learn the card game Dominion - it'll help a lot. ",FA 2019,No,,,,,,,,,
12/10/2019 8:34:07,CS 261 - Data Structures,4,18+ hours,"Get a group as soon as Slack access is set up. The worksheets have some typos here and there so you'll want to make sure you read them carefully, but so long as you put in the effort you'll get the points. Do not start assignments late, especially the Hashmap one at the end, you will be dealing with a lot of seg faults if your pointer knowledge isn't great.",FA 2019,Yes,CS 290 - Web Development,3,13-18 hours,"Doing a web dev course before this course would help immensely since it's not due for a revamp until late 2020. The front-end portion will be easy, but once you reach the backend prepare to spend a lot of time trying to understand why your requests are not working. All in all it's an easy course but don't slack off.",No,,,,
12/10/2019 14:36:41,CS 361 - Software Engineering I,3,6-12 hours,"The tests are quietly worth a lot of points. I would really study these. I did the best on the final test after studying the content using flash cards. It's kind of sad because I could see the vision of trying to replicate a professional development team, but it puts a lot of stress on the situation when certain group members openly don't care that much about their grade and you're stuck with them. I spent a lot of time micromanaging distracted or non-committed group members, so my grade felt pretty outside of my own control, which was the really stressful part of the class. I was more stressed out in this class than other more technically difficult ones for this reason. I would suggest accounting for group members that might flake out and take control of the group early on along with the few members who actually do show up.",FA 2019,No,,,,,,,,,
12/10/2019 19:52:39,CS 372 - Intro to Computer Networks,3,13-18 hours,"This course is being redesigned, so this review may be outdated. Each week there is ~1 hour of lecture and ~50 dense pages of reading. For the most part, they cover the same material except the reading goes more in-depth.

Most of your grade comes from Canvas quizzes, including the proctored midterm and final. This includes weekly homework quizzes, 2 quasi-exams (non-proctored), a midterm and final (proctored), and make up 69% of your grade. There are practice quizzes available after every week, and they are excellent prep for the midterm and final. If you're doing well on those, you should be very confident going into the exams.

The programming projects are by far the most intellectually challenging part of the course. Start them early and do as much extra credit as possible. This could easily bump your final grade by ~3% or more.

The labs are a nice way to demonstrate what's being taught in lecture, and they are easy. Do them early, because they can take longer than you think.",FA 2019,No,,,,,,,,,
12/12/2019 2:20:59,CS 162 - Intro to Computer Science II,4,18+ hours,"The projects are large enough that asking for help becomes difficult. Do your best to stay ahead. However, the course is changing from C++ to Python and python from my understanding doesn't directly deal with pointers. Not as easy as everyone said it would be. Yes, you will spend a lot of time in this course.",FA 2019,No,,,,,,,,,
12/12/2019 10:09:46,CS 340 - Introduction to Databases,2,6-12 hours,"You should take CS 290 first. The course begins assuming you have a basic knowledge of HTML, JavaScript, and Node. Find a partner on Slack rather than Piazza--they're less likely to ghost you later. Better yet, partner up with someone you know from a previous class. Make sure you both know the basics of Git. We used Flask for our site, and I loved it. Neither of us had used Flask before, but it's much more straightforward than Node.js. I recommend Cory Schafer's Flask tutorial on YouTube. Workload was steady (~10 hrs/week) over the course of the term, except more in the week with the Advanced SQL assignment. The lecture videos start out OK but become less useful/coherent later in the course. Hannah Scott was a very responsive instructor.",FA 2019,Yes,CS 325 - Analysis of Algorithms,4,13-18 hours,"This course is front-loaded: I spent between 14-20 hours per week on it during the first 3 weeks, then about 12 hours per week after that. Dynamic Programming was the most time-consuming assignment. The textbook is dense and difficult to understand, unless you were previously a math major. I reviewed the lecture PowerPoint PDFs instead of watching the lectures. Most of my learning happened from Abdul Bari YouTube videos, GeeksForGeeks, and general internet searches. It is challenging material, but it's made even more challenging due to having to teach yourself every week.The instructor Julianne Schutfort was reasonably active on Piazza but sometimes gave confusing/conflicting advice. This isn't a fun class, but it does lay an adequate foundation for learning different approaches to solve problems.",No,,,,
12/12/2019 10:11:25,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"This has been one of my very favorite classes in the program so far. The first 2 weeks have very long readings and lectures.  Don't worry, it eases up. Programs 1-4 are quick and easy.  Program 5 is a step up in difficulty.  Program 6 is the most challenging, so start early on this one.  One of the most organized and well though-out courses in the program.  It is optimally designed for you to learn.  The weekly summaries are open book, and you can take them twice.  This is a great way to learn!  You take it the first time and really find out what you don't know, then you review those concepts more for the 2nd attempt, resulting in real progress.  Quizzes are also open book, but you only get one chance.  2 exams are 40% of your grade, and they are no joke, but about 80% of the questions follow the exact format (or are exactly the same) as ones found on your summaries and quizzes, so you know what to prepare for.  Having been in the IT field for 18 years now, I can offer this advice.  Don't rush through this class, the concepts you learn here will be very helpful for you during your career.  Not that many will be writing Assembly code, but understanding how memory is organized, and how the computer really works is a foundational concept that will pay dividends long into the future.  Take your time, learn the material well, and you'll have a great semester.",FA 2019,No,,,,,,,,,
12/12/2019 10:21:04,CS 362 - Software Engineering II,3,0-5 hours,"In the first few weeks, actually read the dominion code documentation, and the cards the first assignments give you, and really look through and understand the way it all works.  Most of the course involves wading through it and messing with the same things over and over in different ways. It's incredibly tedious but less so if you build a firm grasp on what is going on up front.",FA 2019,Yes,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"This is one of the most well-organized and clearly laid out courses in the program.  Watch the lectures, do the reading and the provided exercises each week and you'll be in good shape for the many open-book quizzes.  The midterm and final are pretty rigorous & detail oriented, but again if you go over the provided materials you will be set.   The extra credit on the homework is usually not worth it unless you really want the extra practice - they'll have you do hours of work for an extra point or two.  Your time is better spent just making sure you get all the points on the main assignments/hw/quizzes IMO.",No,,,,
12/12/2019 10:29:32,CS 161 - Intro to Computer Science I,2,0-5 hours,"Do your best to stay on top of things and get help from TAs/Slack/Piazza.

There's no book and no proctored exams in this python redesign, so the external annoyances are minimal.  I took it knowing very little python or programming, and found it to be really quite easy.  I found the optional text (which can be downloaded as free PDF or purchased inexpensively as a paperback) to be a wonderful extension and secondary resource.  

Weekly assignments are short (too short, I would say), and quizzes were open-internet and allowed for a retake.  I took the quizzes first and used them to help guide what I looked at as I reviewed the weekly lessons on Canvas.  Instructor clearly wants everyone to have reasonable shot at 100% on quizzes, based on this setup.  Quiz items are randomized from a larger problem set, and the quiz answer options are randomized as well, so you do have to focus on actually learning the ideas.

The instructor introduces git on week one, and assignments are submitted through GitHub.  However, the true power of git becomes apparent during weeks 8, 9, and 10, when the projects become long enough to warrant branching and merging.  Try to remember that git is your friend when you get there.

You can do some early studying via Udemy or other Python resources if you like, but it is not at all required.  People who come in knowing Python are actually at a sort of disadvantage: we are forbidden from using non-covered topics and tools, and some Piazza/Slack convos were complaints about ""Why can't I use function.method()??""  Do your best to stick to the script, because we are meant to learn the actual logical execution.",FA 2019,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"I came in with an unusual level of preparation for this course, so I'm not the best judge of difficulty.  The structure (two weekly assignments, weekly 2-hour quiz, bi-weekly discussion post) means that all students will spend a lot of time on this course.  Most of my classmates who took both 161 and 225 spent at least 80% of their school time on 225.

The grading is extremely lenient overall, rewarding effort and attempts with large partial credit allocations.  The professor was extremely present on Slack and Piazza both, and she seemed to be working hard to answer questions posed by students.  Please ask your questions on Piazza and Slack.  (And, goodness gracious, please understand that ""Anonymous"" posts on Piazza are only anonymous from the students -- the instructor and TAs know who posted what.)",No,,,,
12/13/2019 5:21:55,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Do solid work on the programming and quizzes where your effort will pay off because the exams are difficult to score well on. You can follow the grading rubric for the programs and do the assigned exercises to prepare for quizzes to get near perfect scores.,Fall 2019,No,,,,,,,,,
12/13/2019 21:08:32,CS 325 - Analysis of Algorithms,3,13-18 hours,"Course needs a reboot. Lectures are the worst I have experienced thus far. Listen to the class lectures at 2x speed. Doing this barely made them tolerable. If you want a superb explanation of the topics, look at Abdul Bari's youtube page. He was a life saver. ",FA 2019,No,,,,,,,,,
12/13/2019 21:29:14,CS 344 - Operating Systems,3,6-12 hours,"This course has been one of my favorites thus far. The assignments are very challenging, but they provide a great sense of accomplishment once you complete them. Don't wait until two days before the due date to start and then bombard Piazza with questions in desperation. The assignments are worth 75%+ of your grade, so get a jump on them. The instructor and TA's were top notch! They were all very responsive and eager to provide help whenever needed. One of my favorite aspects of this course was the lectures. They are SOOO good compared to many of the others I have experienced up to this point. Awesome job Brewster! If you take the time to learn the concepts for each programming assignment, the final will be a breeze.  ",FA 2019,No,,,,,,,,,
12/16/2019 11:22:38,CS 161 - Intro to Computer Science I,3,6-12 hours,Do Repl.it code problems; study the model solutions carefully; try reading all the optional chapters; pay attention to what is covered on Canvas; do not use concepts/tools not covered yet; find a way to organize the material to keep track of what has been covered; revisit each week at least 2-3 times as you progress through the course; start coding week 9 and week 10 projects early; participate in online discussions — ask & answer; explain concepts to your classmates — helps you solidify; use pythontutor; get in the habit of drawing diagrams and variable states; get in the habit of tracing the code; the learning materials are thoroughly thought-through and have solid underlying logic.,FA 2019,Yes,CS 225 - Discrete Structures in Computer Science,5,18+ hours,"Start early with homework. Make sure you do every exercise and read each assigned reading. Try doing extra problems. The class is not hard as long as you’re studying every day. Midterm and Final exams guides are there for a reason - do every problem listed there. Make sure to do problems in the lecture slides as well as in weekly quizzes. The TAs are very helpful, but make sure that you read assignments and do the problems first.  ",No,,,,
12/16/2019 20:48:06,CS 325 - Analysis of Algorithms,4,13-18 hours,"This class is definitely front loaded due to all of the math you may have forgotten or need to learn. Once you get over that hurdle, you will then need to absorb all of the material from the lecture, outside videos (Bari), and other resources you can find online. Most lecture videos from the professor are ok except for a few. The book is horrible and dense, didn't really need it. Do well in the HW and quizzes and you will be in good shape come test time.",FA 2019,No,,,,,,,,,
12/18/2019 8:21:53,CS 325 - Analysis of Algorithms,3,6-12 hours,The book is entirely useless for the class and I got a good grade without ever touching it. The lectures are okay but I highly recommend that you look up other lectures on youtube that are related to the weekly topic.,FA 2019,Yes,CS 362 - Software Engineering II,1,6-12 hours,If you have a good group this class isn't terribly difficult. Grading is lenient and the material isn't anything too complex.,No,,,,
12/18/2019 16:37:24,CS 325 - Analysis of Algorithms,3,6-12 hours,Don't bother reading the textbook.  It's honestly a big waste of time.  The lectures are useful but I learned the majority of the material through youtube videos.  Don't stress the fine details.  Focus on the big ideas and concepts and you will do just fine in this class.  ,Fall 2019,No,,,,,,,,,
12/19/2019 10:57:31,CS 373 - Defense Against the Dark Arts,1,6-12 hours,"This course was pretty easy, and the grading was lenient if it looked like you put in a good amount of effort. The lectures will take you a fair bit of time (3+ hrs per week), but the material was very interesting and the labs were fun. Professor McGrath was also very engaged with the course and was always willing to answer questions on Slack.  My only gripe is that the material is starting to become outdated (The lectures were recorded in 2015). One of the labs used a VM with XP, for reference. That said, the lectures are very good, as they are taught by experts from Intel/McAfee, just need some updating. ",FA 2019,No,,,,,,,,,
12/22/2019 11:55:15,CS 493 - Cloud Application Development,3,6-12 hours,"One of the best classes I have taken, with a project that yielded instant results when added to my resume. Percentage of callbacks from applications doubled with all the great buzz words I could show off from this class alone. Now I have to decide which job to take...

You have to read the documentation for the tools you use. Keep your code organized, and object oriented with the intent of reusing much of it for future assignments and the class is not hard...not necessarily easy either.

The instructor is responsive, and the grading is fair. It can be time consuming at times, but I never had to go over things repeatedly like in Algo. There are a lot of concepts but once you got it, you got it, no need for heavy reinforcement...only exception is Oauth. ",FA 2019,Yes,CS 373 - Defense Against the Dark Arts,1,6-12 hours,"They don't care about this class...I gave less and less effort each week and still got an A. Im pretty good at BSing write ups, so maybe I have an advantage there.

Some interesting topics, some insight into hacking, but one of my least favorite courses behind SE1 and SE2. Kind of turned me off from pursuing a career in security.  ",No,,,,
12/23/2019 12:32:48,CS 225 - Discrete Structures in Computer Science,3,18+ hours,"The level of difficulty from this course stems from the amount of workload every week - a weekly quiz (which are more like exams, since they take 1-2 hours to complete), 2 weekly homework assignments, biweekly discussions, and a midterm and final. While the material is challenging, it is definitely doable if you put in the time. And if you make the effort to understand the material thoroughly each week, it will greatly prepare you for the midterm and final and lessen the amount of studying you will have to do for each exam. Luckily, the grading is lenient, and as long as you make an effort to answer an exam question, you will receive partial credit. The final exam grading was especially generous. As others have recommended: check out TrevTutor, Eddie Woo, and Trefor Bazett's YouTube channels for extra guidance. Make use of Piazza and Slack for questions—the TAs and instructor are typically very responsive. As for studying, review your homework assignments and pay attention to the types of questions asked on the practice midterms and practice finals, as those are the types of questions that were asked on each exam. I haven't seen this recommended yet, but if you'd like to get a head start on learning the material, I highly recommend Richard Hammack's ""Book of Proof"" which is available as a free PDF by the author (specifically pay attention to sections I, II, and III). This book covers a lot of the topics you will see in this course. ",FA 2019,Yes,CS 161 - Intro to Computer Science I,1,0-5 hours,"I took this class as part of the first Python cohort (Fall 2019). If you'd like to have a much easier time the class, I recommend taking a Python class on Udemy to get ahead learning the material. The assignments consisted of 2-3 weekly coding assignments, 2 group projects (which were written assignments), and weekly quizzes that are meant to reinforce your understanding of the material. If you have prior programming experience, this class should be a breeze. And even if you come in to the class with zero coding experience, the class is set up so that beginners can understand it. The weeks with the largest workload were weeks 9 and 10. My biggest piece of advice is to make sure to test your programs thoroughly and read the assignment specs carefully—the single Gradescope test that is run when you submit is not reflective of all of the tests that will be performed after the due date deadline.",No,,,,
12/28/2019 17:50:30,CS 290 - Web Development,2,13-18 hours,"This course needs a major update. To pass this course and actually understand what is going on take Colt steele's udemy class. It comes on sale every few weeks and is totally worth the price. A 20-10$ (depending on when you buy it) class is worth way more then this 2k monstrosity.

The beginning of the course is very light and the assignments are as well. If you take colts in the first modules of colts you will be learning and building stuff that is much more detailed then the course assignments and the assignments will be a breeze. The second half of the class is when it gets dicey. The server side stuff is a mess, the professors and TA's have admitted as much. The videos are hard to follow and the material does not adequately prepare you. For the last assignment so many people who otherwise were good students wee struggling. This class is one of the poorest the E-campus CS course has to offer and frankly felt like a rip-off. Oregon State University should be ashamed to offer this course as it is and some major changes need to happen. ",FA 2019,Yes,CS 362 - Software Engineering II,1,18+ hours,"This class was extremely tedious. I took it with wendy roberts and frequently found myself writing 20-30 page documents (not even counting the code). The assignments were repetitive and I can say aside from the readings I learned an extremely minimal amount from this course. 

Oversight was also needed for the TA's. Some TA's were awarding students with 2-4 pages full marks while other students with different TA's who turned in upwards of 20 pages were having marks taken off for ridiculous items. The professor also as the semester progressed began to ignore emails from students. 

I would say wait until the revamp unless you want to be extremely frustrated. ",No,,,,
12/30/2019 11:35:32,CS 161 - Intro to Computer Science I,3,0-5 hours,,FA 2019,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,,No,,,,
12/31/2019 10:46:41,CS 373 - Defense Against the Dark Arts,1,6-12 hours,"The points for this class are for the most part spread across three different categories: 1) weekly write-ups, 2) homework/labs, and 3) final presentation. The weekly write ups are pretty straight forward, you summarize the things you learned during the lecture and labs assigned that week. Some weeks my write ups were 5+ pages and other weeks they were a single page long, but I always got full credit. The homework and labs are by far the most challenging part of the class, but they're worth so little in terms of points that you can literally take a raincheck on two of them and still be fine. In fact, that's what I did and I still finished the class with an A. The final presentation is a ~20 minute presentation on a topic discussed in class, or at least related to what was discussed in class. I managed to put mine together in two days.

Other things to note when deciding to take this class:
- This class gets extremely light towards the end as the final presentation takes the place of your traditional final and also because the later assignments are much easier. I think the last homework assignment (hackthebox) took me three hours. 
- The instructor is extremely slow on getting you your grades back. In fact, I never got a grade back for my last lab, last write-up, and the final presentation. I had to look at my official transcript to find out what grade I got for this class. ",FA 2019,Yes,CS 419/467 - Software Projects,1,6-12 hours,"This class will only be as hard as you make it out to be. If you feel really passionate about doing a specific project, it's on you to find team mates who are willing to follow you. Do not expect a bunch of random team mates who are forced into your group to share the same passion as you do. Not only is it unrealistic it's unfair.",No,,,,
1/6/2020 11:03:36,CS 352 - Introduction to Usability Engineering,1,6-12 hours,"If you can't choose your own group, pray you get a good one, or at least 1-2 other members who are active and contribute. The course itself is easy but if you have unhelpful/unresponsive group members, you'll be stuck doing more busy work on weekly group assignments.  

For Fall 2019, the class was taught by Jordan Phillips for the first time who apparently took over at the last minute. The material is very easy (skimmed lecture slides and used Google for clarifications I needed), and the exams were not proctored for our term, but some directions on assignments were unclear and class felt unorganized in general. The instructor also was quick to assume some groups were plagiarizing because they worked too far ahead, which was the result of unclear instruction, so try to be careful to only do what is asked of you each week.

Overall, the class is an easy elective but a waste of your money. It may be redesigned by the instructor for upcoming terms, but in general it is not worth it. If you want to take a meaningful elective, look elsewhere.",FA 2019,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Pretty difficult class if you are early on in the program, but may be easier/take less time if you take it later on. Subject material can be tough to wrap your head around and the coding assignments may feel a bit tedious.  Take time to watch lectures and try to keep up with the reading.  Practice problems, quizzes, and summary exercises are very helpful for preparing for the midterm and final. Conceptual and term/definition type of questions were more difficult on exams than the coding portions.  Do EC on assignments if you have the time to, but it is generally not worth stressing over unless you really need the points because you only get 1 point per EC (about 2-3 points available per homework) and they tend to be more difficult or time-consuming.",No,,,,
1/23/2020 7:49:26,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"The first half of the class is more work and harder concepts in my opinion. Tackle the first few weeks and do the additional practice questions. Rework the homework if you do not understand it. Redo the mock and real quizzes. The exams are graded generously, but still require a fair amount of comfort with the concepts. Second half of the class is much less of a slog. Honestly the hardest part of this class was motivating myself to do the work because it is not terribly interesting. ",WI 2019,No,,,,,,,,,
1/27/2020 4:30:45,CS 161 - Intro to Computer Science I,2,0-5 hours,"Since the course is now taught in Python, it's certainly worth getting a head start via any of the free online resources that teach beginner programming, many of which also use Python. The rigor is somewhat uneven, with some weeks requiring very little (<2 hours) work, and some closer to 10. I had experience with programming going into this class and found it easy, but also rewarding.
Side Note: If you've already got some experience, be prepared to write more comments and docstrings than you're used to. Other than that, it should be a breeze.",FA 2019,No,,,,,,,,,
2/10/2020 12:47:38,CS 352 - Introduction to Usability Engineering,3,6-12 hours,"This class is all group work. Be prepared to take a strong leadership role in order to keep your group members on task. The pacing of the course allows for no wiggle room whatsoever. This class has the potential to be interesting IF you get assigned to a good group. Otherwise, this class can be a LOT of work and very, very frustrating.",WI 2020,Yes,CS 344 - Operating Systems,4,13-18 hours,"This class is a lot of work, but it is by far the best in the program. The assignments are clear and the materials are truly there to assist you in completing your projects. The instructor is extremely approachable and knowledgeable. Designate a large amount of time for this class, but have fun taking it! The assignments are really great.",No,,,,
2/11/2020 18:37:09,CS 340 - Introduction to Databases,1,0-5 hours,Start the project as early as possible.,FA 2019,No,,,,,,,,,
2/19/2020 20:11:12,CS 261 - Data Structures,2,6-12 hours,Data Structures Review from YouTube and group work are key to succeeding in the course,FALL 2019,No,,,,,,,,,
2/21/2020 15:24:54,CS 161 - Intro to Computer Science I,1,0-5 hours,"If you have any prior programming experience, you will likely find this course very simple. If you don't, I highly recommend taking Harvard's free online course called CS50; It is much higher quality and more in-depth. It will be harder to complete, but absolutely worth it. 161 is easy, but I worry about how prepared students will actually be for later courses after taking it. Although, I've heard that 162 is easier now that it's been switched to Python, so maybe a slower ramp-up through 161 and 162 is what OSU is going for?",WI 2020,No,,,,,,,,,
2/27/2020 11:31:41,CS 352 - Introduction to Usability Engineering,2,6-12 hours,"I wouldn't believe everything you hear about this course being an easy A... Although the material is extremely easy, the amount of work you will have to do relies entirely upon the group that you get. Again, the material is quite easy, but there is a good amount of work that you have to do week by week. The work involves writing papers and creating a prototype of some sort of application or tool that your group decides upon. When this work is split out among five people, it isn't so bad. BUT, if your group does little to no work, that means A LOT of work rests on you individually. In this class, group members have to be on top of assignments nearly every day because a lot of work completed in one week is dependent on other parts of an assignment. For example, in one week, you have to make changes to a prototype based on user feedback you gathered the week before, make that prototype interactive, test it, and write a paper on it. If you have a group that refuses to look at anything until Saturday (such as was my fortune in the class), this becomes QUITE problematic as clearly everything hinges on the changes made to the prototype. You also can't choose your group. 
Another thing to be warned about is the instructor does not appear to really care about this class either. I took this class because of genuine interest in usability concepts. The assignment specifications are ambiguous, you're forced to write in a specific format and the examples the instructor gives for each assignment don't even adhere to it, links in the course materials are outdated, the materials are riddled with typos and other errors, and the TAs appear to all abide by different grading criteria. This class feels like a very early idea of a usability class that just never got finished. The material is frustratingly easy and entirely disappointing.",WI2019,Yes,CS 344 - Operating Systems,3,6-12 hours,"I would highly recommend taking this class as early in the program as possible. It's--in my opinion--the best class in the entire curriculum and you learn an enormous amount by taking it. Yes, some of the projects are difficult and they require that you actually read through the lectures and readings. But, if you do, you will have all of the tools necessary to complete every assignment. Will the assignments still take a good amount of time? Yes, but you'll have fun completing them. The instructor provides grading scripts to run all of your assignments against, so you will know that you have at least gotten as many points on an assignment that the grading script covers. Some points are still left for grabs to award to styling, commenting, and referencing sources. You are not expected to know everything prior to an assignment, but you are expected to show exactly where you learned different concepts. If you comment nearly every line and reference every Stack Overflow question you looked at, you will have absolutely no problem getting full points on every assignment. Start the projects early, work on them a little bit every day, and you will surely find this course be enjoyable and very well worth your time.",No,,,,
3/5/2020 8:00:07,CS 161 - Intro to Computer Science I,1,0-5 hours,"As everyone has said, take at least a Udemy course on Python before this course. It will overly prepare you to where you'll find this class boring until the small projects at the end. The TAs and professor are all extremely helpful, so even if you come into the class with 0 preparation, you will have a great support system to learn.",WI 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"The actual material you learn in this course is middle of the road in terms of difficulty. I came in with a strong math background, but still had to put in the time to fully understand what was going on. Definitely a course where the more you put in, the more you get out of it. The sheer volume of work in this course is what makes this class truly difficult. The class is very front loaded(quizzes/homeworks/readings are longer at the start). Other people will reiterate this, but stay ahead and on top of this course, at least through the midterm. The TAs and instructors were all incredibly helpful, so utilize them!",No,,,,
3/6/2020 4:27:50,CS 161 - Intro to Computer Science I,1,0-5 hours,Do some quick you tube tutorials on basic coding in any language before the class,FA 2019,No,,,,,,,,,
3/13/2020 0:15:23,CS 325 - Analysis of Algorithms,5,18+ hours,"This class is definitely challenging on the theoretical level and requires you to do a lot of higher level thinking. They're not joking when they say prepare to be wrecked. Take it alone if you can, if you want to have time to intimately understand how the algorithms work. Everyone is saying don't read the book, but I felt that otherwise you wouldn't understand the material on a deeper, theoretical level. For me, really battling my way through the book and understanding what is happening actually made the rest of the class easier since I could comprehend all the moving pieces of the algorithms. The lectures are best as a supplement to the book, it's more of a high-level review of the concepts. Watch them at 2x speed (which will result in them sounding normal, to be honest). Supplemental YouTube videos from Abdul Bari and Tushar Roy definitely help solidify and give examples of certain implementations of algorithms. But don't skip on the reading if you want to understand how/why the algorithms work and how to think like a computer scientist. Also, I recommend reading Grokking Algorithms before taking the course, it's a really short read and can be done in under a week. It also has a few algorithm concepts not covered in 325, and it introduces you to dynamic programming which made that portion of the class a breeze.",FA 2019,No,,,,,,,,,
3/14/2020 11:20:52,CS 325 - Analysis of Algorithms,4,6-12 hours,"In the beginning it was very hard to understand, if your someone like me who has not taken a math class in a while. They throw you right into the homework involving some very math intensive jargon on the starting week. Try to work with others or at least compare answers, to solidify your understanding. Early on in the term my class made a discord, which was VERY helpful as many intelligent peers joined to share their knowledge on how to approach problems, compare answers, asking to meet up and work with others, to study with others for the quizzes, etc. I agree with others here who say that the textbook is not useful, I have only touched the textbook when there would be a homework problem that required us to use the textbook. The lecture and notes seem like they're geared towards teaching prodigies. The lecture and notes are better after you have a general understanding of the concepts. For this type of class, you will find yourself probably using the internet and youtube videos as your fundamental source of learning/studying, and doing the homework.",WI 2020,Yes,CS 271 - Computer Architecture & Assembly Language,2,0-5 hours,"Understand how the conversions work early on (hex,binary,decimal, twos complement). Start early on understanding parity bits, and hamming code error detection/correction, because they're key concepts. Understand register memory operations, such as how the registers change for each instruction, how the stack works and FPU, which are also key concepts in the coding portion of the class. Rest of the topics in the class were easier to understand, but if you can understand these key topics, you should be able to easily obtain an A in this class.",No,,,,
3/14/2020 17:50:13,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"I found the subject matter almost unbearably tedious, but that was through no fault of the course: the quality is high. The lectures are good, the frequent summary exercises are actually really helpful, the expectations and requirements are crystal clear, the tests are fair and the grading is fair. The instructors and TAs were very, very helpful on the forum and Slack. If every course in the program met this same standard of quality, it'd be spectacular. Word of warning: while most of the programs are pretty straight-forward, the sixth program is a huge step up in difficulty from everything before it, so start it early.",WI 2020,No,,,,,,,,,
3/15/2020 14:52:53,CS 362 - Software Engineering II,1,0-5 hours,"Super easy class. I didn't know python and the ""projects"" that you do are all python based. Hardest part of the course was working with PyCharm for me. You get to pick your team for the group project which is a nice and welcome change from 361. Group project can easily be broken into three chunks that each person can work on independent of the others in the group. No proctored exams. Kinda a waste of a course IMO.",WI 2020,No,,,,,,,,,
3/16/2020 11:46:33,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"Start the reading and practice early. Review concepts ahead of taking quizzes. There are lots of text and youtube resources out there, so figure out what learning style works for you and stay on top of it..",WI 2020,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"The class starts out pretty east and ramps up in the second half, so be ready for it. Start reading and assignments early. This course is very well laid out, the textbook and lectures have all the information you need to succeed. There is plenty of information available online too, but if you do all the reading, lectures, and practice questions you will probably do a minimal amount of web supplementing for this course.",No,,,,
3/17/2020 12:14:49,CS 162 - Intro to Computer Science II,3,6-12 hours,"The course was redesigned to Python, and as I understand it it had dropped in difficulty. Weekly programming assignments were not overly difficult, but they were still more difficult than 161. The final portfolio project presents a significant upswing in difficulty, so be prepared to spend much more time on that than your other assignments. Overall it was a good course, most of the quizzes were fairly easy, the majority of what you'll learn will be from what you implement in your assignments. ",WI 2019,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"This course is quite challenging, but I did think that it was very well made. The assignments can be difficult and it's important that you look to the example programs and lectures before tackling them. The lectures are useful, the book is helpful, I only wish that I spent more time actually understanding how everything we learned fits into what we do in other classes as a whole. Try to soak up as much info as you can, because everyone says this is a foundational
class for many others in the program. ",No,,,,
3/19/2020 16:33:12,CS 161 - Intro to Computer Science I,3,13-18 hours,"Take a Udemy course or watch Youtube videos for a great foundation.  You can never get enough practice in programming.  Learn to read code for clarity and understanding.  Simply writing a program only through trial and error will not give you a firm foundation.  If you can read code before executing it and understand what is going to happen you will do very well in this course.  Share your solutions and critique each other's programs for additional practice.  Some of the projects are just a couple lines of code, while others towards the end are 50-100 lines depending on how you design your program.  Sometimes you'll spend a few hours in the week for the module and sometimes you'll spend 15-20 hours.  I've heard that students often have trouble with modules 1-5 or 6-10.  So if you're having a hard time with the first half, then it will likely get clearer for you as you keep going.  The TA's were great and readily available.  Same with the instructors...everybody is eager to help and encouraging. ",Winter 2020,No,,,,,,,,,
3/19/2020 20:52:27,CS 161 - Intro to Computer Science I,1,0-5 hours,"This course is really straightforward, but you have to be willing to put a little effort in. If you have no experience, be prepared to spend some time playing around with concepts and be sure to practice with repl in Canvas. IF you don't spend the time in the beginning , you will struggle with the last 2 projects.",WI 2020,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"This class is essentially a logic class. There is math involved but that is secondary to the logic. Focus on understanding the logic and definitions and then the math portion. This class doesn't use trig or calculus, so basic algebra will suffice (exponents, inequalities, add, sub, div). With that said, you can get the math correct but miss points for incorrect logic so focus on the logic.",No,,,,
3/20/2020 0:41:51,CS 161 - Intro to Computer Science I,2,0-5 hours,"The class is decently easy for assignments 1-8, if you understand programming somewhat. But if you have no software experience be prepared to get wrecked by projects 9 and 10. I was sitting on an almost perfect A, until I got hit with 9 and 10.

The instructors and TA's did well at making themselves available via slack, but some Google Hangouts video chat office hours would have been nice.",WI 2020,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"The structure of this course was terrible, and you waste so time writing in pointless discussions that nobody even cares about. Quizzes were like having a 2 hour midterm every week (a bit much) and there was always a week lag between the quiz you were due and the assignment for that week - would have been much easier to sync them up.",No,,,,
3/20/2020 15:43:14,CS 161 - Intro to Computer Science I,1,0-5 hours,"I had no programming experience and came from a non technical background and spent 1-2 hours per week on the class until the last two assignments, so taking a programming course before this class definitely isn’t needed. The difficulty in assignments was pretty uneven, however. Start those last two assignments early and contact TAs/instructors if you need help. Retake the quizzes if you don’t get a perfect score on them as missing one question on a few quizzes can add up over the term. Group work was easy. ",WI 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,"The concepts in this class weren’t terribly hard, but the class was handled like a complete circus. Quizzes and assignments would take up to two weeks longer to grade than indicated in the syllabus (meaning 3 weeks without grades and going into the midterm/final with heavily weighted assignments still out), TAs offered no feedback on grading decisions, and the lectures and textbooks were mostly useless. Also, the grading was not lenient for me at all. Any slight mistake would guarantee I’d lose the maximum amount of points possible in a question: for example, I lost 5 points for putting “if” and “then” in a proof supposition once. Take MTH 231 or get another discrete math class transferred in. Just don’t take this course. You are quite literally paying $2,000 to teach yourself material and become beholden to the whims of teacher’s assistants. ",No,,,,
3/22/2020 7:15:12,CS 225 - Discrete Structures in Computer Science,3,18+ hours,Stay ahead on all of your coursework.,WI 2020,No,,,,,,,,,
3/22/2020 10:12:52,CS 372 - Intro to Computer Networks,4,6-12 hours,"This is a challenging course and similar to CS 271 in format. Lectures are dense and require your constant attention. Questions on the weekly ""Summary Exercises"" are from both the lectures and textbook. Labs are straight-forward and only take a few hours each. The two projects are focused on sockets and are time-consuming and frustrating if you haven't taken CS 344 yet (like me). The projects are in C, C++, and Python. Don't let yourself fall behind, especially with the projects!",WI 2020,Yes,CS 362 - Software Engineering II,1,0-5 hours,"This was a very easy class. Watching the lectures is mostly a waste of time--you can just look at the lecture notes. You choose your two partners for the group project at the beginning of the quarter but don't work on the project until the last two weeks of the quarter. This class doesn't teach you much, but at least it's a good one to pair with a harder class.",No,,,,
3/22/2020 20:14:56,CS 344 - Operating Systems,5,18+ hours,"I found a few TAs that were helpful and consulted them a lot. It was really hard for me, honestly. My kid kept saying I was ignoring her, but I still managed an A- it’s within reach. The grading scripts help, but it takes a considerable amount of front end work before you get your code to pass any of the script. Just please start coding each project as soon as you can.",WI 2020,No,,,,,,,,,
3/23/2020 13:57:29,CS 162 - Intro to Computer Science II,3,13-18 hours,"I took this class during the quarter it was switched to Python. From what I understand, there used to be weekly programming assignments, a programming lab due every other week, and a group project or two. We only had to do weekly assignments and a few group code reviews. The weekly assignments varied in length. Some weeks they did not take very long, other weeks I spent nearly 20 hours working on them. But definitely not as much as time as this class used to be from speaking to past students. The weekly quizzes were super easy. The final was not though. I think the final took me twice as long as even the hardest weekly assignment. But I also learned a lot during the final. As long as you ask a TA for help when stuck, you'll ace this class. ",WI 2020,No,,,,,,,,,
3/23/2020 22:29:14,CS 325 - Analysis of Algorithms,3,18+ hours,"The textbook OSU uses from MIT assumes a higher math background than what can be obtained from this program. It reads more like a reference book than an instructional device. While the lectures are unpopular, it serves as a better introduction than the book. That being said, the course content is inadequate and outside source use is a necessity. The homework is the type that makes you go ""huh?"" It is time consuming. Despite the challenging course the instructors design the grade scheme to work in your favor. As long as you do the homework and make good exam note sheets it is difficult to fail the course.",WI 2020,No,,,,,,,,,
3/25/2020 16:35:53,CS 325 - Analysis of Algorithms,4,13-18 hours,"Get Chegg. Subscribe to Abdul Bari on YouTube. Get friends in the course that can help you with the studying. It was broken up into 3 quizzes, like 5 homeworks, and a final group project. Schutfort was not very helpful when it came to answering questions, which is why you must rely on reading the slides at home yourself, as well as referring to outside resources.",Winter 2020,Yes,CS 362 - Software Engineering II,2,0-5 hours,"Get a good group as it was a term long project with you and 3 others. The content itself is not very difficult but it is more of having to do the work. A lot of writing, and thinking about what the instructor wants on the assignment, as opposed to anything technical. The whole class revolves around testing an already created project online, and doing things to test the code.",No,,,,
3/26/2020 9:40:56,CS 162 - Intro to Computer Science II,2,13-18 hours,"If you read nothing else: Take Tim Buchalka's ""Learn Python Programming Masterclass"" on Udemy. Get at least 40% through it before starting 161 and you will find 162 to be much easier compared to students who go into 162 armed only with what they learned in 161. Other than that, start your projects early, ESPECIALLY the Portfolio Project at the end. Know how to debug effectively and get very good at using online resources like Python documentation and StackExchange.",WI 2020,Yes,CS 271 - Computer Architecture & Assembly Language,2,13-18 hours,"The book is actually pretty helpful to be honest. This class just scratches the surface of x86 assembly. Before starting, Learn how to debug in VS and get acquainted with the MASM compiler that is used to compile x86 assembly into executables. This class will make you bang your head against the wall toward the end as the projects grow in size. The best advice I can give for that is start every project early and ALWAYS attempt the extra credit when it is given. Resources online for x86 are definitely lacking so prepare yourself to do a lot of guessing/checking when it comes to writing programs. Redfield was a pretty good professor and was very active on Slack with the students.",No,,,,
3/26/2020 16:50:41,CS 361 - Software Engineering I,1,0-5 hours,"This quarter was the first time with the course redone. Entire class is a group project of 6. Hold weekly meetings, clearly divide work among classmates. DON'T forget to do the weekly guided reflections AND the 3x/week group check in. DO the practice exams. Handle these things and you'll be in great shape.",WI 2020,Yes,CS 340 - Introduction to Databases,3,0-5 hours,"Initial weeks can be difficult, but it evens out once you understand the difference between ERD's & Schema's. Most of the points are a group project of 2. I took most of the workload because I didn't have great chemistry with my partner and they didn't take much initiative. It wasn't bad. Professor provides starter code to get a website & database up with both Python + Flask framework & Javascript + Node.js. I highly recommend Python/Flask  as it's so incredibly straightforward. Stick to the starter code & lecture walkthroughs and it pretty much shows you how to do the project. You can get a lot out of this course, but you have to put in the work.",Yes,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,Best structured class in the program by far. The book is super dense but is well worth the read. To do well you really need to read the book well. Assembly was a bit like learning how to program all over again for me. It takes practice so you can't mail in the programming assignments. The last 2 programs took forever so start early no joke. There was an announcement which stated severe consequences for students caught plagiarising and there were several cases found that term. Exams were challenging but doable. DO ALL the Summary Exercises & Quizzes & Practice Problems and you'll be good for the midterm/final. Thanks COVID for bailing me out of that final lol.
4/8/2020 10:18:50,CS 344 - Operating Systems,3,13-18 hours,,FA 2019,No,,,,,,,,,
4/16/2020 8:08:25,CS 161 - Intro to Computer Science I,1,0-5 hours,"If you have time before you start at OSU, take the MIT Introduction to Computer Science and Programming Using Python course on EDX. It is free and will prepare you not just for 161 but also 162. ",WI 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"Brush up on Algebra before this course. Especially exponent rules. Also, get familiar with using LATEX to write mathematical symbols on Microsoft Word. Other than that, be prepared to use the book... a lot. You will need to comb through the book and pay attention to the nitty gritty details that are covered in each section. The lectures are OK but don't provide enough detail and rigor that are required for the quizzes/exams. Do lots of practice problems, go to outside resources for help, and you'll be fine. But be prepared to spend a lot of time on this course. If you have any experience with Python, you should pair this course with 161, as 161 will likely be a breeze if you have experience. My first quarter I took 225 and 161 and probably 90% of my studying time was devoted to 225.",No,,,,
4/18/2020 14:21:13,CS 161 - Intro to Computer Science I,2,0-5 hours,"It was very helpful to get a “jump” on the course by starting Codecademy’s python course beforehand. I spent a week or two before class started delving into the Codecademy course, and it really helped. ",WI 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,Actually took MTH 231 - and my biggest tip is to study the proofs the professor provides & to read the book. I often found the book to be much easier to understand than professor notes. ,No,,,,
4/22/2020 11:36:03,CS 161 - Intro to Computer Science I,2,0-5 hours,"I went into this class with no prior CS experience, and it was my first class at OSU. If I could do it differently, I would have taken it at a comm. college to save money (you can transfer up to 12 credits). I thought the class was very easy in the beginning, and then difficulty just ramped up towards the end. Other students have commented before that it really depends on the TA you get, and I completely agree. I had a TA who docked me for tiny formatting things, largely based on preference. When we worked in a group, other students in this class shared that this wasn't their experience at all (confirming that difficulty depends partially on TA). However, because it was my first class, I felt like I learned a lot. ",Su 2019,No,,,,,,,,,
4/22/2020 11:43:21,CS 290 - Web Development,1,6-12 hours,"I went into this program with 0 prior CS expereince. After taking 161 and 162, I ended up in this class because I felt I was struggling in this program, and the advisor I spoke to said this was one of the easiest classes. I have to agree with her assessment. For people who have prior web dev experience, I could tell it was a REALLY easy class. The best thing about this class are that the book is OER, so you don't have to pay. I bought the Colt Steele Web Dev Bootcamp on Udemy since it was recommended by redditors (don't pay more than $11 for it - if you see it listed at a higher price than that, try using incognito mode or switching to a diff device). The bootcamp was helpful in the beginning of the course, but the second half is all about node.js, and that's where I struggled. I think this can be a really fun class. You have lots of room to be creative with the final project. For the final project, you have to make your own website. I saw examples that looked like they could have been made in the 1st week of classes, and ones that looked extremely well-put together. ",WI 2020,No,,,,,,,,,
5/6/2020 13:03:00,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"This class will come as a surprise if you're used to just driving in and getting all the code done. This class actually makes you study. Read the textbook, or at the very least, watch the lectures. Taking the time to learn all the conversions and definitions taught in the first couple weeks will make the rest of the class a breeze.",WI 2020,No,,,,,,,,,
5/6/2020 21:56:55,CS 161 - Intro to Computer Science I,1,0-5 hours,,WI 2020,No,,,,,,,,,
5/11/2020 10:45:22,CS 161 - Intro to Computer Science I,1,0-5 hours,Fairly straight forward class. I have an accounting background and was able to succeed in this class. My advice would be to not procrastinate. ,WI2020,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"I was able to get an A in this class. Review every HW and quiz in preparation for the Tests. There are excellent videos on YouTube. Any subjects I had questions about, I would check on YT. The lectures were not that useful.",No,,,,
5/14/2020 19:23:49,CS 162 - Intro to Computer Science II,2,6-12 hours,"Start early if you can, but mostly enjoy the instruction and the assignments.   

This class is no longer the intense destroyer that C++ 162 was.  Instead, the structure is very similar to 161's structure: a lesson page or two with examples and interactive practice exercises, and a video in which Alcon goes over the same ideas on his computer.  (Pretty sure Alcon did all the 161/162 videos in a day or two sprint, so it's fun to watch the light change in his office over the course of the modules.)

The topics are well organized, and the assignments are generally fair.  When I took it, the assignments for weeks 2 and 3 caught some people off guard with their complexity, but then the length of the assignments went down again until the end.  I felt that a couple of the assignments were a bit more tricky than useful for the topic at hand, but my puzzling brain also enjoyed those challenges.

The final project (the portfolio project) was a large step up in complexity from the prior weeks.  That said, it also seemed entirely fair as I was working on it.

This quarter there was a bit of chaos in the beginning, as the TAs weren't properly assigned until the week 2 assignment was due.  Given the increased depth of that week 2 assignment, the situation left a nasty taste in some students' mouths.  That said, the TAs and one of the two instructors were very engaged the rest of the term.  Hopefully that was a one-time logistics hiccup that won't replicate itself in future quarters.

I would have enjoyed a harder course, but I also know many of my classmates would not agree with that assessment.",WI 2020,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"This course covers two general things:  CISC (intel-style) computer chip hardware and MASM assembly language programming.

The instructor is engaged and is generally helpful.  The course materials are quite old, but they were clearly made and revised by masters.  This is the best organized course I have taken in a very very long time.

Each week/module consists of a textbook reading and lecture videos  to watch.  To help ensure understanding, each module comes with a Weekly Summary, which is a 6-hour Canvas quiz that we were allowed to take twice (keeping the highest score).  Don't let that 6-hour time scare you: the instructor says the time limit is designed for any necessary napping and dog walking during the quiz.  Each Weekly Summary attempt took me about 1-1.5 hours of active participation.  The Weekly Summaries are open book, open video, open internet and open Slack/Piazza discussion.  They're also only worth 1% of your grade each, so the intent is truly to help encourage you to work through the finer details.  The grade issue is secondary.

There are also 5 quizzes during the term.  These quizzes were 1 hour each, and they were similar in questioning to the Weekly Summaries.  The quizzes were open book only (no internet, no friends or Slack), and they counted for more of the grade.  The quizzes were quite fair overall, and I have never squealed for joy upon getting 7/7 like I did on that first quiz in 271.

There are generally a midterm and final exam.  Our quarter, the final exam became optional.  I actually would have enjoyed taking the final exam, but getting my money back from ProctorU instead was a bigger draw. :)  The midterm was generally fair, but there were a few questions that made me scratch my head as unfamiliar.  It was a bit disappointing to not receive details back on which questions were correct or incorrect on the midterm, but such is life I suppose.  There is one page of notes allowed on the midterm and final exam -- part of the fun of being in this class is noticing exactly how much one can fit on a page of notes when one is really, really trying.  :)

The class also has 5 or 6 programs to do.  These can be deceiving.  Start them as early as possible, especially the last half of the quarter.  Programming in MASM is a strange existence where one is moving fluidly and typing furiously while actually accomplishing very little.  You will perhaps scoff at the program specs when you first read the assignments.  You will regret any such scoffing.  You will definitely leave the course impressed that anyone ever got a computer to accomplish anything useful.

The textbook is absolutely essential, and an electronic copy is very useful.  Find a PDF or hold your nose and rent an ebook.  It's worth it, and that cost is nothing compared to the course cost.

Finally, you will have to program in Windows, using Visual Studio.  You can do this via emulation, so you won't have to give up your precious pretty Mac or your bearded Linux box.",Yes,CS 419/467 - Software Projects,1,18+ hours,"This was the 419 course offered Winter 2020, not 467.  It was horrible.  Pure trash and frustration.  The instructor seemed nice enough, but all the design choices and most instructor answers were simply no good.  It appears that OSU will no longer offer this course.  That's a good thing."
5/14/2020 19:24:19,CS 162 - Intro to Computer Science II,2,6-12 hours,"Start early if you can, but mostly enjoy the instruction and the assignments.   

This class is no longer the intense destroyer that C++ 162 was.  Instead, the structure is very similar to 161's structure: a lesson page or two with examples and interactive practice exercises, and a video in which Alcon goes over the same ideas on his computer.  (Pretty sure Alcon did all the 161/162 videos in a day or two sprint, so it's fun to watch the light change in his office over the course of the modules.)

The topics are well organized, and the assignments are generally fair.  When I took it, the assignments for weeks 2 and 3 caught some people off guard with their complexity, but then the length of the assignments went down again until the end.  I felt that a couple of the assignments were a bit more tricky than useful for the topic at hand, but my puzzling brain also enjoyed those challenges.

The final project (the portfolio project) was a large step up in complexity from the prior weeks.  That said, it also seemed entirely fair as I was working on it.

This quarter there was a bit of chaos in the beginning, as the TAs weren't properly assigned until the week 2 assignment was due.  Given the increased depth of that week 2 assignment, the situation left a nasty taste in some students' mouths.  That said, the TAs and one of the two instructors were very engaged the rest of the term.  Hopefully that was a one-time logistics hiccup that won't replicate itself in future quarters.

I would have enjoyed a harder course, but I also know many of my classmates would not agree with that assessment.",WI 2020,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"This course covers two general things:  CISC (intel-style) computer chip hardware and MASM assembly language programming.

The instructor is engaged and is generally helpful.  The course materials are quite old, but they were clearly made and revised by masters.  This is the best organized course I have taken in a very very long time.

Each week/module consists of a textbook reading and lecture videos  to watch.  To help ensure understanding, each module comes with a Weekly Summary, which is a 6-hour Canvas quiz that we were allowed to take twice (keeping the highest score).  Don't let that 6-hour time scare you: the instructor says the time limit is designed for any necessary napping and dog walking during the quiz.  Each Weekly Summary attempt took me about 1-1.5 hours of active participation.  The Weekly Summaries are open book, open video, open internet and open Slack/Piazza discussion.  They're also only worth 1% of your grade each, so the intent is truly to help encourage you to work through the finer details.  The grade issue is secondary.

There are also 5 quizzes during the term.  These quizzes were 1 hour each, and they were similar in questioning to the Weekly Summaries.  The quizzes were open book only (no internet, no friends or Slack), and they counted for more of the grade.  The quizzes were quite fair overall, and I have never squealed for joy upon getting 7/7 like I did on that first quiz in 271.

There are generally a midterm and final exam.  Our quarter, the final exam became optional.  I actually would have enjoyed taking the final exam, but getting my money back from ProctorU instead was a bigger draw. :)  The midterm was generally fair, but there were a few questions that made me scratch my head as unfamiliar.  It was a bit disappointing to not receive details back on which questions were correct or incorrect on the midterm, but such is life I suppose.  There is one page of notes allowed on the midterm and final exam -- part of the fun of being in this class is noticing exactly how much one can fit on a page of notes when one is really, really trying.  :)

The class also has 5 or 6 programs to do.  These can be deceiving.  Start them as early as possible, especially the last half of the quarter.  Programming in MASM is a strange existence where one is moving fluidly and typing furiously while actually accomplishing very little.  You will perhaps scoff at the program specs when you first read the assignments.  You will regret any such scoffing.  You will definitely leave the course impressed that anyone ever got a computer to accomplish anything useful.

The textbook is absolutely essential, and an electronic copy is very useful.  Find a PDF or hold your nose and rent an ebook.  It's worth it, and that cost is nothing compared to the course cost.

Finally, you will have to program in Windows, using Visual Studio.  You can do this via emulation, so you won't have to give up your precious pretty Mac or your bearded Linux box.",Yes,CS 419/467 - Software Projects,1,18+ hours,"This was the 419 course offered Winter 2020, not 467.  It was horrible.  Pure trash and frustration.  The instructor seemed nice enough, but all the design choices and most instructor answers were simply no good.  It appears that OSU will no longer offer this course.  That's a good thing."
6/9/2020 16:06:14,CS 161 - Intro to Computer Science I,1,0-5 hours,"Most modules can be completed in one day. If you don't have any programming experience, it may be better to spread out the material or assignments throughout the week so you don't forget what you've learned. The last two projects are larger so don't procrastinate. ",SP 2020,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"The class is just a huge time-sink. Having taken or done previous math classes will most likely not help you. It's not hard to get a good grade, but it does take a lot of time to get through the required materials, any outside sources to fill any gaps you may have, the assignments, and the weekly 2 hour quizzes. This quarter had the benefit of no midterm and no final and it still stressed me out getting through everything each week. ",No,,,,
6/10/2020 11:33:23,CS 290 - Web Development,3,13-18 hours,"Worst required class yet in the program.  But I didn't feel it bad for the same reasons I see commonly posted here.  The lesson pages and videos are definitely weak, somewhat disorganized, and typo-ridden.  But I did find them sufficient for learning the core materials.  I enjoyed the last assignment.  It brought much of the course together, in a way that was challenging but doable.

The ""project"" is done about 2/3 of the way through the course.  It's... meh.  It's kind of a CSS showcase, since the required JavaScript is so minimal.  There's an extra credit option for the best projects, which mainly highlights the work of many who are already full-time web devs.  Kinda stupid, but whatever.

The final exam is where this class really crashes and burns.  There are no assessments during the course, and the final exam at the end is a mix of good questions, JavaScript oddities, and strange coding questions.  Since JavaScript syntax was not an emphasis of the course during the semester, one is not naturally attuned to be on the lookout for such issues during the exam.  My ""favorite"" part was the exam instructions that told us to assume all typos didn't exist....and then many of the questions or answer options were about different error options.

One of the instructors is basically absent.  The other is smug and unhelpful.  The TAs can be nice and helpful though.",SP 2020,Yes,CS 261 - Data Structures,1,0-5 hours,"New redesign, in an intentionally easier quarter due to COVID issues.  Light workload.  Light lesson modules.  I'm honestly not sure how much I learned.  I think/hope enough?  I made Gradescope happy, which seems to have been important on each assignment.

The instructors and TAs are present and helpful.  That's nice, and it's not true in some other courses.",No,,,,
6/10/2020 16:37:46,CS 493 - Cloud Application Development,1,0-5 hours,"This course was one of the best I've taken from OSU. The class is well administered, the assignments have clear requirements, and the professors and TA's were active on Piazza and Slack. A couple of the assignments, including the final, had a lot of busy work. Other than that the topics were very helpful and have direct real-world impacts. ",SP 2020,Yes,CS 361 - Software Engineering I,1,6-12 hours,This class consists of a project in a group of 5 students while learning about software delivery life cycles and software design. The course material is a good introduction and contains a lot of good reading references to external sources. The project helps to reinforce these concepts with tasks related to those concepts interwoven between the normal weekly work. ,No,,,,
6/10/2020 16:51:22,CS 290 - Web Development,4,6-12 hours,"Do not get comfortable with the easy pace in the beginning. The last 3 weeks are extremely challenging. It was 4-6 hours of work a week until the last 3 weeks, and then I was doing 30+ hours a week to keep up the A. In the last few weeks you get two of the most difficult homework assignments, where everything comes together, as well as the final project and test preparation. As others have said, the test is garbage. I prepped a lot and was still caught mostly off guard. Get an A on all assignments and you should be ok going into the exam.",SP 2020,Yes,CS 261 - Data Structures,1,6-12 hours,"This class was surprisingly easy for me. Due to covid-19 the worksheets and exams were dropped for the semester, so maybe that played a big role.",No,,,,
6/10/2020 22:28:10,CS 475 - Intro to Parallel Programming,1,6-12 hours,,SP 2020,Yes,CS 362 - Software Engineering II,1,0-5 hours,,No,,,,
6/11/2020 4:42:16,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,"All in all, I think this was an excellent course. The material was really complex for me, having only 161/2 under my belt, but it's  really beneficial as you're learning how and why things work the way they do in the background of high-level languages.  The programming assignments are easy at first and get progressively difficult, especially once you're required to use the system stack for procedures. But once you learn how / why this is done, it brings your understanding to a higher level.  I would recommend doing as many of the extra credit points as possible, especially on the early, simpler programs.  I loved the programming aspect of the class but really disliked the quizzes and exams.  I found them to be largely just ...tricky.  Compared with 162, the portfolio project was more doable.  Difficult, but doable.  Start as early as possible on programming assignments, get help when needed, and they'll boost your grade--you'll need those points going into the exams.  The workload was disproportionally high compared to 261, leading to my sometimes having to neglect that class to do well in 271. ",SP 2020,Yes,CS 261 - Data Structures,2,6-12 hours,"I think the class was probably easier than normal this quarter, as the grade was based entirely on 4 programming assignments of about 25% each.  I had no programming experience prior to 161/2, but I found these assignments to be really doable.  All gradescope tests are visible when you submit an assignment, so you know exactly what you need to fix, and help is readily available.  Again, with minimal programming experience, I was able to finish the class with about 98%.  The portfolio project took me about 10-12 hours to get a 100%, whereas the 162 project took probably 60+ hours to come out with about a 73%. I think that speaks to both the relative difficulty of 162, and the relative easiness of these assignments!  I feel like I did grow through this class, but I still have a TON to learn about data structures.  Taking 271 simultaneously definitely required that I spend the vast majority of my time on 271.  ",No,,,,
6/11/2020 5:39:24,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"Start early on the Programs! Some of these can get tricky, and there's not really any shortcuts. For the midterm and final, studying past quizzes/homework should suffice. This class, and program 6 in particular, was very difficult, but very rewarding!",SP 2020,No,,,,,,,,,
6/11/2020 18:53:01,CS 290 - Web Development,2,6-12 hours,"Do some form of preparation before coming into this class. For me, I took Colt Steele's Web Developer Bootcamp on Udemy and I felt like that was sufficient. There are other great courses out there too. If you have a good foundation of HTML/CSS/JS and understand front-end and back-end technologies, you will likely be OK. The flow of this class darts all over the place and if you try to take this class with no prior knowledge, you will hate life, surely. The class ramps incredibly fast, starting with a basic HTML page in Week 2, jumping to advanced JS concepts by Week 5, to Sessions and Databases at the end. Assignments are manageable if you use the allotted time to complete them. You will not come out of this knowing everything there is to know about Web Dev. You get a taste. Focus on doing really well on all the small homework assignments and the project. The final exam will throw questions out of left field at you and even though I had a 99 going into the final, I am certain that will be pared down a bit after the final. ",SP 2020,Yes,CS 261 - Data Structures,2,6-12 hours,"This class covered Dynamic Arrays, Linked Lists, Queues, Trees and Hashmaps. The explorations covered other data structures but there were no assignments to reinforce the concepts so I just skipped them. Graphs and AVL trees were mentioned but not covered in any rigorous way. To be honest, a solid foundation in Python helps the most in this class. If you did well in 161/162, you are going to be well positioned to make this class your back burner class. No book, no exams, so its pretty much a gimme if you do the work and double check your submissions.",No,,,,
6/12/2020 9:32:47,CS 261 - Data Structures,1,0-5 hours,"Pretty easy course--partly because of COVID and what I'm guessing is a reduced workload, but also because it is just so straightforward to implement this stuff in Python. There was such a big gap between modules that I sometimes forgot I was even in this class--I really wish I'd taken a second course with this. I didn't think the open source online text was very good, but there are lots of YouTube videos out there to supplement things for you.",SU 2020,No,,,,,,,,,
6/16/2020 7:36:34,CS 362 - Software Engineering II,2,6-12 hours,"I took this course the first semester that it was redesigned. I really enjoyed it and felt like I learned a lot of useful skills. My only critique is that there could have been much more content because overall, the class was light. This would be a great class to take alongside a more challenging course.
My biggest advice is to read all of the explorations. They give you all of the tools necessary to complete assignments and prepare you for quizzes and the final exam. 
The coursework is overall pretty easy (if you finish the explorations), but also useful. The instructor uses gradescope, which is a huge aide in completing assignments.
There is a group project at the end of the semester that is simply an opportunity to utilize and practice the testing skills learned throughout the semester. If you have a good group, it's a breeze.",SP 2020,Yes,CS 464 - Open Source Software,1,0-5 hours,"You get out what you put into this course. I took it the first semester after it was redesigned and really really enjoyed it. I took it alongside 362 which was really, really great. All of the testing skills learned in 362 are learned at exactly the same rate that you would utilize them in 464.
Hannah Scott was the instructor when I took it and she is phenomenal. She's engaged and is very responsive to students. She's always positive and seems to really care about the well being and success of her students. I always take courses with her if I can.
464 involves working with real open source projects. I stuck with one project the whole semester, but you don't have to. The course material more then prepares you for the assignments, so if you read them, the assignments can be very easy. I say ""can"" because you could probably scrape by doing very little work and still get an A in this class. I would encourage you to challenge yourself in this class and really try and do some real world work on an open source project; the class provides a safe space to try out new skills that could ultimately be a portfolio project for you. 
I know reviews of this class in past semesters were less than stellar, but the redesign made it a class I really enjoyed. It was one of the best experiences I've had in this program, and I'd encourage anybody interested in open source to take it (alongside , 362 if you can).",No,,,,
6/16/2020 10:14:00,CS 161 - Intro to Computer Science I,2,0-5 hours,,SP 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,took the math version of this course. The exams are completely unreasonable and wrecked my otherwise fine grade. Take the CS version if at all possible ,No,,,,
6/16/2020 15:54:52,CS 372 - Intro to Computer Networks,4,18+ hours,"I suggest setting a schedule and sticking to it.  There is a continuous, decent amount of work in this course that is made more enjoyable by breaking it down into parts each week.  The TA's are a great resource, so use them if you have questions.  Also, the professor makes himself available to students on Slack, which is great.  Take the weekly summary tests twice if you can, as it will help you on the midterm and final.  Also, start writing your programs early, they are hard after the first one.  This class is full of great information.  ",SP 2020,No,,,,,,,,,
6/16/2020 19:58:20,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,,SP 2020,No,,,,,,,,,
6/17/2020 9:57:33,CS 225 - Discrete Structures in Computer Science,5,6-12 hours,"Do not take the Math version of this course. The class average on both the mid term and final were in the high 50s. The professor informed us that between the notes, homework, quizzes, and practice tests that we should be well prepared for the tests, but this was not the case. In fact, the provided work was not nearly enough and I suspect that those who did well (B and higher) probably spent a ton of time going through the textbook that was supposedly not needed. While it sounds like the CS version has a lot more required work, it also probably prepares you better overall for the mid term and final, which weigh heavily on your final grade.",SP 2020,No,,,,,,,,,
6/18/2020 14:55:49,CS 372 - Intro to Computer Networks,3,6-12 hours,"A lot of busy work. You have a weekly exercise assignment and either a lab or project due every week. There is a midterm and final. The midterm is straightforward and the final is abstract(multiple choice and a little fill in). I mainly focus used on the summary exercises course modules and did well. The material is pretty wide and vast for a introductory course, so it can be overwhelming. Time management is key for this class and will either make or break you. Project 2 will catch you for a surprise, so be prepared. ",SP 2020,Yes,CS 464 - Open Source Software,1,0-5 hours,The hardest part is picking a project without a doubt. Just find something you like to dive into and can actually pull to work on. You should start thinking a head of time on how to properly contribute. The class does not hold your hand onto teaching you the material. But rather checks to make sure you are doing it. Also have realistic goals and proper time frame of things! ,No,,,,
6/18/2020 16:17:30,CS 372 - Intro to Computer Networks,3,6-12 hours,"Try to get something out of the weekly summary and use sample math problems to build your exam ""one sheets""",SP 2020,No,,,,,,,,,
6/18/2020 20:13:01,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"This is a challenging course. The beginning is filled with lots of reading, although the beginning projects are easy, learning such a low level language do make them rather difficult to get a hang of. Once your figure things out though, it does get easier. My advice would be to make sure you understand the beginning material and exactly what’s happening cause exam questions can be tricky and require you to know a lot for just a multiple choice question.",SP 2020,Yes,CS 261 - Data Structures,1,6-12 hours,"No exams I’m pretty sure because of covid? But overall the course was easy, assignments weren’t bad given a skeleton for each one.",No,,,,
6/19/2020 13:20:49,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"I agree with the other reviews but wanted to add one piece of advice: Get a calculator that can add hexadecimal numbers and convert between hex/binary/decimal (the standard calculator app on Windows has a mode called ""programmer"" that has these features). Then, ask the instructor if you can use that calculator for the midterm/final. A ton of the questions on the midterm and final really come down to being able to convert between number systems and add hex numbers. I'm not 100% sure they'll let you use it, but I think there is a good chance and it is definitely worth asking. You still need to know the material to do well on the exams but the calculator will be invaluable for quickly getting through the questions... adding hex numbers by hand is time-consuming and a pain in the you know what.",SP 2020,Yes,CS 162 - Intro to Computer Science II,3,6-12 hours,"This class is easier now than in the past when it was taught in C++, but that doesn't mean you can skate through it. Some of the programming assignments have very detailed requirements and take a lot of time to sort through. As mentioned in other reviews, the portfolio project is a doozy. There is a heavy emphasis on object-oriented programming, so watch some youtube tutorials on Python OOP if you want a leg up.",No,,,,
6/22/2020 19:09:45,CS 225 - Discrete Structures in Computer Science,5,13-18 hours,"Actually took MTH 231 which is an equivalent class, but be warned it's very different from CS 225. If possible, take CS 225. At least it adequately prepares you for the exams. I suspect enough people failed the class so that there was a curve. There should have been way more work assigned to practice and review proofs.",SP 2020,Yes,CS 161 - Intro to Computer Science I,3,13-18 hours,"Be sure to start the assignments early because you WILL run into issues along the way especially if you are completely new to programming, or suck at technical computer stuff! Otherwise this is a very manageable course. ",No,,,,
6/22/2020 20:16:28,CS 290 - Web Development,4,18+ hours,"Understand the material, don't imitate. Brute-force various tutorials, textbooks, etc., and find the ones that explain the concepts well. Be prepared to waste your time on extensive trial-and-error. The class is putting high demands on a student's time, unfortunately. It is fun, but you pay for the fun with long wasted hours. ",SP 2020,Yes,CS 261 - Data Structures,3,6-12 hours,"I'd either pair it with UC San Diego 'Data Structures and Algorithms specialization' or get a 'Data Structures and Algorithms in Python' textbook ( Goodrich, Tamassia, Goldwasser). Maybe both. If you are not interested in extracurricular activities, the homework guides are sufficient unless you overthink. You decide how hard you'd want to work and how much you'd want to get out of the class. ",No,,,,
6/23/2020 9:09:22,CS 325 - Analysis of Algorithms,4,13-18 hours,"This semester was a bit different (Spring 2020). Because of the pandemic, none of the tests were proctored. Also, I believe this is only the 2nd term since the course was redesigned. This time around, there were no issues with missing materials and the class was overall pretty organized. I personally found the lectures to be helpful despite what most people said about them. I watched them on 2x speed, followed along with the provided pdf notes, and added additional notes for my own personal use (mostly about how a topic related to another or was used in the homework). I had a hard time relying on outside resources because there are many different notations, terms, and overlapping topics so it was annoying to figure out which video corresponded to which part of the lecture we were supposed to learn. It was easier to just go straight to the source (the 325 lectures) because  I knew the exams, quizzes, and homework material would be pulled from those along with the book occasionally. I used the book as a reference to see examples mentioned in the lectures or on the homework. That's it. Definitely did not sit down to try to read through those dense chapters. It's graduate level stuff. I would recommend that each week, you add the important formulas, definitions, and pseudocode to a document that can then be used to build your cheat sheet for the exams. And practice practice practice the homework and study questions for exams (using your cheat sheet). The midterm was harder than the final because the first half's material is more complicated. If you do decently on the midterm, odds are you'll be fine for the rest of the course.",SP 2020,Yes,CS 361 - Software Engineering I,1,6-12 hours,"Your group is everything with this class. They allowed us to choose our own groups which is great if you know other students already who are hard workers. But if you don't know anyone, I recommend signing up for a group as EARLY as possible. Because you will choose from a pool of people who are also being proactive which I have found to be a good indicator of how they will behave during the term. We were given a list of project ideas and asked to choose from them so you could also choose your group based on interest in a project but again, I'd recommend to choose mostly on who is proactive and early to sign up. As a group, you can decide how ambitious you'd like to be but even if you do the bare minimum, I found that you can still come away with a pretty impressive project for your portfolio. Each week there were unproctored quizzes based on the reading and you could retake them as many times as you liked (highest score kept). The reading was easy most weeks and majorly dense a couple of weeks (they recommended to skim the reading on those weeks). It was actually helpful to learn about Agile and Software design etc. Those are things that are usually mentioned in interviews so it's good to actually about them now. The grading was super lenient. Basically if you and your group actually work together, it is super easy.",No,,,,
6/23/2020 16:29:48,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,It is useful to put some time investment early in the class as there are many concepts to absorb initially. The exams pull from weekly summaries and lecture exercises so there is nothing strange. The assignments are easy but debugging in the later assignments can be time consuming. While the content was interesting the lesson material was a bit boring. I am sure I will not do hexadecimal conversions regularly in the future. Pay attention to signed/unsigned.,WI 20,No,,,,,,,,,
6/23/2020 23:53:59,CS 344 - Operating Systems,5,18+ hours,"Start the projects ASAP. like no joke. And go over some C stuff if you have time to begin with. Literally the first day start looking at the videos and read over the project to you have an idea of what to pay attention too. A lot of the lectures you can glean some base code from, but I had to do a lot of Googling/research to finish a lot of them. Take advantage of the TAs, honestly the best communication in the whole program for me so far. It was hella rough though. I feel like I did learn a lot regardless. I did not enjoy this class, but it is one of the better ones I feel like. It's just hard is all. The final is open note and not TOO bad. Have flip open on the side to test code. Otherwise, the key to this class like pretty much everyone has said is to manage your time well.",SP 2020,Yes,CS 475 - Intro to Parallel Programming,1,6-12 hours,"One of the better courses in the program. The professor gives most of the code, you just literally have to do the parallel parts usually. The professor truly feels like he cares, and it is nice to see. One time I was having trouble and posted on Piazza and he PERSONALLY emailed me to look at my code. That has never happened this whole program! Definitely recommend. And the subject isn't bad!",No,,,,
6/25/2020 6:18:17,CS 161 - Intro to Computer Science I,1,0-5 hours,"Very easy class if you're familiar with coding already. If not, it's a gentle and fair introduction, and should still not take up much of your time. The concepts are explained quite well and you are given plenty of exercises to work through to solidify those concepts.",SP 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"This class is the pinnacle of busy work. Textbook does a very poor job of explaining a lot of the material and the professor is equally terrible at explaining anything. Expect this class to be a huge time sink due to how it is designed. Every week you have a 1.5-2 hour quiz, so effectively every week is a midterm, although the worst 2 quiz scores are dropped and quizzes only count for 30% of your grade. This was during COVID, so this may change. Lean as much on the TAs as you can. They will be a lifesaver for you in this class!",No,,,,
6/27/2020 8:19:36,CS 475 - Intro to Parallel Programming,2,0-5 hours,"C skills and Bash scripting make this course much easier, but this is reviewed in the course at the beginning if you are rusty.  The professor's lectures are probably some of the best in helping you to understand the material, and you don't need to use any resources besides what he provides.  The professor is very engaged with the students, and was by far my favorite in the program.  Taking this course will help you write high performance code even when not in parallel, so I would highly recommend it.  ",SP 2020,No,,,,,,,,,
6/27/2020 10:17:16,CS 161 - Intro to Computer Science I,3,6-12 hours,"I found the book ""Python Crash Course"" very helpful. I read the sections reviewing the topics that were being covered on Canvas for that week. ",Winter 2020,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"For the problems that were due each week, also do all of the related problems in the book as well. For the midterm and final, keep doing each of these problems until you can easily finish them. ",No,,,,
6/27/2020 10:31:36,CS 162 - Intro to Computer Science II,4,18+ hours,"This class is significantly harder than 161. You go from writing a few lines of code per week, to 200+ lines. You are given 2 weeks to complete the final project, which I believe changes each term. When I took it, we had to code a game called ""Gess,"" which is a cross between ""Chess"" and ""Go."" Start this project as soon as it opens. I had nearly 1,000 lines of code by the end.",Spring 2020,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"The first several weeks of this class were not too difficult. The first 4 programs are not very complicated, and the midterm was fine. I just re-did the weekly summary questions and quizzes over and over, and put example problems on my ""cheat sheet."" BUT...after the midterm is when I found the class to take a turn in the level of difficulty. Programs 5 and 6 were very time-consuming, as you now have to work with the stack and pointers. Start as early as possible on these. Also, I found the final to be much more difficult than the midterm. Make sure you know about memory addresses, the different addressing modes, and how they change after different parts of a program are executed.",No,,,,
7/1/2020 11:22:33,CS 362 - Software Engineering II,2,0-5 hours,"I took the on campus version of this course in Spring 2020, which made for a very unique experience due to the pandemic. I found it hard to stay motivated as it can be hard to see the real applicable benefit of most of the course content, but it was still overall a good course and helps to understand some of the concepts behind team planning, testing, and software business. Just watch the lectures, don't take the content for granted, and you'll do just fine in this course.",SP 2020,No,,,,,,,,,
7/14/2020 5:51:34,CS 162 - Intro to Computer Science II,3,6-12 hours,"I used the low end of 6-12 hrs for this class; 1-1.5 hrs to watch the lectures and do reading and examples, and the rest in the assignments.  The first few weeks the assignments were longer than I had anticipated - start them early.  The course cadence was much more regular after those first few weeks.  Overall a good part 2 introduction to Python.",SP 2020,No,,,,,,,,,
7/16/2020 8:12:54,CS 162 - Intro to Computer Science II,3,6-12 hours,"The move to Python made this course a lot easier. Being able to focus on the underlying concepts of programming without getting caught up with the programming language itself was great, though I didn't feel very challenged until the final project. Even then, the final project's difficulty for me was based on the fact that every prior assignment was a hand-holding, ""make these classes with these methods"" experience. The final project is really just ""make this program, and make sure it works"". Best advice I can give for that is to get a deep understanding of OOP, and when/why you should implement different classes. ",SP 2020,No,,,,,,,,,
7/23/2020 3:00:08,CS 373 - Defense Against the Dark Arts,3,6-12 hours,"Don't take this class if you like clarity, instructor interaction, or ever actually receiving grades for your assignments. Homework/labs are not closely related to the weekly lecture material and you are mostly left alone to decipher the vague instructions, figure out what the expected tools are, and put together a write up with no feedback on what should be included.",SP 2020,No,,,,,,,,,
8/2/2020 12:16:43,CS 161 - Intro to Computer Science I,1,0-5 hours,,SU 2020,No,,,,,,,,,
8/8/2020 10:21:08,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"Biggest time sink of a class. Personally,  I took notes as I read through the textbook  and had an okay time understanding the material, anything I didn't understand in full, I went to youtube for but this only happened a few times. Quizzes every week on material for the week prior. Don't expect the material to get any easier and less time consuming until after induction lesson is over. ",SU 2020,Yes,CS 161 - Intro to Computer Science I,2,0-5 hours,"As someone who's taken a prior programming class two years ago at another college (in c++), this is definitely an easy-to-get-into intro class (not because of the language switch). Curriculum is laid out pretty clearly. Most projects took between 20 minutes and an hour each week. Ample time to finish two bigger, final, projects.",No,,,,
8/10/2020 18:47:24,CS 290 - Web Development,3,6-12 hours,"Took this class during summer, so it was a bit accelerated. After reading the other reviews here, I went into this class with pretty low expectations. The first few weeks are definitely easy, and as everyone else says, the project/database assignments/final cram time near the end really hits you. For the project, I personally did the minimum and did fine. Make sure to cite any outside code you may use, check off everything on the rubric, and you'll get an A. For all database/mySQL homeworks, study the crap out of all the material you can. I mean go over it until you understand it, and then go over it again until you hate it. If you do that, the last database homework will really be connecting the dots on a process you already know well (it will also give you the knowledge to fix any bugs that will 100% come up). As far as the final goes... good luck. The questions cast a wide net on information that isn't required in the previous assignments, and I only knew some of the answers from going through Colt Steele's Web Dev course. They're not impossible, but they go into far more detail than any homework assignments call for. Overall, this class gets a 3/5 from me. It wasn't as bad as I thought it would be, and I walked away a lot more interested in web dev than I was originally.",SU 2020,No,,,,,,,,,
8/12/2020 13:04:57,CS 161 - Intro to Computer Science I,1,0-5 hours,"Focus on the material in Canvas and don't get lost in the weeds. Practice, practice, practice. Do the problems on your own before looking for solutions elsewhere.",WI 2019,No,,,,,,,,,
8/12/2020 13:08:16,CS 162 - Intro to Computer Science II,3,13-18 hours,"Really make sure you understand the last couple of modules in CS161, regarding classes, methods, inheritance and OOP. If you didn't spend the time to really get that in CS 161 on the last couple of assignments, then prepare to be wrecked on your first couple of assignments.",SP 2020,No,,,,,,,,,
8/12/2020 13:10:24,CS 261 - Data Structures,3,13-18 hours,"Put in the time to really understand time complexity and how these different data structures work. If you don't understand the intricate details of how these data structures work, then you are going to really struggle, especially on the quizzes. Understanding Big O notation from CS225 is vital here.",SU 2020,No,,,,,,,,,
8/12/2020 16:13:27,CS 340 - Introduction to Databases,2,6-12 hours,"Find a good partner with the same objective as far as grade and effort. Begin your planning with the end in mind - meaning, don’t propose some crazy database idea because you’re going to have to implement it at some point. Keep it simple and build to the specs. Also, the homework is way above anything covered in class materials so be prepared to struggle. Grading is lenient but do the extra credit anyway. Ponytail guy lectures are 👎",SP 2020,Yes,CS 475 - Intro to Parallel Programming,3,6-12 hours,"Go to office hours even just to lurk Professor Bailey’s zoom. He’s fantastic and this is totally acceptable to just drop in and hang out. Unofficial slack was a huge resource (no official slack). Don’t get hung up trying to understand the math and physics behind the example code. Understand that your only job is to parallelize things. Tests were unproctored and open note - degree of difficulty would be increased if this was not the case. 261 isn’t necessary as a prerequisite but I’d suggest having 271 under your belt (or taking during same quarter) to understand some of the implicit low-level concepts in this class. Great course with a fabulous, engaging professor. Would highly recommend. ",Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,Read the book and start assignments early. The class is wonderfully put together and everything you need to succeed is given to you. It’s just.. a lot. The first few weeks are super heavy on content and the last few weeks are super heavy on programming. Take every opportunity to go above and beyond with extra credit. Make a solid cheat sheet for the midterm and final. It’s not as scary as it’s made out to be and is possible to do (very) well in this course if you put in the time. I was able to finish with a final grade of 99.96%
8/13/2020 7:59:08,CS 290 - Web Development,3,6-12 hours,"Don't expect every assignment to be similar, especially the last one. Almost every assignment took me 1 or 2 days but the last assignment took multiple and I wasn't able to finish it on time. It's harder than the website project, which really surprised me as I poured most of my time into the website. ",SU 2020,Yes,CS 261 - Data Structures,3,13-18 hours,I thought this course was great. Just keep up with the readings and you should do fine. Utilize office hours if you find the topics difficult. ,No,,,,
8/14/2020 19:53:52,CS 161 - Intro to Computer Science I,2,0-5 hours,Learn how to use the debugger now and it'll serve you well your entire coding career.,SP 2020,Yes,CS 225 - Discrete Structures in Computer Science,3,18+ hours,Keep up with the readings. Some test questions come straight from the videos.,No,,,,
8/15/2020 14:53:34,CS 340 - Introduction to Databases,3,13-18 hours,"While the material is relatively easy and draws from CS 290, the amount of time you'll spend on this course largely depends on your group partner. If you find someone who is easygoing and willing to compromise it'll be a breeze. Unfortunately, I ended up with someone who was rather impatient and difficult to work with and thus spent more time than I would've otherwise. I strongly recommend you pick a simple idea for your final project that meets all the requirements. Thankfully, grading is lenient and there's several extra credit assignments if you need it.",SU 2020,No,,,,,,,,,
8/15/2020 14:54:01,CS 340 - Introduction to Databases,3,13-18 hours,"While the material is relatively easy and draws from CS 290, the amount of time you'll spend on this course largely depends on your group partner. If you find someone who is easygoing and willing to compromise it'll be a breeze. Unfortunately, I ended up with someone who was rather impatient and difficult to work with and thus spent more time than I would've otherwise. I strongly recommend you pick a simple idea for your final project that meets all the requirements. Thankfully, grading is lenient and there's several extra credit assignments if you need it.",SU 2020,No,,,,,,,,,
8/16/2020 11:12:35,CS 162 - Intro to Computer Science II,2,6-12 hours,"Give yourself at least an extra day to do assignments, as some (weeks 2 and 3) are uncommonly long.",SU 2020,Yes,CS 271 - Computer Architecture & Assembly Language,3,18+ hours,"Read the book. It's dense compared to the lectures and assignments, but it helps build your understanding.",No,,,,
8/17/2020 8:02:15,CS 290 - Web Development,2,0-5 hours,"Ho boy.  Probably the worst course I've taken thus far in the program.  Everything is so disjointed and a patchwork of different tools that it's incredibly hard to come away with anything meaningful from this course.  Like others have said, definitely take a web dev course online before this one.  Colt Steele's is one that's recommended a lot, but people say that it's outdated.  Fortunately, this class is also outdated, so it works out.  I went with Colt's class, and the first ~75% of the class was a breeze.  Once the class transitions into the backend, the lectures and assignments become way more confusing simply due to you having to figure the majority of it out on your own- including the lectures.  The final is a joke as well, it's a terrible way to gauge your understanding of the class.  Take a web dev class before this one, get 100% of the points you can in the first half of the class, then just coast for the last assignment and final.",SU 2020,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"Everything you need to do well in this class is given to you, which I greatly appreciated.  I was apprehensive learning about hardware, assembly, registers, the nitty-gritty of a computer, but this class wasn't actually that bad.  It's time intensive in the first half of the class with all of the readings and lectures, but definitely stay on top of those.  Start the assignments as early as you can.  Ideally you can finish those up in a day or two, but if you run into trouble you'll want the extra time to figure it out.  Some say to know the debugger inside and out, but I personally hardly used it and was still able to figure out where my errors were quickly.  Follow the advice for studying (look at quizzes/weekly exercises).  Once the midterm is over, the weekly readings aren't as necessary- I relied only on the lectures from then on and it went totally okay.  Lastly, always try to get as many rubric points as you can for the assignments.  The last assignment I purposefully ""punted"" on because I was  busy with other things, and I still ended up with a 35/50 on it somehow.  Just do your best to stay on top of the class and have a high grade going into the last assignment and final and you'll be okay.",No,,,,
8/17/2020 11:04:22,CS 290 - Web Development,1,6-12 hours,I did 50% of Colt Steele course on Udemy and that was enough to do majority of CS290. Sign up for Eric Ianni's section so you can get Greg as a TA. He is very helpful for any sort of problem.,SU 2020,No,,,,,,,,,
8/17/2020 11:37:02,CS 161 - Intro to Computer Science I,1,0-5 hours,"It's really helpful if you take any intro Python. I already had coding experience, but I took the Codecademy python course. It covered everything you needed, and made the projects very easy. ",SU 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,"Be sure to read the grading rubrics for the homework. I was docked frequently for things I thought were very small. The devil is in the details for this class. 

I found Kristen Jaskie's videos on Youtube SUPER helpful (I also used TrevTutor in the beginning). Toward the end I barely skimmed the official slides in order to make sure I wasn't missing anything. Find a supplemental resource you like early.",No,,,,
8/20/2020 10:41:55,CS 261 - Data Structures,3,13-18 hours,"If you took 161/162 in C++ like I did, be sure to learn some Python beforehand. Assignments provide you with skeleton code to work with, having previous Python knowledge will save you time. I also recommend skimming through Grokking Algorithms and the class text (both available online with some searching) to familiarize yourself with different Data Structures and ADTs, knowing the general concepts will also lighten your workload.",SU 2020,No,,,,,,,,,
8/21/2020 10:12:15,CS 344 - Operating Systems,2,13-18 hours,"The course was redesigned this summer. Modules now consist almost exclusively of written text and examples on repl.it (no lecture videos or required textbook). Also part of redesign, projects are now only in C (first 4 assignments) and RUST (last assignment, which was mostly graded as extra credit). Assignments can be heavy and tough, but grading scripts and guidelines were provided for all assignments.  So getting a perfect score on assignments is definitely do-able if you work ahead and double-check submission. Otherwise, grading is not very flexible. -- Final is 30%, multiple choice, unproctored, and open-book.",SU 2020,No,,,,,,,,,
8/23/2020 18:49:32,CS 325 - Analysis of Algorithms,2,0-5 hours,"Took this class Summer 2020. Opted to take the on campus-online version instead of eCampus due to a cheaper cost, since they were all put online by Coronavirus. I found the class overall fairly easy, with a few noticeably hard parts here and there. Youtube tutorials and chegg were extremely helpful.

Not sure how different my experience was from the true ECampus version, but I was not nearly as overwhelmed as I expected to be based on past reviews.",SU 2020,Yes,CS 344 - Operating Systems,3,6-12 hours,"This is definitely the most work heavy course I have taken so far in OSU CS. It was definitely all doable, though you really had to stay on your toes. I took the accelerated summer version of this course, there was one major lab assignment every week, with a mix of ""in class assignments"" and quizzes throughout. No midterm, but a final that ended up being the hardest part of the course for me.

Due to the nature of some of the projects, You really want to start early. The only ones I ever struggled on were the ones I started too late. That is probably the best advice I can give for the programming labs.",No,,,,
8/24/2020 14:24:04,CS 225 - Discrete Structures in Computer Science,5,6-12 hours,"Took MTH231 with Maisch. While I liked Maisch as a person very much and how engaged/helpful he was with the class, the class is completely unreasonable. Exam averages for final and midterm were upper-50s lower 60-s. Kept holding out for the curve but the curve was very mediocre at the end, between 3-8 points towards final grade. I did feel I learned a lot but it came at a cost of how difficult he made the class and how much busy work there is. A lot of work for a mediocre grade. If you’re really banking on getting an A do not take this class or be prepared to put in huge amounts of hours.",SU 2020,Yes,CS 352 - Introduction to Usability Engineering,2,6-12 hours,It’s not as much of a cakewalk as what is advertised unless you have a clear split for all your group members being great participants. If even one group member is slacking it can significantly add to your hours you have to spend. The final wasn’t too bad just be prepared to type. Generous graders and enjoyable projects to work on.,Yes,CS 161 - Intro to Computer Science I,2,0-5 hours,"Not too bad, felt like busy work at some points with the group assignments but not too bad and captures fundamentals pretty well. "
8/24/2020 22:50:42,CS 261 - Data Structures,4,13-18 hours,Make sure to start assignments as early as possible to give yourself time to finish them since they are quite extensive compared to your average programming assignment in CS 162.,SU 2020,Yes,CS 271 - Computer Architecture & Assembly Language,5,13-18 hours,"All the content you need to do the assignments and exams are in the slides and books. For the programs, you can mainly use the slides to get your answers, but will most likely need to supplement it heavily with the book. Learn to debug and become very familiar with it. I used it religiously for each program after learning how to. For exams, I studied mainly the slides, self-check exercises, and the weekly summary exercises/quizzes. The book sections would cover excess material that may not appear on the exam so I did not study the book much for exams.",No,,,,
8/25/2020 11:23:26,CS 271 - Computer Architecture & Assembly Language,1,13-18 hours,"This was one of my favorite courses in the program thus far. The information is not difficult per se, there's just a lot to learn. It's particularly challenging to take during the summer due to the shortened term. I read the first 3 chapters of the book prior to the start of the quarter and it helped immensely. I also prepped my mac by installing VMware and Windows 10. As you go through each week's reading, lectures, and summary exercises, add the important information to your cheat sheet. This will save you time for prepping for the midterm and final.  I think the midterm and final averages were around 73% but almost all of the questions were very similar to the weekly summaries. The first three programming assignments are really easy so I suggest doing the easiest extra credit options. Programs 4 and 5 surprised me, I thought I aced them but I misread important details on the rubric. Learn to use a windows or mac calculator for binary/hex/int conversions, there are YouTube videos to help. Not a lot of surprises in this course, just put in the work and you'll get an A.",SU 2020,Yes,CS 261 - Data Structures,1,13-18 hours,"This is a good course to take during the summer as it's not too difficult. I highly recommend Rob Edward's YouTube videos as the lectures in this course are subpar. The programming assignments are fairly easy, although there are some tricky implementations that required TA help. Unfortunately, there are very few TA's and not enough office hours so they are swamped. Piazza was a cluster this quarter. Try to get to the assignments early so you can get help if needed. Thankfully the prof is really active on Slack and was more than willing to help me out. ",No,,,,
8/27/2020 15:04:32,CS 340 - Introduction to Databases,2,6-12 hours,"I had prior experience with SQL, so the SQL portion of the DB class wasn't difficult for me.  I had a tougher time doing Python/Flask for the first time, but there are so many resources available in the class that it's not difficult if you take the time to look for them.  The instructors were helpful in providing useful advice when I got stuck.  It may have taken me a little more time than if I had prior experience, but I didn't think it was impossible to learn the basics of Python/Flask for the class (again, utilize the resources given to you).  Since it's a group project throughout the course, make sure you try and find a good partner to work with.  I had a good partner and the work was really well divided and the whole term went real smooth and workload was fairly even across the shortened term being Summer.  Also, do the extra credit assignments; they aren't difficult and it'll help your grade if you're struggling with your project.",SU 2020,No,,,,,,,,,
9/8/2020 12:34:20,CS 261 - Data Structures,2,0-5 hours,"Relatively easy, probably due to COVID procedures. None of the coding assignments were very difficult. Midterm and final exams relatively easy, though the professor looked for very specific answers and don't like much fluff.",SU 2020,Yes,CS 290 - Web Development,3,6-12 hours,"Start on the final homework early, don't get sucked into making the project better than it needs to be(like I did)",No,,,,
9/10/2020 13:42:48,CS 161 - Intro to Computer Science I,2,6-12 hours,Pay attention to the module exercises. Also some of the assignments comes from the option reading book. ,"Spring , 2020",Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,A lot of material and the homework and the assignment took time. I took it during the COVID-19 pandemic so there was no mid term or final exams. If you put in an effort you will do good. ,No,,,,
9/14/2020 12:42:57,CS 290 - Web Development,3,6-12 hours,"Go through the materials and do the assignments, don’t worry about the final... the questions it ask are non sensical. After the semester ends spend some time learning web development on your own that isn’t outdated and learn what’s actually important to web dev.",Su 2020,Yes,CS 361 - Software Engineering I,5,6-12 hours,One of the better courses after it’s redesign. Basically work in a group to build a project. Lots of great material and cool to see that working in a group is actually all about.,No,,,,
9/21/2020 12:58:53,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"I took the math version of this course. Professor Krughoff was fantastic - always willing to help, and very kind. If you happen to have him, and you're confused, ask him! There was a second professor, but I never interacted with her.

This class was infrequently overwhelming, and every time it was, my confusion could have been resolved much sooner if I had ASKED FOR HELP instead of trying to plow through it on my own. Don't be like me. Just ask.

I will say this - this class was definitely time consuming. I took it with Intro to CS, and 80% of my time went to this class. This is largely because reading the textbook is important, and the textbook is...well, a math textbook. Hard to read a lot in one go. Spread it out as much as you can. And this may be unique to me, but I found that my math skills really deteriorate once I'm frustrated. That's probably generally true for most things, but it seemed especially true with math. If you feel the same, force yourself to take a break. ",SU 2020,Yes,CS 161 - Intro to Computer Science I,1,0-5 hours,"I found this class super easy, but I'd started learning with The Odin Project in the months building up to it. I seems like a very kind class, though - weekly lessons with a quiz, pretty straightforward assignments, occasional group work, few surprises. Didn't interact with the professors much. Felt very in control the whole time. ",No,,,,
10/27/2020 15:48:26,CS 225 - Discrete Structures in Computer Science,2,13-18 hours,Class is overall easy. Quizzes match the demo quiz and homework. Lecture aren't too bad and book is useful. Anyone can get an A in this class if you put in the work. ,FA 2020,Yes,CS 161 - Intro to Computer Science I,1,0-5 hours,,No,,,,
11/16/2020 6:16:48,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,"Do the homework several times over, do the reading, ask questions, you should be fine!",SU 2020,No,,,,,,,,,
11/21/2020 20:16:34,CS 290 - Web Development,4,18+ hours,"Ugh.  I really hated this class.  Found it to be very frustrating.  Like every one else has said, unless you have web development experience you absolutely must take the udemy course before taking this one.  It's sad but that 12 dollar course is so much better than this course it's not comparable.  If you take the udemy course the first 6 weeks will be doable.  Once you move to the server side it all kind of falls apart.  I found myself hopelessly lost.  My impression is that the course is taught with the assumption that the student has at least some web development experience.  I think the reason for this is that many people taking this course do in fact have prior experience.  None of the concepts are all that difficult but its a bit like trying to navigate public transportation in a foreign country.  My opinion is that the activity's need to be smaller with more step by step instructions then build up to more of the complex implementations.  Instead the lessons will say things like ""this is all complex and we are adding more and more things so go and practice everything"".  I found myself staring at a blinking cursor not knowing where to even start.  Bottom line, probably the worst, most frustrating class I have ever taken, anywhere.",FA 2020,No,,,,,,,,,
12/1/2020 8:41:04,CS 362 - Software Engineering II,2,0-5 hours,"The grading can be quite harsh for this class. For example, some assignments are graded Pass/Fail so if your code fails only one test you still end up with half credit for the whole assignment. Otherwise the concepts are not difficult to understand and the coding is not complicated.",FA 2020,Yes,CS 340 - Introduction to Databases,3,6-12 hours,"The course is paced well so that even though the group project is substantial, it's broken down into small enough components as to never feel overwhelming. My group used Flask for our back-end interactions with the database and couldn't recommend it more. Just don't slack on getting your project steps turned in or you will have a lot of work to do at the end of the quarter.",No,,,,
12/4/2020 11:12:07,CS 161 - Intro to Computer Science I,1,0-5 hours,"This class isn't that difficult. The professors are very responsive if you ever get stuck. The last 2 projects are a bit longer so start earlier on them, but everything you need to complete them is given to you. ",FA 2020,Yes,CS 225 - Discrete Structures in Computer Science,2,13-18 hours,"This class is a slog, but really not that difficult. Samina and the ULA's are great and you could generally get a response to a question within a few hours. It ramps up in difficulty with the peak being induction in week 5, then slides down in difficulty for the rest of the term. ",No,,,,
12/6/2020 17:32:39,CS 290 - Web Development,2,13-18 hours,"The last half of this class gets more difficult since it deals more with the sever-side and JavaScript. having some knowledge of HTML and CSS will make the first few weeks a breeze. Also recommend Colt’s updated Web dev course. It will immensely help you for the last few weeks. The course book is good but I also recommend the Jon Duckett book. It took me about 15+ hours per week but it really helped and got me an A. The course is well laid out and even though some of the syntax may be out of date, it doesn’t really affect anything since you can use more updated syntax if you wish. Ianni is a great instructor and the TAs were very helpful. A lot of students complain about this class but in reality, there is no “holy grail” course that is the best although Colt Steel’s course is really good. Learn from as many resources as you can. ",FA 2020,No,,,,,,,,,
12/9/2020 14:38:33,CS 344 - Operating Systems,1,13-18 hours,"This class is not as difficult as many describe it. It is just a lot of work. If you start any class assignment right after it is assigned, I would say I spent about a week on each one. One would definitely set themselves up for failure if they did it on the last weekend. Take your time to absorb the assignment requirements and ask TAs if you have any questions and you will have no problems with this course. Definitely probably the worst course if you are procrastinator. ",FA 2020,No,,,,,,,,,
12/10/2020 13:51:38,CS 290 - Web Development,3,13-18 hours,"The first half of this class is easy, but the second half is a significant step up in complexity and time commitment for assignments. As other's mentioned, buy Colt Steele's Udemy course and do most of it (30 sections or so). This course will prepare you greatly for 290. The final project is not difficult, just time consuming, but very manageable to get a 100% on. The last homework assignment is far more complex than the project or anything else in the class so start it early. The final in this class is tricky and tedious. This class simply does not prepare you to be tested in this way, so your best bet is to maximize your cheat sheet.",FA 2020,Yes,CS 325 - Analysis of Algorithms,5,13-18 hours,The content of this class is conceptually hard and the assignments time consuming. Be prepared to study hard and maximize your cheat sheet for your exams.,No,,,,
12/10/2020 16:46:41,CS 162 - Intro to Computer Science II,2,6-12 hours,"If CS 161 was your only experience with programming, prepare for weeks 2 and 3. Refresh your knowledge of classes and list comprehension. It gets easier after that (in my opinion), but don't leave those assignments to the last minute.",FA 2020,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"The work isn't necessarily hard, but there is so much of it. Brush up on your algebra as well, as you'll be using it more as the semester goes on.",No,,,,
12/11/2020 14:42:57,CS 162 - Intro to Computer Science II,2,6-12 hours,"Was a pretty solid class, and not too difficult. The explorations are short and practical, while the coding assignments are pretty reasonable. This was my first term at OSU, since I got credit for my school's equivalent to CS 161. To prepare, I did parts of Tim Buchalka's Python Programming Masterclass course on Udemy when it was on sale. It was helpful, but any free resources would probably work too. OOP is heavily emphasized during the first few weeks, and for the final project.",FA 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,"I took the CS version of the class with Ehsan. Learning proofs for the first time was hard and that homework was time consuming, so I had to use various Youtube videos to help me understand it (TrevTutor and Trefor Bazett). The rest of the course was not as time consuming. I highly recommend using slader and/or chegg to confirm your problem-solving approach is correct for the first problem of each homework assignment. Also, it's not hard to get 100% in all your discussion posts, and I highly recommend you take the time to get full points for them. It's basically a free 20% towards your final grade, and you might learn something new by writing them.",Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"There's a large volume of info to cover in the course (especially at the start), but it starts to make more sense over time as you learn how to program in MASM. Stephen Redfield is a very responsive and nice instructor. Use the debugger and learn to understand the instruction set references - I regret not taking the time to understand those earlier on for my programming assignments. Start every programming assignment as soon as you can, so you have enough time to debug and get outside help (Piazza/Slack/Stack Overflow/the TAs) when you inevitably get stuck on the later assignments (esp. #5 and #6). Don't be a perfectionist with program 6, or you won't have enough time to study for the final. "
12/12/2020 11:44:52,CS 419/467 - Software Projects,2,0-5 hours,Be prepared to work with your group to complete the project with little to no guidance (which is the purpose of the course). Your group will be your source of success or failure for this course. ,FA 2020,Yes,CS 373 - Defense Against the Dark Arts,4,18+ hours,"Lectures and information are only marginally related to the weekly assignments. Be prepared to spend an inordinate amount of time researching and attempting to find sources that might help you work out what you might possibly be trying to do for the week's assignments. Some are reasonably possible with info that you can scrape from the internet, but some are utterly incomprehensible. I turned several assignments in unfinished because I just could not figure out any steps forward in trying to work them out. ",No,,,,
12/14/2020 9:22:20,CS 162 - Intro to Computer Science II,1,0-5 hours,,FA 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,18+ hours,,No,,,,
12/14/2020 11:52:04,CS 325 - Analysis of Algorithms,4,6-12 hours,"The key to a good grade in this class is getting as many points as possible from the homework, discussions, and quizzes. The school lectures are difficult to follow along and the textbook is dense so utilize outside resources such as Chegg (worth every penny) and Abdul Bari on YouTube. Do every extra credit assignment if you can. Hopefully with all this, you should have a big enough cushion to do poorly on the midterm and finals and still pass comfortably.",FA 2020,No,,,,,,,,,
12/14/2020 12:58:25,CS 340 - Introduction to Databases,1,6-12 hours,"Echoing that your partner will make or break this course for you. The actual coursework is really easy, but the project is the backbone of most of the work you do. I really didn't like the draft/peer reviews, though they're easy enough to complete and get full points on. The best prep work you can do for this course is posting on the unofficial slack/OSU subreddit trying to find a partner as far in advance as you can. It will give you time to get a head start on the front end of the project, practice using/messing up with version control together, as well as develop some repertoire with your partner so you both feel comfortable communicating with each other. I did that and had an amazing partner (shout out to Chantel), which made this class a breeze. ",FA 2020,No,,,,,,,,,
12/15/2020 10:04:34,CS 162 - Intro to Computer Science II,4,13-18 hours,"Videos and exercises do not seem sufficient to cover new material.  The expectations of the homework projects far exceeded what was demonstrated in the module lesson.  Frequently had to use outside resources to understand this class and asked for help.  Instructors were very helpful.  Odd pedagogy at times where they responded to questions with questions so you don't get an answer when you are lost.  Get used to google searching for actual answers. Used Tim Buchalka's python masterclass for help, too.  Weeks 2 and 3 assignments are long but straight forward. Try to get ahead in this course in case you get hung up around recursion, linked lists, or JSON.  The final project was to build the board game Focus (see Wikipedia) and required tons of testing to make sure the complexity of the program was working without errors.  You can only see 7 tests when submitting to gradescope but in reality there were 40 tests to pass. Took an A+ in the class and worked very hard for it. ",Fall 2020,No,,,,,,,,,
12/15/2020 19:30:20,CS 261 - Data Structures,3,6-12 hours,"Complete the homework - use late days if needed, don't be afraid to turn in the assignment late",FA 2020,Yes,CS 290 - Web Development,4,6-12 hours,"This class was pretty easy for the hw and only had 1 quiz/exam - the final.   I go 70% on the final but only needed 60% to get a 4.0 because I got 100% on the homeworks.  The final exam average was 67% so you're better off doing the homework diligently and using that to hold your grade up after the final.

If you really want to ace the final, :shrug: read and remember all of eloquent javascript?",No,,,,
12/16/2020 9:36:45,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,"I took the first iteration of the revamped CS 271 with Professor Redfield. It did have some typos and bugs but overall it was a well structured and well paced class. This is a class that starts off relatively slowly but ramps up around project 4 (midway). Nothing in this course is a curveball - from midterms to finals to the projects, everything is doable and fair in my opinion. That being said, you probably will need to put time and effort into learning the material and completing your projects. The extra credit on the projects is a good way to not only pad your grade a little in case you don't do well on the midterm/final/quizzes but also to solidify your understanding/coding in MASM skills. I attempted every single extra credit and while that probably doubled the amount of time I spent on some of the later projects, it felt tremendously satisfying afterwards and also made me confident that I wouldn't have to worry about the final. This class definitely exceeded my expectations for an online class and the TAs and instructor were very responsive/helpful.",FA 2020,Yes,CS 162 - Intro to Computer Science II,1,0-5 hours,"I was a transfer student that had done about half of CS50 (free online) and the equivalent of CS161 at another school. I don't think CS 162 was a poorly structured course necessarily, but the assignments (projects and quizzes) were all testing very basic understanding. For example, quizzes test very high level understanding of concepts (e.g. what is recursion) rather than low level ""how would you fix this code snippet"" type questions. This means that acing quizzes is extremely doable. The projects as well are all laid out precisely with the specific functions/classes you need with the parameters and outputs that should be returned. The TAs appear to grade largely based on whether your code passes Gradescope tests or not. There was no project design aspect to the assignments. I spent no more than a couple hours on the beginning projects and around 6-8 hours on the final portfolio project. ",No,,,,
12/17/2020 4:09:07,CS 271 - Computer Architecture & Assembly Language,5,18+ hours,"I took the revamped version of this class.. Redfield redid everything, lectures, weekly summary quizzes etc. Way better to understand. Start projects early, especially Project 6 (final project).. Also make use of your note sheet as a way of reviewing. ",FA 2020,No,,,,,,,,,
12/18/2020 15:08:02,CS 161 - Intro to Computer Science I,2,0-5 hours,Very basic course in a simple language. Slack and Instructors are responsive so ask questions and pay attention to deadlines/requirements.,FA 2020,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"Very time consuming, and quite difficult at times. Ask lots of questions and go to office hours. You will need to google additional resources, spend lots of time on homework, studying for tests, and discussions. Lots of extra points to be had but a LOT of work.",No,,,,
12/19/2020 20:58:44,CS 344 - Operating Systems,5,18+ hours,"Start early. Waiting until the last 4 days even is a huge mistake, these assignment show no mercy and take no prisoners.",FA 2020,Yes,CS 340 - Introduction to Databases,2,13-18 hours,"Find a partner early. Waiting until the last second pairs you with someone who also waited until the last second. This course is based around one long-term project, but it is split up into busy-work draft steps. I learned a lot, but it was because I put in a lot.",No,,,,
12/28/2020 10:19:04,CS 493 - Cloud Application Development,4,18+ hours,"This class was a great intro to using cloud computing services - primarily to work with and create APIs. You also get to run through containerization and virtual machine services on google cloud. I also found the course helpful to really nail down back-end development using node.js (I would like to go through the course material on canvas using python as well if I can find the time - the course offers both options and any others you clear with the prof). As a bonus, you will also learn about Postman. When I took the course, the lowest scoring assignment was dropped from the grading. However, each assignment builds upon the previous one in some way, so if you punt on one assignment (as I did during that crazy 2020 election week), you should still return and make sure you know how to do it for the following week and the final project. In particular, make sure you are clear on OAuth 2.0/ JWTs, since many aspects of the final project grade are predicated on these concepts. The prof and TAs are available and help through multiple contact methods, but do expect to use documentation and search the internet for solutions as well. I would advise getting your modular datastore code set for reuse each week along with reliable error handling. Also, make sure you design your specs  accurately based on the assignment description - even if this means asking for clarifications on piazza - then, make your postman tests directly based on the spec. Start your in-depth coding after you've taken these steps. That way, you can run your postman test suite after changes to make sure you didn't break anything and you will be able to gauge your progress.",FA 2020,No,,,,,,,,,
12/28/2020 13:42:51,CS 361 - Software Engineering I,2,6-12 hours,"If you haven't taken 290/340 yet, familiarize yourself with HTML, CSS, JavaScript, MySQL, databases if you can, as you will be using them at a minimum for the project your group will be creating. Also get comfortable with GitHub. The course itself though is great, we learned a great deal about many interesting topics. The instructor (Letaw) ran the class well and the TAs were responsive and useful resources.",FA 2020,Yes,CS 325 - Analysis of Algorithms,4,13-18 hours,"I will be brutally honest, this class was the worst one that I have taken so far in this program. You will be relying heavily on resources outside of the provided course materials. Read Grokking Algorithms and start going through Abdul Bari and any MIT Open Course algorithms classes videos that you can prior to the start of this class. This is the class you will finally see a lot of the discrete math concepts from 225. Get yourself familiar with the topics that will be covered, as it will help you immensely once you're in the midst of the chaos. Yes, the midterm and final exam were horrible, but if you put as much effort as you can into the Homeworks, Quizzes and Group Discussions and any Extra Credit opportunities that you can you will make it through this class. Reddit and the unofficial Slack channel are great places to commiserate with your fellow students, and those of us that have already powered through this will gladly give you any tips we can.",No,,,,
12/29/2020 10:49:04,CS 290 - Web Development,3,6-12 hours,"I supplemented the canvas course material with Colt Steele's Udemy class and, occasionally, youtube videos.  I felt really good about all the front end stuff we learned for the first 6-8 weeks of the class, but combining that with the back end side of things the last few weeks of the class got really tough.  The last assignment completely kicked my butt and I felt very unprepared to put everything together.  If I could go back, I'd have tried to set aside more time for that last assignment.  I did most of the work for each week in this class Friday through Monday(3-4 days), which was enough time for most of the assignments in the course.  The last assignment, however, I ran out of time so start early on that last assignment.    ",Fall 2020,Yes,CS 261 - Data Structures,3,6-12 hours,Give yourself a week in advance to work on each assignment.  Keep python skills up to date before taking this.  The TA's were very helpful but they get very busy right before assignments are due so try to ask your questions early. Course info was good along with a YouTube video here and there to supplement.     ,No,,,,
12/30/2020 11:41:14,CS 325 - Analysis of Algorithms,2,13-18 hours,"I took this class with Maher and Danielle. I think the instructors were fair and very receptive to student feedback. On the first test, they did not allow us to make our own study guide. After a lot of student feedback, they allowed us to make our own study guides for the final. The (open book, open note) quizzes can only be taken once, and they are timed. I did well on them at first, but towards the end of the semester, whether due to burnout or an increased difficulty in material, I started doing worse, and that knocked my grade down quite a bit. HOWEVER, they gave an extra credit project, which was very do-able given all the resources online. That project literally saved my grade, as it was a 2% bump if you did all the requirements. I would say the midterms and finals were difficult for me... but a lot of people said they did well just by studying the book and quizzes. We were also required to post 3 times on 2 separate days on the discussion board (groups changed each week). That was usually a huge waste of time because no one really knew how to answer each other's questions, and neither the TAs nor the professors check in to answer questions. It felt redundant at times since we also had teams and piazza going. I recommend sharing links to videos with your classmates because that was the only thing I found useful about group discussions. ",FA 2020,No,,,,,,,,,
12/30/2020 11:49:14,CS 325 - Analysis of Algorithms,2,13-18 hours,"I submitted earlier but I have to add that the lectures are truly terrible. I had no idea who they were from until midway through the semester when her name appeared on the screen (it was not Maher or Danielle). It was an instructor called Julianne Schufort ... I don't know how she still has a job because she literally sounded like she was seeing the slides for the first time each week. Not only that, but they had to know she was a horrible lecturer when they asked her to record these presentations - why her of all people?? Be prepared to watch her make countless typos and sound completely confused each week. When people say they watch the lectures at 2x speed, they are not bragging -- she talks SO SLOW that I felt like time had come to a standstill. Listening to it at 2x speed makes it sound like an actual, normal person. I feel triggered now when I hear that ""Hiiii class...""",Fa 2020,No,,,,,,,,,
1/4/2021 20:28:43,CS 325 - Analysis of Algorithms,5,13-18 hours,"This is considered one of, if not the most useful classes in the program (for interviewing) but it was the worst I have taken. The lectures were mostly useless as other reviewers have said. I can't emphasize enough the need to use outside resources. The MIT 6.006 and 6.046 courses are both terrific and I found Tushar Roy to be the best resource for Dynamic Programming. Additionally, do lots of problems from leetcode, that will help prepare you for the exams.
Make sure you really work hard on the homework and get every single point. Also, as mentioned before, use EVERY extra credit opportunity given. I bombed the final and didn't do hot on the midterm but because of the homework and extra credit I got a good grade.",FA 2020,Yes,CS 362 - Software Engineering II,2,0-5 hours,"Fairly easy course, but do not underestimate the amount of time that the assignments take. Most take a good couple of hours even though they seem like you could do them in 30 minutes. Overall great class, the instructor is very helpful and knowledgeable.",No,,,,
1/11/2021 10:01:00,CS 161 - Intro to Computer Science I,2,0-5 hours,Get familiar with the syntax. That way you can focus on learning the strategy and logic. Python Crash Course is a great book to learn from. ,FA 2020,No,,,,,,,,,
2/10/2021 6:18:02,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,Get the EC early on. The last two projects really make you work.,FA 2020,Yes,CS 162 - Intro to Computer Science II,1,0-5 hours,,Yes,CS 352 - Introduction to Usability Engineering,1,0-5 hours,
2/14/2021 13:12:26,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"do the readings, watch youtube videos about subjects, and maybe get a chegg account to * **help** walk through problems because there is so much variety within concepts.  ",WI 2021,Yes,CS 161 - Intro to Computer Science I,1,6-12 hours,"If you have no experience like me, the coding might take a couple extra hours a week than other people have said just because its new ...all in all not difficult",No,,,,
2/23/2021 6:23:50,CS 161 - Intro to Computer Science I,3,6-12 hours,"Start early and ask for help, keeps stress levels down",Fall 2020,No,,,,,,,,,
2/23/2021 12:14:08,CS 419/467 - Software Projects,1,0-5 hours,"This class can be taken for as many credits as you want to take it for. I took it for 1cr and combined it with a 3cr class to get my 4 which worked perfectly. I actually chose to make a portfolio website which I had been wanting to make for a while. It turned out really well, allowed me to make something I wanted, and I got credit for it. I'd recommend this class for sure and if you have Eric Ianni it'll be very doable, he's so helpful.",Winter 2021,Yes,CS 325 - Analysis of Algorithms,5,13-18 hours,Oh this class... the original course content is taught rather poorly and by week 2 I was just using outside resources to teach myself. It took a lot of work and so many of the concepts revolve mostly around taking the time to get it. When you take this I'd take it with easy classes and being prepared for it to just eat up your time. Also look at abdul bari and back to back on youtube to pick up the content.,No,,,,
3/6/2021 15:08:08,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Focus on projects worth about 40% of your grade, exams are only 28%. Quizzes and reviews are open note, they take up the other 30%",WI 2021,Yes,CS 361 - Software Engineering I,1,6-12 hours,"Post discussions early, makes it easier for everyone. Don't wait till the day it's due.",No,,,,
3/8/2021 14:22:59,CS 162 - Intro to Computer Science II,2,6-12 hours,"This class is a pretty natural continuation of 161 and is maybe 3x the time. Assignments 2 and 3 are longer and OOP-heavy, but the readme gives very detailed descriptions of what needs to be done which makes them quite manageable. The rest of the assignments are shorter, but there is a spike in difficulty in weeks 6-8, with a focus on recursion. The portfolio project is a complex board game (my term was Janggi). You have 2-3 weeks to get it done, which is plenty of time. Overall, this class wasn't all that difficult and the instructor, Hedaoo, is awesome. He would be online for 2-4 hours on nights assignments were due to answer questions and help with bugs. ",WI 2021,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"This was the 2nd term of Redfield's overhaul of the course. It is extremely well put together and everything you need to succeed is in the modules (no textbook or outside sources necessary), which is good because there is a MASM void on the internet. The only downfall of the course is the reliance on text, which could be a struggle for people who prefer video (Redfield does scatter videos throughout, but it is 90%+ text). The projects, especially 5 and 6, are challenging but doable. I suggest completing all EC on projects 1-4 to build a buffer, then completing 5 and 6 to requirements. As a pointer,  READ THE REQUIREMENTS OF THE PROJECTS THOROUGHLY BEFORE STARTING. You may build a functioning program but miss the requirements and be surprised by a bad grade. It is very possible to head in to the midterm with 102% in the course, and the final at 101%. Overall, this course was fantastic. Redfield, Vogel, and the ULA's are excellent.",No,,,,
3/12/2021 8:05:36,CS 161 - Intro to Computer Science I,1,6-12 hours,Get ahead if you can. ,WI 2021,No,,,,,,,,,
3/14/2021 13:33:01,CS 261 - Data Structures,2,6-12 hours,"This is a fairly well structured class with each week covering a different data structure. The course is pretty self-contained (you don't really need to look to outside resources to do well).   I would absolutely recommend getting a whiteboard if you don't have one to go through examples/algorithms before you start coding. Assignments are pretty straightforward and your grade on assignments is whatever you get on Gradescope (unlimited submissions, which has pros and cons). If you start assignments early, you should do well. I do think this was a significant step up from 162 so make sure you're comfortable with basic Python concepts before starting this course.",WI 2021,Yes,CS 290 - Web Development,1,6-12 hours,"This course is deceptive because in terms of grading, it's probably easy to get an A without much effort. The problem is if you want to actually learn the material you're going to have to invest time on your own (especially if you're like me and haven't had previous exposure to HTML/CSS/JS). The assignments are again misleading because they are literally knowledge checks that don't have any depth until you get to the last assignment which requires you to put everything together. It is easy to go through the course and then realize you haven't learned enough to complete the last assignment. I'd recommend spending the time week to week to make sure you're understanding the concepts as they come so that you're not scrambling last minute to try to relearn everything for the last assignment.",No,,,,
3/15/2021 4:57:04,CS 162 - Intro to Computer Science II,2,0-5 hours,This class wont demand a lot of your time until the end. Be prepared for the final project. Don't procrastinate.,WI 2021,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"Overall, I learned a lot and this course is pretty well designed. Put in the work and you'll be rewarded.

I learned a lot more from the readings than from the lectures. Your mileage may vary.

I created flashcards (using Anki) every week to memorize the key facts. I don't think this was strictly necessary, but I found a lot of value in it. It helped me do the work more confidently and quickly since I didn't need to go double check every definition and property.

The Discussions seem like they're still a work in progress. I found them to be a larger time commitment than they originally appeared and the organization is kind of a mess. I also found there to be a wide variance in difficulty of the discussion problems. If you pick your questions early, you can get the easy ones (if you want), and leave the hard ones to your group mates.",No,,,,
3/17/2021 14:17:50,CS 325 - Analysis of Algorithms,3,6-12 hours,"Abdul Bari's videos on YouTube will save you in this class. Check out the lecture slides to see what topics to review each week, but DO NOT listen to the lectures - they are garbage and will just confuse you. If you do well on the homework and quizzes you can afford to not do great on the exams and still pass the class.",WI 2021,Yes,CS 361 - Software Engineering I,1,0-5 hours,"This course is currently being redesigned, so your experience with it might differ from mine. I found it to be an easy class - just make sure that you look at the rubrics for the assignments to make sure you are getting all the points for your assignments.",No,,,,
3/19/2021 21:16:52,CS 261 - Data Structures,3,6-12 hours,"It's well structured and linear. Felt like a spiritual successor to 162. There was a bit of a crunch during the last few weeks when one of the homeworks covers two modules, but stay ahead during that time and you'll be fine. Workload wasn't relatively that demanding. ",WI 2021,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"It's only difficult because assembly instructions are so bare-bones. For that reason, it takes awhile to program some of the assignments. Just stay ahead during the quarter so that you have extra time for the assignments that are more difficult (I say difficult but it's just because assembly is relatively cumbersome). The midterm and final felt less demanding than I was expecting. Also since you can use typed notes on the exams, just stuff a lot of info on them and you should be well set.",Yes,CS 290 - Web Development,3,6-12 hours,"Some of the content is outdated since web development progresses so quickly. It's a bit annoying that the later materials don't fully show how everything you learned in the quarter is integrated, so you'll have to figure that out yourself. I didn't have any prep for any classes this quarter and that was fine, since the actual content isn't that difficult. Just make sure you try to get full points on the assignments where you can, because the final is a bit of a ball-breaker compared to the rest of the course. It covers content you maybe saw earlier in the quarter but never used yourself, which I thought was pretty dumb. Probably my least favorite course this quarter, even though it wasn't the most difficult, but I expect it will be much better once the course is refreshed/content is updated. That said, I still did enjoy it, just wish the content was current."
3/21/2021 10:48:03,CS 362 - Software Engineering II,2,6-12 hours,"This class covers various testing methods and processes used in Software Engineering. It's straightforward and the materials and workload are not overwhelming. It's great to pair with more intense classes such as 325 or 344 (which I paired it with). The keys to success in this class are: 1) complete all assignments by following the instructions to a tee. They aren't necessarily difficult, but if you don't complete them as specified, you will lose points 2) find your group members for the group project (that happens in the final third of the class) as soon as possible in the term to make sure you find group members in your time zone that are also as ambitious about communicating and completing the project correctly as you are. The final exam is proctored and very fair if you paid any attention at all during the term. ",WI 2021,Yes,CS 344 - Operating Systems,4,18+ hours,"This class is definitely the toughest one I have taken in the program. It's very well organized, unlike the sh*tshow 325 is. It's very information-dense, and if you aren't familiar with the C language, get as much exposure to it as possible before the class starts. The first five assignments are in C, and the sixth assignment is in Rust. Start the programming assignments as soon as they are released, as you will need all the time you can get to complete them. The instructors and TAs were great, and even though the assignments were tough, the expectations were clear and the grading was fair. The final is unproctored and open books, open internet, open terminal, open whatever else you can think of, the only limitation is that you are not allowed to collaborate on it with any other students in the class.",No,,,,
3/21/2021 19:21:57,CS 261 - Data Structures,3,6-12 hours,"I think this quarter (winter 2021) was a bit of a step up from previous quarters in terms of the workload/difficulty of this class. Everything is very well laid out and topics are presented extremely well. You'll consistently write >100 lines of code for the homework, split between a bunch of methods that range from easy return one-liners, to recursive solutions requiring helper methods. Due to the importance of this course, I am happy that I struggled and am now very comfortable with every topic that was taught. Some weeks of this class were just reading and took 1 hour, near the end they stacked assignments and quizzes and I was putting in closer to 15. Overall a reasonably difficult class that you can get an A in with enough effort. We had unproctored, closed book exams that were middle of the road, but that may or may not change post-covid.",WI 2021,No,,,,,,,,,
3/26/2021 9:56:42,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Take really good notes and plan out the projects before starting to code them.,WI 2021,Yes,CS 261 - Data Structures,4,6-12 hours,"Not too hard to do well, but at the end a few specific problems ramped up its difficulty quite a lot!",No,,,,
3/27/2021 14:01:53,CS 325 - Analysis of Algorithms,3,6-12 hours,I only watched the provided videos for the last week's material (P vs NP). Otherwise I used Abdul Bari and a few other resources (Back to Back SWE). I never cracked the book. Bari is invaluable for the first few weeks of this class. I think this was the last iteration of this class before it gets revamped- these reviews may be out of date next semester.,WI 2021,No,,,,,,,,,
4/14/2021 11:38:32,CS 340 - Introduction to Databases,2,6-12 hours,"Make sure you have a great partner. A lot of the work is this class is very doable if you divide and conquer. I personally think the class was just a continuation of CS290 except you're allowed to dictate what tech stack works best for your project. Learning about database design was interesting, but besides that, not a lot of data intensive learning. I found getting an A to be pretty straight forward as long as you're careful about the group project requirements. ",WI 2021,No,,,,,,,,,
5/3/2021 21:35:31,CS 372 - Intro to Computer Networks,4,6-12 hours,"If the course stays as it is this term with the newly added projects, it is now much more difficult than previous reviews state. Project 2 was the first time I have ever been legitimately lost on where to start an assignment in my entire academic career. The course has moved from Slack and Piazza to Teams and ed. Teams is dead compared to the good old slack channels from previous terms, and ed looks like someone's pet project.. there is a delay between when you type and when it appears. I came into this course super excited about the topic and am closing it out wanting nothing to do with it.",SP 2021,Yes,CS 340 - Introduction to Databases,3,6-12 hours,"You won't get much help from the instruction team here. Modules are semi-helpful, Weekly quizzes with unlimited attempts and 2 gradescope projects with SQL. This course pretty much comes down to your partner as the whole thing revolves around the term project. I took the class with a friend I made in 261 so it was fine for me, highly suggest going that route if you can. It is a neat class with useful skills but it really is self-teaching heavy.",No,,,,
5/25/2021 6:15:52,CS 464 - Open Source Software,1,0-5 hours,"Super easy and informative class and you get what you put into it. Highly recommend if you're looking for a light and easy elective, but if you want a substantive elective class, you may want to look elsewhere. I spent no more than 1-2 hours a week on this course. You can definitely put in more if you want to add an open source project contribution to your resume since the light workload gives you freedom to do so. Otherwise, the instructors provide lots resources to find open source projects you can contribute to for the purpose of the class. You don't need to necessarily contribute to the codebase either - you can do things like update documentation, provide a cognitive walkthrough, help translate, etc. ",SP 2021,No,,,,,,,,,
5/25/2021 10:21:30,CS 162 - Intro to Computer Science II,3,6-12 hours,"Its as everyone else says, the course material ramps up drastically in the second half of the course, I would say around module 6/7, the concepts will require more time to understand, and will be confusing if you haven't been exposed to the concepts before.",SP 2021,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"This class is great, I love the structure of the class, and it is very well taught. From my experience, the ULAs are very helpful as well. If you enjoy self studying the material, this class will be great for you, and aside from some videos from Redfield, the course is very hands off. I feel like I learned a great deal from this class",No,,,,
5/25/2021 15:57:49,CS 475 - Intro to Parallel Programming,1,0-5 hours,"All items are given immediately, finish ASAP and watch the videos ahead!",SP 2021,Yes,CS 361 - Software Engineering I,1,6-12 hours,"Start communicating with your team ASAP, it's hard to coordinate with others, especially 4 other people.",No,,,,
6/3/2021 10:39:27,CS 475 - Intro to Parallel Programming,2,13-18 hours,,SP 2021,Yes,CS 493 - Cloud Application Development,2,18+ hours,Get an early start on projects. Make your code modularffrom tthe beginningsso you have an easier timer reusing functionality ,No,,,,
6/3/2021 10:41:56,CS 161 - Intro to Computer Science I,1,0-5 hours,Work ahead as much as possible.,FA 2019,Yes,CS 225 - Discrete Structures in Computer Science,3,6-12 hours,Get an early start on the hw as soon as you can. Videos are likely late to post so use them instead as clarification and support for what you learn in the hw,No,,,,
6/3/2021 10:44:54,CS 162 - Intro to Computer Science II,4,13-18 hours,Review python syntax before the term so that you're not spending time reminding yourself about that while new concepts roll in,WI 2020,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,Work ahead and do all of the extra credit. It'll save you down the road. ,No,,,,
6/3/2021 11:01:52,CS 475 - Intro to Parallel Programming,2,6-12 hours,"I didn't learn much in this course. Don't take it if you're hoping to learn about something like computing with AWS. There is some conceptual material taught, but it's mostly high level and a lot of syntax. The professor provides most of the project code for you, and your job is mostly to fill in some blanks and write a tedious report. This is done to facilitate a large breadth of projects, but I would've preferred to dive deeper in fewer projects. It seems like the goal of the course is to give you as many buzzwords as possible for your resume. The quizzes and tests were thankfully open note, otherwise they would've required rote memorization of the professor's preferences. Overall I only recommend this class if you're very interested in GPU computing.",SP 2021,No,,,,,,,,,
6/3/2021 11:15:17,CS 475 - Intro to Parallel Programming,2,18+ hours,"This class is different than any other. It's often heralded as the best at OSU. I don't disagree with that on it's face, but I would add some caveats. It's great, but not perfect. Dr. Bailey is one of the few instructors who truly cares about the success of his students. You get all the content up front, he does lecture videos bi-weekly and for the most part, expectations are set up front. This class is also heavy on the writing. Maybe this was a change from previous terms given the amount of time people reported spending on this class in the past. There are 7 projects, each one requires to you do the project (everything is in C++, the first project technically can be done in C). You get exposed to multiple parallel frameworks like OpenCL and CUDA (yea, you write code that runs on GPUs). So that is cool. Then you also have to write a PDF for each project, there are questions that must be answered, graphs and tables to be added, the format of which is a bit specific. There were 2 exams, both which weren't bad, unproctored. There is also a weekly quiz of 5-10 questions each, not bad, and is usually based directly on learned concepts. This class is overall, not hard. But by no means is it a class you spend 5-10 hours a week max on, at all. I averaged 20 hours a week and started pushing 25-30 towards the end. I wasn't struggling at all. I'm pretty comfortable with C++, but there is a lot of guess and check with the code, then gathering data, then writing the PDF to the specific standards set forth (which might require some digging around for information to develop a good answer). TL;DR = Solid class, one of the best at OSU holds true, not hard, but demands significant portions of your time. Professor Bailey is truly one of a kind.",SP 2021,Yes,CS 493 - Cloud Application Development,3,18+ hours,"This is a good class. Cloud technology is important today and very relevant. This class is dipping your toe in that water. The gist (no pun intended) of it is that you spend the term writing and using APIs. The class is reliant on Google Cloud, so you will be rapidly familiarized with Google Compute Engine, Google App Engine, Google Datastore, etc. (...it helps if you have an elementary understanding of their cloud services layout, how to navigate, but not required). All projects can be written in JavaScript (Node.js) or Python (Flask), others are authorized, but you must get instructor permission first. I took the Node path because the whole program deeply leans on Python, and my JS was getting rusty. Projects are all very doable, requirements are mostly clear, though there were a few issues where the requirements would seemingly defy a relevant RFC, like stipulating a Content-Type header had to be set to indicate what MIME type the client was requesting (hint: should be the Accept header, this was fixed). Largely, content is text only, with some video, I didn't really use or review any of it. I heard mixed feelings from classmates that did use it. Flask seems like an afterthought. The real time-sink in this class comes from writing API documentation, and my God, is there a ton. My final project was 66 pages long, not including code, tests, and double-checking everything. The smallest one was 31 pages long. Now a lot of it is repetitive copy and paste, just filling in the boxes of the template they give you. But its still tedious, demanding and looooong. It's not hard, its just a lot. There were 2 exams (basically 10 question quizzes) that felt like more of an afterthought, unproctored. TL;DR = Overall, good class though, I would recommend it, just get your typing fingers ready. Be skilled in either JavaScript or Python. If your fundamentals are weak, you will struggle, but probably get by.",Yes,CS 419/467 - Software Projects,1,13-18 hours,"This class is called 'Online Capstone Project' now. Form a project group before the term starts. Use reddit or reach out to previous friends/group mates who are also taking this class that you thought were good partners. This class is made or broken by your group and its dynamics. I've heard horror stories, but fortunately, that wasn't my case. When the term begins, you can pick a canned project which really, for me lacked any inspiration. A lot of students decide to make a video game, there are lots of those. Our team developed a web-based AI-powered vehicle identification application. Came out good, learned a ton, our team was awesome, and we achieved what we set out to do. We all put about 200 hours into the project each, for a combined total of just south of 600 hours. Broken up over each week though some weeks are light, some weeks are heavy. I was probably averaging 15 hours a week. There is a lot of freedom in this class to basically pick your own project, the approval process is email the instructor with your idea, he says yes or no. That's basically it. You have to record videos each week demonstrating your progress, these can be daunting if you dislike making videos (or appearing in them), but they seem to be flexible with the content you put in them. There are no exams. The project is submitted at the end of the course, with a final report which is fairly easy. We used Google Docs to collab on everything, that worked fine. There is a final video and poster as well. It doesn't have to be remarkable, it just has to present the information they are looking for. Other than that, grades are basically 100's unless you are seriously not doing any work or have some remarkable snafu where it appears you are doing nothing. TL;DR = The people you chose for your group will make or break this class. Learn to make videos and get comfortable at least talking in them. Be project-driven, self-starting and willing to put in your share of effort towards the common goal of completing the project and you will be just fine. Communicate with your team, early and often."
6/5/2021 17:59:20,CS 475 - Intro to Parallel Programming,1,6-12 hours,Watch the lectures. I preferred the live lectures for extra/random tidbits but either will provide exactly what you need. ,SP/2021,Yes,CS 361 - Software Engineering I,1,6-12 hours,Have fun and spend time planning a proper project. ,Yes,CS 362 - Software Engineering II,2,6-12 hours,Be thorough in testing and you'll be fine. 
6/8/2021 15:22:12,CS 340 - Introduction to Databases,2,0-5 hours,"Get a group member early to help ensure your partner is equally motivated. Getting a good partner will make this course go so much more smoothly than an absent or inept partner. The term-long web application consists of a MySQL backend and you can use whatever else you like to create the rest of the project. My group used Node, but others used Flask, React, and some others. Outside of the group project, there are SQL exercises and database design concepts. This course isn't exceedingly difficult and I felt it was really enjoyable and I learned a lot.",SP 2021,No,,,,,,,,,
6/8/2021 15:26:43,CS 290 - Web Development,2,0-5 hours,"This course is generally not too difficult. The materials cover Node, Handlebars, Express, JavaScript, and CSS (and perhaps some more stuff). I didn't think the course was as terrible as I had been led to believe, but the last assignment was a real step up in difficulty compared to everything else we had worked on. The final was rough. A lot of the questions seemed to be more about minor details from throughout the term and some short answer/code questions.",WI 2021,No,,,,,,,,,
6/9/2021 12:33:43,CS 325 - Analysis of Algorithms,4,13-18 hours,"The ""revamp"" of this course is still a hot mess. I think any algorithm course should be difficult, because the topic itself is multi-faceted and incredibly important. 325 added difficulty by being kinda crap. The explorations they provide on Canvas are filled with typos and don't do a good job of teaching material. The only easy things about this class were the open note quizzes due each week and the discussion posts due every other week. The discussion posts were pretty annoying because you had to make a video solution for solving a given problem, but from an interview perspective verbally explaining is good to practice. The coding assignments ranged from easy to hard, with the portfolio assignment (essentially 3 problems with some other analysis) being the peak of difficulty. The midterm/final weren't crazy difficult (you get a 1-sided cheat sheet), but there was so much regrading due to poorly-stated questions being interpreted in different ways. I do feel like I learned a lot about algorithms in spite of this course's quality, but hope they make some much needed updates. ",SP 2021,No,,,,,,,,,
6/10/2021 22:17:06,CS 344 - Operating Systems,4,18+ hours,"This course was definitely the most time consuming of any non-elective class. The material is not overly difficult to comprehend, but the projects are big. Start each assignment ASAP.",SP 2021,Yes,CS 362 - Software Engineering II,2,0-5 hours,Find a good group. Don't just get randomly assigned partners if you can avoid it. You might get burned.,No,,,,
6/11/2021 11:18:38,CS 340 - Introduction to Databases,2,6-12 hours,"As others have said, get finding a reliable partner out of the way as soon as you can. If possible, get ahead of schedule with the Group Project, especially when it comes to refreshing your knowledge of JavaScript+NodeJS (from 290) or getting up to speed with using Python+Flask if you choose to, this will make your life significantly less stressful  at crunch time at the end of the term. Assignments and quizzes were fairly straightforward, and the majority of them give you the option to take them multiples times and keep the highest score. There were no Midterm or Final Exams. Two extra credit options were available, they weren't difficult, I'd recommend doing them just in case you have issues getting all of the CRUD functionalities up and running in the Group Project.",SP 2021,No,,,,,,,,,
6/12/2021 14:42:30,CS 162 - Intro to Computer Science II,1,6-12 hours,The assignment readme's essentially lay out all the requirements that will be tested for on Gradescope. This makes it pretty simple to get full credit on assignments if you read carefully and test the required functions and classes. The instructors and TAs are very responsive if you get stuck along the way.,SP 2021,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"I found that watching the lectures then doing the homework and discussion problems was the best way to learn the material. A small portion of the material was taught only from the book, but it wasn't too hard to find the relevant sections a few pages before the homework problems in the book. Using the appendix in the back of the book to see solutions to similar problems was also helpful. I spent a lot of time on this class and lost points for silly errors. Definitely double check your work and follow up with your TA if you feel you should get points back for something that you understood and did correctly.",No,,,,
6/13/2021 10:35:37,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,,SP 2021,Yes,CS 344 - Operating Systems,4,13-18 hours,Start the Project Early,Yes,CS 362 - Software Engineering II,1,0-5 hours,
6/13/2021 10:36:40,CS 372 - Intro to Computer Networks,2,6-12 hours,There isn't much direction for the project but if you read the book you can figure it out.,Sp 2021,No,,,,,,,,,
6/13/2021 17:05:54,CS 362 - Software Engineering II,1,0-5 hours,"Class is easy enough. However watch out losing a few points can destroy your chances of getting an A.

Especially the first assignment which is pass fail. 
The teachers and TAs in this class are way more strict about submission. So some of the things other classes would allow for example resubmissions. Or turning in a submission late past the late dead line. Aren't really allowed or harder to accomplish.",SP 2021,No,,,,,,,,,
6/14/2021 8:04:24,CS 161 - Intro to Computer Science I,1,0-5 hours,"Get ahead and stay ahead! Do some light python programming prep before the class if possible. I did up to the last couple of weeks of PY4E.com and zipped right through this course with very few issues. Google will be your friend! Read the specs carefully and get to work ASAP as soon assignments drop. I only have to spend at max 2-3 weeknights per assignment, and for the most part they were pretty straightforward. The last 2 assignments are longer and harder, but only because they combine more topics. There are quizzes but you can take each one twice, so there is literally no reason to get a bad grade on the quizzes. I liked this course a lot and got an A. ",SP 2021,Yes,CS 225 - Discrete Structures in Computer Science,5,18+ hours,"This class wrecked me. Body and soul. If you have kids, a day-job, hobbies, friends, or a social life at all: say your goodbyes now. I hadn't taken a math class in years but I did get a high enough score on ALEKS to get in. The math is the least of your problems in this class. The instruction is HORRIBLE. God-awful lectures and even worse readings. Prepare to spend 30-40 hours per week the first 6-ish weeks of the course, and 20-30 after that. I worked this class like a second job most of the time. Clock out from my actual job and clock in to Discrete. The assignments are long, awful, and terrible at actually teaching you what the teacher and ULA's want to see on tests. Do they want a specific format of proofs and the like? Yes. Do they ever demonstrate an exact format to follow? Of course not. Grading is all over the place, and you'll question your sanity many times. There was a test later in the semester that the entire class average was a D. Did they curve or drop this test? Of course not. Should such a bad grade from the whole class demonstrate that the teacher should re-teach that week or adjust their lessons in any way? Yes. Will that happen? Nope. The homework and discussions will save your grade. I got 100% on all of the discussions and I had no idea what I was doing half the time. They are less discussions and more extra homework, on top of the 10+ hours it will take each week JUST for the homework. I would consistently get 90-100 on the homework and 80-90 on the tests. That's just how it is. The book is riddled with errors and the teacher, although she seems like an ok person, not mean or anything, is just bad at teaching. She talks like she is at a math convention with a dozen math nerds, and everyone in the room understands all of the material perfectly. She doesn't seem to understand that people who are new to this need EXPLANATIONS and not really hard examples right from the get go. There was one week where some other guy did the lectures and that was by far the best week of the course! I worked my a** off and got an A-. Good luck and god-speed fellow CS hopefuls!",No,,,,
6/14/2021 9:48:43,CS 344 - Operating Systems,4,13-18 hours,"The most workload heavy course in the program. The key for success is to NOT procrastinate. Start each module as soon as you can, get a good general understanding of the concepts in the explorations, then start coding. The hardest assignment took me about a week to complete. Read assignment instructions and grading rubrics carefully or you'll lose out on some points. Try to get as many points as possible. Don't worry about the finals as it's open-book/open-notes.",SP 2021,No,,,,,,,,,
6/14/2021 13:21:22,CS 340 - Introduction to Databases,2,6-12 hours,"Partner selection and communication is pretty key considering the majority of your grade is the group project. I did 99% of the work in my group which I didn't mind because I learned a lot but I would have preferred a partner who was as invested as I was in the project. I took this straight after 290 and ended up using the same stack (Node.JS, Express) but think it would have been a good opportunity to learn something new. I felt like this was basically a longer version of CS 290's HW 6 with the onus on the student to learn anything beyond the basics - you can absolutely finish this project in a week or two and not have to put much work into it in the later half.",SP 2021,Yes,CS 372 - Intro to Computer Networks,2,6-12 hours,"First off I'd absolutely recommend doing the textbook readings - they are listed at the beginning of each module and take the bulk of reading/digesting time but that is where I learned the most. Investing the couple hours/week to read through the textbook and try to understand it probably saved me hours on each project because I knew I had a solid understanding of the concepts. The actual modules themselves are very loose summaries of the material covered in the textbook. The second thing I'd add is that the projects may be deceptive for some students. Many students complained they were too complicated/unclear and I'd agree that the skeleton code provided was often times confusing and the documentation could have been better. However, if you have read through the textbook and spend an hour or two going through the skeleton code to try to understand how everything should function, the actual Python programming is trivial. You may need to read over how the struct and socket module work but the documentation for both are very good. Grading for projects also seems lenient. I was able to max all project points despite knowing there were some bugs in my code. Finally, I would add that I think if you have an interest in networking fundamentals this is a good course that is not too overwhelming but covers more than the standard Net+ type material. I have taken Net+ and Sec+ and still learned a good deal in this course. However, if you are strictly interested in improving your programming/Python skills, this may not be the course for you.",No,,,,
6/15/2021 15:12:22,CS 475 - Intro to Parallel Programming,1,0-5 hours,"If you’re looking for a low-effort elective, 475 with Mike Bailey will fit right in. The content is wide in scope but taught at an introductory level. The assignments are fill in the missing code. It is more time consuming to generate the required graphs and write a paper on your feelings regarding the code experiment. Quizzes and tests are the easiest in the program by far. ",SP 2021,No,,,,,,,,,
6/15/2021 15:13:20,CS 372 - Intro to Computer Networks,3,6-12 hours,"Lots and lots of busy work for this class. Assignments included weekly lectures and quizzes, plus labs, projects, two exams, and two short video demonstration videos. I felt like the course gives a good overview of networking and I learned a lot. I didn't use the book at all and still got an A in the course - the lectures were enough, but do watch on 1.25x+ speed because the instructor is a slow speaker. If you keep on top of all the work you'll be fine.",SP 2021,Yes,CS 475 - Intro to Parallel Programming,1,0-5 hours,"As others have said, Prof Bailey is an awesome lecturer and actually cares about his class, so I'd recommend anyone take it just for those reasons alone. The course does cover interesting concepts and shows you how to implement some different methods of parallel programming. The course to me felt very easy - the projects could have been very difficult but most of the code is provided for you and you just have to fill in some blanks. The two exams were not proctored this quarter, took me maybe 10-15 minutes apiece to complete, and were mostly repeats of questions from the weekly quizzes.",No,,,,
6/16/2021 12:39:32,CS 290 - Web Development,2,0-5 hours,"Supplement with more modern learning/material/courses, this course is quite general, not comprehensive, and outdated. HTML and CSS are quite easy to learn, but very little is covered. Spend extra time on CSS in particular. Use Colt Steele's Udemy course, or Brad Traversy on Youtube for free. Learn things like media queries, flexbox, grid, and many modern techinques not taught in this class. Javascript is also outdated. Learn how to use let and const in addition to var. Learn newer dom manipulation such as document.querySelector. Take time to learn a modern framework such as React, Vue, or Angluar. The database portion of the class is a joke and barely shoehorned in at the very end of the class. Do yourself a favor and either spend time with SQL databases (such as in the database class) or else learn MongoDB for a no SQL modern option. Learn to deploy sites using MongoDB Atlas (database), Heroku (host), Netlify (host), Cloudinary (image storage), and similar in order to be competent in the real world. This class badly needs an update. As it is it could be called Javascript and Ajax class, because you don't really learn how to do actual modern web development.",SP 2021,Yes,CS 261 - Data Structures,5,18+ hours,"This class is a LOT of work. Don't let gaps in due dates fool you. Tons of homework, and many many readings assigned. Don't wait to get through all of the reading to start on assignements, start as early as you can, get help from TAs, and try to talk things out with class mates as much as humanly possible. Tests are hard but not impossible. I got a C on the midterm but 100% on the final. Submit to gradescope often and get all of the easy work out of the way for the points so you can dedicate more time to the hard problems.",No,,,,
7/19/2021 12:13:08,CS 475 - Intro to Parallel Programming,1,6-12 hours,"Professor Bailey is absolutely the best professor in the entire program. He is one of those teachers who goes above and beyond in the time and effort he puts in for his students. Check out his impressive (yet humble) resume on his page. He is a treasure for OSU. The assignments for this class were very reasonable - everything is clearly laid out for you, and Prof. Bailey does LIVE LECTURES in addition to FRESHLY RECORDED lectures AND live Zoom office hours. He posts everything on his own website, not on Canvas. You can probably see some current materials by googling his name and CS 475. Quizzes were reasonable, but slowly got harder. Be careful with wording as the semester goes on. Final exam was very reasonable. He always says he's not out to trick you, and he is one of the few professors who mean it. Honestly, the man is a saint. ",SP 2021,No,,,,,,,,,
7/27/2021 13:59:18,CS 290 - Web Development,3,6-12 hours,"Take Colt Steele's class on Udemy.  Don't waste your time  trying to deep learn HTML and CSS because it is a minor part of this class.  Spend all your time on Javascript, Node.js, learning API's and how server side programming works.  If you are not strong with JS then you will start to suffer in week 3 until the end.  The website project is easy.  The exam is difficult and does not help you learn anything.  Most questions are multiple choice, but there are about 5 coding questions.  The whole course is about to be revamped, but honestly I don't think it will get any better",Spring 2021,No,,,,,,,,,
8/7/2021 23:18:01,CS 372 - Intro to Computer Networks,4,6-12 hours,"Avoid taking this class in the summer, especially if you're working full time. Avoid taking this class in general - it may be the worst that I have taken at OSU, and I thought the 325 revamp was significantly better taught than this class. There is a LOT of busy work for this class as mentioned in previous reviews, and in the summer they just cram 4 weeks worth of material into the last 2 weeks of the class. The topic of networking is important for software engineers to learn, but the way this subject is taught is an absolute disgrace. The traceroute and RDT projects were not difficult to finish in theory, but the instructors themselves are a barrier to understanding the concepts necessary to doing those projects. They provide no rubric for what they grade on, and a very vague set of requirements for you to meet with no clear direction on how you're supposed to implement them. The class is supposed to ask the instructors questions in order to figure out how to do the assignment, but THIS IS NOT POSSIBLE IF THEY DECIDE TO STOP RESPONDING FOR WEEKS AT A TIME ALTOGETHER. Even if they do respond, you better hope it's not Bram Lewis as the way he skirts around giving direct answers to yes/no questions with long, snide, pretentious, philosophical tangents would put any politician to shame. Save yourself the $2k, and study networking from any one of the network+ books that are available out there because you'll learn more and you won't have to deal with one of the worst, most pretentious instructors you will ever come across. ",SU 2021,Yes,CS 340 - Introduction to Databases,1,0-5 hours,"This class will probably be one of the easiest A's you'll ever get at OSU. You won't necessarily feel like the tuition you're paying is worth the amount of material you learned, but you don't really have a choice now do you?",No,,,,
8/8/2021 8:50:57,CS 372 - Intro to Computer Networks,2,13-18 hours,"This course was so bad, it prompted me to write my first review while in this program. It was highly praised when it was required, and there are few reviews on the current iteration of this course (now an elective). The workload hasn't changed, so I will comment on my experience. The instructor interaction is frustrating, (if and) when they do respond. As the previous review stated: expect pretentious and obnoxious answers. There's an excuse for everything you might reasonably ask for: practice midterm feedback? Nope, can't release that cause cheaters might post it on Chegg. Project rubric? Nope, it's a ""discovery"" assignment. In the name of flexibility, here's some abstract skeleton code that you have to decipher to implement an abstract version of some networking protocol. Then, your subjective implementation will be graded by another subjective, hidden rubric! You later ""discover"" the module pertaining to the project is released later (???). Would've been nice to get an intro module before tackling a project to recreate a networking protocol from 30-40 years ago. For the labs, just use the provided trace files to save yourself the frustration of the outdated instruction PDF. For the projects, read up on the protocol/use the native OS implementation, understand the skeleton code, then begin your code. The book is skippable, read and watch the lectures at 2x. Overall, it's not a difficult course, but it makes courses like 290 and 325 look good.",SU 2021,No,,,,,,,,,
8/8/2021 11:27:25,CS 290 - Web Development,2,6-12 hours,"Course was phenomenal. The professors constructed the class to teach you how to build a Full-Stack MERN app. The frameworks/languages learned in the course contributed to building my resume, and the final (fourth) assignment is constructed in such a way that the student can showcase it as a portfolio project. The professors even encouraged this.

The course is project-based with four total projects (70% of grade) and a final exam (30%). The projects were simple enough that I could complete them in a reasonable amount of time (5 to 15 hours during the weeks the projects were due). I couldn’t complete any of the projects without having completed the explorations and readings. Everything that was needed for the projects was covered in the explorations in one form or another. Thus, I didn’t need Colt Steele or much outside coursework. However, the professor provided extensive reference material: WS3, Wiki, MDN, Express, MondoDG, Mongoose, etc. As a developer, one would go to the original documentation to expand upon their application development, so it made sense to provide the resources to the learner in such a fashion. (I think this structure is how he constructed cloud dev, which made it the hit it has become.)

Comparing to the course before the revamp, the new course taught Express and Node within the first few weeks of its start so that by the time the final project was assigned we had a decent amount of experience. Node wasn’t even taught until week 7 in the previous course.

The pros of the course (or negatives, depending on how you view them) is that learning JavaScript is condensed to one week of basic training. JS is covered more throughout the course but as it applies to what you need it for. The previous course spends quite a bit of upfront time learning JS before even getting to Node in Week/Module 7. This could be viewed negatively because the teaching staff expects for the student to learn JS on their own by reading the required textbook. I am by no means now an expert with JS, but I know where to research what I’m looking for.

Overall, anyone could run through the course material quickly and focus on the projects and put little time in order to get a high grade. But with the breadth of material covered each week (every week we learned a new framework, technology, or language), I spent more time rewriting the course content to engrain it before attempting the projects. I think this helped cement a lot of the content. I noticed that the teaching staff (professors/ULAs) provided practically everything you needed for each project in EdSTEM to get a 100%. This course could be paired with a harder course and still do well. ",SU 2021,No,,,,,,,,,
8/12/2021 22:35:42,CS 261 - Data Structures,1,6-12 hours,,SU 2021,Yes,CS 271 - Computer Architecture & Assembly Language,1,6-12 hours,,No,,,,
8/13/2021 10:28:14,CS 352 - Introduction to Usability Engineering,3,6-12 hours,Some deadlines are midweek so keep an eye on those and always look ahead,SU 2021,No,,,,,,,,,
8/19/2021 19:23:09,CS 325 - Analysis of Algorithms,4,13-18 hours,"This class is challenging, but doesn't take up as much time as I expected it to in the Summer. The homework is on the lighter side compared to 261/225. Most of it feels like an extension of 261 with the added layer thinking about time complexity. The last module on NP/NP-Hard/NP-Complete took a while to sink in. There were two group discussions with write up assignments. If you get ghosted by a group member (or two), you can easily move on without them which is nice. The quizzes are very easy, but not worth much. Midterm and final were both proctored, mostly multiple choice with some pseudocode writing as well. Not bad if you know the algorithms that are covered in the lectures and make a decent note card.",SU 2021,No,,,,,,,,,
8/21/2021 0:39:59,CS 344 - Operating Systems,5,18+ hours,"It was revamped and is horrible. Spent 40+ hrs on each assignment. 50% had a C- or lower. I’m pretty sure they cannot release this class next term Bc it’s not a real class at the moment. Modules are useless and assignments basically have no instructions. You’re paying $2000 to teach yourself and the assignments/instructions omits important information that is required for the assignment Bc it fosters self-learning. Awesome teaching method.  I’m almost positive it’ll be fixed but for summer 2021, this class is f***ked up.",SU 2021,Yes,CS 290 - Web Development,2,0-5 hours,This was revamped in 2021 summer. I’d say you get what you put in but it’s an easy A. Get an A in all of the assignments and you won’t even need to pass the final. Use office hours to your advantage if you’re stuck and you’re golden if you just wanna glide by. ,No,,,,
9/2/2021 22:13:55,CS 161 - Intro to Computer Science I,1,6-12 hours,"I spent 92 hours on this class in a summer semester (so 11.5 hr/wk in accelerated summer, or 8.3 hr/wk in a normal 11 week semester). I didn't have much other programming experience, so I prepared for the class by spending 27 hours going through the written/video resources of the ""Python for Everybody"" course (skipping all of the problems, because I was going to do those in 161).  I felt like that was the perfect amount of prep, so going through the actual 161 course materials was actually pretty good review.  I honestly probably could've finished 161 about 30% faster if I wasn't so fixated on maximizing my grade. This class is an easy A because you can retake quizzes, and you're not graded on your code's efficiency, just whether or not it works.",SU 2021,No,,,,,,,,,
9/4/2021 16:17:21,CS 225 - Discrete Structures in Computer Science,4,18+ hours,,SU 2021,Yes,CS 161 - Intro to Computer Science I,3,13-18 hours,,No,,,,
9/6/2021 6:20:23,CS 161 - Intro to Computer Science I,2,0-5 hours,"If you have any experience in Python or programming this class should be a breeze. Even if you don't, the modules are done in a way that effectively builds your foundation of concepts, and most of the assignments are short and straightforward until the last few weeks of the semester. If you get stuck the professors and ULAs are awesome and super helpful! I wish that this class gave an intro to debugging, it would have been helpful for the final project. You may want to acquaint yourself with the debugger in pycharm, since pythontutor (which was recommended by our professor) has a limit on lines of code so you can't really use it effectively for the final project. ",SP 2021,Yes,CS 225 - Discrete Structures in Computer Science,5,18+ hours,"This class was a rude awakening for me - I spent 20-30 hours per week on it on average, sometimes more. It definitely felt like another full-time job. Be prepared - this class covers A LOT of material in a short period of time. It has been a while since I have taken a math course and I found some of the topics to be pretty challenging, but Professor Eshan and the ULAs were incredibly supportive and helpful. Since this class moves so fast through each topic I found it hard to retain everything and to go back and review mistakes I had made. 

My advice:
-Do the readings. DO THE READINGS. The professor doesn't cover everything in the lectures, and relies heavily on the book. 
-Don't take this class during the 8 week summer term. Just... don't do that to yourself.
-Go to office hours. Ask questions. ULAs will help you if you're stuck, will tell you if your answer is correct, and will help to guide you through. This can help to save your grade, since homework is graded based on correctness.
-The lectures aren't great, so I recommend supplementing with TrevTutor, Dr. Trefor Bazett, and Khan Academy videos on YouTube. (especially if you aren't great at absorbing material from reading)
-Make sure you have enough time to commit to this class. I worked a full time job 40 hours per week, then spent 20-30 hours per week on this class, and then 3-6 hours on 161. If I didn't already have some background in python, 161 on top of everything else would have killed me. My life this semester was eat-sleep-work-study. Say goodbye to your social life.
-Some of the discussion questions are stupid hard. Make sure you pick your questions as soon as possible so you don't get stuck with a crazy hard problem. If you're short on time you can just post an incomplete/incorrect answer to the discussion question, and then focus on getting it correct for when the correction post is due. This can help you to manage your time to get homework assignments done on time, and also helps you to prioritize based on the weight of the grades.  ",No,,,,
9/14/2021 15:40:16,CS 344 - Operating Systems,5,13-18 hours,"I took this class during summer 2021, and something had to have happened behind the scenes because this class was a mess. One of the TAs would constantly belittle people on the message boards. He was so condescending that it felt uncomfortable to watch. As a student, I felt scared to even comment or ask questions because it seemed like he would respond with a ""you should know this"" kind of reaction. The instructions for the projects were vague, and the readings, which were endless, were not helpful at all. I spent a long time doing each reading, but it made no difference. I basically learned nothing in this class. ",SU 2021,Yes,CS 361 - Software Engineering I,1,6-12 hours,"This class was really unique. First of all, you don't do any programming for the first 2 weeks. When you finally design a project, it's completely up to you what you want to do with it. You have to work in a team, and this is actually the worst part. You need to incorporate a teammate's microservice, and they need to successfully implement yours. If you have team members who basically don't exist, or don't do assignments, you may lose out on a chunk of your grade. If they can't figure out how to incorporate your microservice, you will also lose points. If they don't complete their microservice on time, and you need it, you'll still lose points. My recommendation is to find at least 1 team member in the group who is responsible and latch onto them for dear life. Turn in your sections on time, and offer lots of help if that teammate can't implement your microservice right away so that your grade isn't affected either. ",No,,,,
9/19/2021 7:33:57,CS 162 - Intro to Computer Science II,2,6-12 hours,"This class focuses a lot on Object Oriented Programming (OOP) concepts - I would recommend reviewing OOP a bit before class starts. The first few assignments were on the lengthier side, requiring about 200-300 lines of code. I would also strongly recommend learning how to use the debugger in PyCharm- this will help you to become more effective at debugging and ultimately will save you a TON of time on assignments, especially the final project. I wish they included this as part of the curriculm. 

As the semester progresses assignments get shorter and focus on other concepts, such as decorators, generators, JSON, etc. The recursion module in week 6 was a bit of a beast - make sure you allow enough time to work through this module. The final project is a different game each semester that you use OOP to create the backend for. All in all this was a solid class - I don't have much of a programming background but found it to be pretty straightforward. If you put in the effort to learn the concepts and debug/troubleshoot, this is a relatively easy A in my opinion. ",SU 2021,No,,,,,,,,,
10/11/2021 23:40:28,CS 261 - Data Structures,5,18+ hours,"This course in the summer was BRUTAL. The assignments had way too many problems to be able to be finished in a week, and were a huge step up from CS162. Set aside a lot of time for the readings, some weeks had over 40 pages of reading to do, along with 2-3 wikipedia articles, and 2-5 exploration pages. Be ready to do some external research, since some problems require solutions not discussed at all anywhere in the explorations or the readings. ULAs are helpful, but vary by term. Randy is nice, but a stickler, and he won't make any exceptions. ",SU 2021,No,,,,,,,,,
11/14/2021 18:32:42,CS 372 - Intro to Computer Networks,3,18+ hours,"I took this course in Fall 21, shortly after it was made an elective. From what I have read and experienced, the course content hasn't changed, but the grading has, and some projects have been shifted around slightly. Overall, it's more the same than not, but an easier class because of more lenient grading.

I've heard plenty of complaints about this class, and most of them are still issues. However, it seems to be more little things now. Grading rubrics are all present and in my opinion, pretty clear for the most part. There are PLENTY of small annoyances with this class. I definitely feel frustrated with things like: poor instructions, ambiguous requirements, new math problems on quizzes, etc. However, all of these things are pretty small, and don't add up to being larger problems. The midterm and final exam are a cumulative 20% of your grade now. Exams, quizzes, are open book and open note. Labs and Projects (the projects seem to have more clear requirements now) are worth a cumulative 50% of your grade. Other things round out the last 30%. 

The course is a lot of hours for me personally. Probably ~20 per week give or take. About 8 of those hours are just getting through the textbook and taking notes. I don't watch the lectures. I've heard bad enough things about these lectures, and honestly just ditched OSU lectures halfway through this program anyway. We're all just setting ourselves up for a painful existence if we expect that OSU lectures will amount to anything. So each week I read the textbook (and take very detailed notes). Then, I do any labs, projects, and weekly quizzes. It's a lot of hours - and a lot of that is tedious work in my opinion. BUT, I am learning quite a bit about networks, and definitely think anyone who can take this class, should. It's really not that bad now. Yes, it's time consuming. Yes, there are 20+ annoying things each week that come your way. But if you stick to the textbook and give the bird to all other OSU created content, you'll learn a lot and do well. I'm not a textbook person myself, but although I'm slow learning this way, I still learned a ton.

Time consuming, painful, and tediuous. But well worth it for what you learn. And you get to take the cloud course!

I did not take this with another course, but did work part time at an internship (~20 hours per week as well). That was a full plate for me, given fluctuating hours in both work and school.",Fall 2021,No,,,,,,,,,
11/17/2021 20:45:59,CS 161 - Intro to Computer Science I,1,0-5 hours,"If you read through the explorations and test out concepts you're not familiar with, you shouldn't have any problems working through the assignments. Course is well laid out and sets you up for success if you engage with it.",FA 2021,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"The first couple of weeks are incredibly time consuming, but once you hit about week 6 the work load drops off dramatically. By far the hardest parts were the formal proofs, especially mathematical induction. Pay special attention to the exact wording that is used by the instructor in their examples as you will be docked points for not using correct terms.",No,,,,
11/26/2021 21:31:57,CS 162 - Intro to Computer Science II,2,6-12 hours,"Projects 7 and 8 seemed like they gave people the most difficulty. The portfolio project was pretty straightforward, by comparison. Once you make it through the decorators and generators unit, you’re home free!",FA 2021,Yes,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"Professor Redfield is a real nice guy and very helpful. The explorations are pretty poor. Reading about MASM before having any real practice with it, or a demo, or really anything , never helped me that much. Even when I got to the point where I felt comfortable passing parameters to the stack and writing recursive procedures, I was still missing questions on the weekly quizzes and the tests. The course seems unnecessarily nit-picky. That said, I really enjoyed assembly language! ",No,,,,
11/30/2021 8:34:06,CS 325 - Analysis of Algorithms,3,6-12 hours,"This course was recently revamped and isn't as much of a mess as it used to be. Doshna is pretty active on Ed and does live weekly review sessions. The first 2 weeks are math-heavy but that goes away from week 3 on and the math didn't really appear on the midterm. Most of the programming problems can be found on Leetcode, and it seems they will be moving assignments to Gradescope in future terms. I took this with 362 and it was the lightest two class term I had in the program thus far. ",FA 2021,Yes,CS 362 - Software Engineering II,2,0-5 hours,"This class does not take much time, but the content is pretty important for real-world engineering jobs. I had Ianni for old 290, so I was prepared for the strict requirements, but if you have not taken an Ianni course be sure to follow assignment guidelines closely or risk losing points for stupid stuff. That being said, Ianni is a pretty good instructor overall and is very active on the message boards. Try to find solid partners for the group assignment, as you will be working closely with them for the CI project. ",No,,,,
12/2/2021 21:30:03,CS 372 - Intro to Computer Networks,2,6-12 hours,"Fall 2021 Review: This course makes every other course in the program look excellent. Imagine being given applied networking math problems with zero direction on how to solve them. Imagine being given labs from the Windows XP era. Imagine being given open-ended projects. Even better, imagine instructors having zero presence. This course is not difficult. I did not feel any reward or satisfaction from completing it. Only take this if your desire is to shift to the cloud elective.",FA 2021,Yes,CS 361 - Software Engineering I,1,0-5 hours,"Fall 2021 : This course goes through a lot of changes. I am provided the latest format. Students form their own groups of five members. Each student makes their own individual project and their own microservice. Microservices are not explained clearly in the class so I will summarize. Provided a request, a microservice will send a response based on the request. An example would be a weather microservice where a request sent defining a city zip code would provide a response with the temperature of that city. Kind of like an HTTP GET request. At least one other member in your group will need to use your microservice in their individual project and you will need to use another group member's microservice in your individual project. The platform used for microservice communication is decided by your group and there is a research assignment on it to help decide. The project and microservice can be in any coding language. Due to this, video demonstrations are expected throughout the course. The course is not divided into traditional 10 week modules and instead consists of five sprints. First two sprints focus on design/planning, third sprint is individual project (no microservice), fourth sprint is integrating microservice into the individual project, fifth sprint is refactoring and code review. This course, while not difficult, requires a degree of group coordination so invest early in forming a group. As project requirements are open-ended, this is an opportunity to make a portfolio project but note that the dedicated sprint time to work on it may not be enough and if desired to start building it around the planning phase instead if there are many features required. Fun course...",No,,,,
12/5/2021 17:00:32,CS 372 - Intro to Computer Networks,2,13-18 hours,"Took 372 in Fall 2021. I agree with recent reviews and this is my first Course Explorer review as well. This class needs work. It has great potential and interesting low level material, however it's executed poorly. The early lectures have some dynamic ""white-boarding"" presentations which are pretty good, but the rest are dry/mundane ppt slides. OSU should really take note of the work done on 271 to create effective learning materials. As a student, for this class I would recommend starting the programming assignments early because there is not much guidance given for requirements on how to execute the tasks. Starter code is provided, but a lot of time is needed to absorb to trace the flow and intent. The class isn't hard, but frustrating with execution.",FA 2021,No,,,,,,,,,
12/7/2021 6:20:39,CS 344 - Operating Systems,5,13-18 hours,"They reverted back to the original course for Fall 2021. I was very excited to learn about OS, and 344 did not disappoint. Be prepared to read a lot and to spend time digesting complex topics. Smallsh and OTP are very long assignments-- be sure to start them as soon as they are assigned. Although the class is difficult, it is very straightforward. The modules a detailed and well-organized. If you do the readings and understand them, you will be all set to complete the projects. For some of the programming assignments, the professor provides skeleton code that you modify to fulfill the requirements. I found this format helpful, although I also enjoyed building smallsh from scratch.",FA 2021,Yes,CS 362 - Software Engineering II,1,0-5 hours,"Very easy. Most of the assignments can be completed in a day, although I would not complete them on the last day. A few times I hit a snag and had to turn something in late.",No,,,,
12/7/2021 10:37:28,CS 372 - Intro to Computer Networks,2,6-12 hours,"Pay attention to the rubric, because the programming assignments will take up 80% of your time in the course and are worth 30% of your grade. They also offer no help or explanation on how to complete them. Imagine  doing all of the readings, watching all of the explorations, doing all of the summary exercises and understanding it all, and then you get a programming project that asks you to have a totally different skill set with no help on where to develop it. This needs to either be a conceptual class or a coding class, it cant teach concepts and grade on code.",FA 2021,Yes,CS 361 - Software Engineering I,1,0-5 hours,"The hardest thing for me was picking a project. Find something you are interesting in learning, and start with a big scope. You can trim it down if you bit off more than you can chew. This course is really just about communicating with your team and making a project that works. The project can be anything, its really not even graded (final submission for the portfolio assignment, 80% of the grade was a reference sheet you typed out that week, unrelated to your project. Easy A, but also a waste of time. ",No,,,,
12/8/2021 10:54:55,CS 290 - Web Development,2,0-5 hours,,FA 2021,Yes,CS 325 - Analysis of Algorithms,3,6-12 hours,"The first two weeks of the course are very math-heavy, but it gets much better from there. The math doesn't really show up in the mid-term or final other than knowing growth rates and recurrence relations. You are allowed one page of notes on both exams.",No,,,,
12/10/2021 11:31:32,CS 261 - Data Structures,2,6-12 hours,"This was an easy A. I was expecting a much more difficult class based on reviews from the previous semester. Most projects you could easily complete in 6-8 hours. The only exception was the AVL Tree, which was the hardest project in the course and many people struggled with it. Both the midterm and final exam were fairly easy, closed book, and unproctored. ",FA 2021,Yes,CS 290 - Web Development,2,6-12 hours,"Easy A. Most of the projects you could literally copy and paste the code from the modules, changing only necessary parts to fit the projects. I almost wish it was harder so that we learned more, I will have to supplement this course with another online course to really learn the material. There was one final exam, which was proctored, that was very easy. I wouldn't be surprised if they eventually revamp this again to make it a little harder when they get reviews back. ",No,,,,
12/10/2021 12:47:20,CS 162 - Intro to Computer Science II,2,6-12 hours,"Overall thought this course was decent. This was all taught in Python and each week we'd learn one of the following subjects:
	1. Exception handling
	2. Unit testing
	3. Inheritance, composition, polymorphism
	4. Searching, sorting, algorithm analysis
	5. File handling, pickling/json
	6. Recursion
	7. Linked lists, stacks, and queues
	8. Generators
	9. First-class functions
	10. Decorators
This class has reading lessons followed by repl.it examples, practice problems followed by solutions. There are pre-recorded videos that the instructor teaches about the lesson. Every week there would also be live webinars held on Zoom (also recorded!) where the instructor goes in depth about the lesson/module of the week. If you cannot attend the live session, there's a form to submit a question where they'll likely answer towards the end of the Zoom. There are two group ""projects"" where you basically review everyone's code and provide inputs on which ones the best and why you think that is. I found that I often used outside sources such as RealPython.com to get more in depth with the modules.",FA 2021,No,,,,,,,,,
12/13/2021 8:09:01,CS 271 - Computer Architecture & Assembly Language,3,18+ hours,"Do as much of the extra credit as you can, especially on the first 3 or so assignments. It will save your grade.  While this class can be a little time consuming, I do feel like I learned a lot and it's relatively well put together. I probably spent on average 15-20hours/week on this class, with maybe 25 hours on the last project. The midterm was hard and the final was even harder than the midterm, so study up. You should get an A or A- with moderate effort.",FA 2021,Yes,CS 290 - Web Development,1,0-5 hours,"This class was easy. Assignments were literally copy the provided starter code, then change one word repeatedly from the starter code or video lectures to match the rubric and yay, you're done. Class finishes up with a 30% of your grade final, which wasn't terribly difficult but because it's 30% of your grade, not knowing 1-2 concepts and missing a few points can drop you a letter grade. Wouldn't be surprised if this class got a bump up in difficulty, because a lot of students didn't feel the copy and paste contributed to actually learning.",No,,,,
12/14/2021 23:28:07,CS 225 - Discrete Structures in Computer Science,5,18+ hours,"I prepared for this class by doing Khan Academy Algebra 1+2, and also spent about 40 hours reading through chapters 1-6 of the textbook before the class started. Despite all of that, I spent an average of 233/11 = 21.2 hours per week on this class. I got an A, but it was the most difficult class that I've taken in my life (harder than stuff like Calc 2 and Econometrics).  Weeks 3-6 are especially brutal, I was pushing 30+ hours/week during that period. I strongly recommend getting Chegg and using it to verify your work, because HW feedback is too slow. Most of the time you won't get your HW back until 1-3 days before the end of a quiz deadline. The only way to stay ahead of the curriculum is to do the quizzes before you receive HW feedback, but it's really risky to do the quizzes without feedback. So you'll either need to regularly engage in tutoring/office hours, or you'll need to subscribe to Chegg and cross-reference your solutions with other similar problems. Thankfully there are several editions of the course's textbook on Chegg, so you can work similar problems and verify your answers without violating OSU's academic honesty standards. The assigned HW problems are significantly more difficult than the problems outlined in the reading/lectures, and the curriculum skips most of the sections that cover the practical applications of discrete math. So just be prepared to learn a lot of theory without any context. You don't need any Geometry/Trigonmetry/Precalc skills for this class, just really strong Algebra skills (particularly exponents, summations, and inequalities). This class is a lot of work, and the content is very challenging, but the grading was very forgiving. The professor that I took the course with (Samina) was wonderful, and responded very quickly to all of my questions.",FA 2021,Yes,CS 162 - Intro to Computer Science II,3,6-12 hours,"This was a great class. I didn't do any prep for this class beyond 161, and I spent an average of 120/11=10.9 hours/week on this class, and I got an A. I really like the course's project-based approach towards learning. It features a great mixture of easy, medium, and hard projects, and for the most part, the modules did a pretty good job at preparing me to the do the assignments. The week 6 (recursion) and week 7 (linked list) modules were the only exception, those modules were pretty weak, and the assignments were very challenging (easy/medium difficulty Leetcode questions), so I had to go outside of the course content to figure out how to complete them. However every project's requirements are very clear, and the professors are very responsive on Ed, so you'll know exactly what you need to do in order to get an A.  The professors recorded some live homework help sessions, which was nice, but I didn't find them particularly useful, because the professor couldn't say much about the HW without giving away the solution. The professors also did some bonus live lectures that expanded upon 161/162 course content, which was cool, but I felt those were mostly tilted towards 161 students. This class's portfolio project was really fun, and I learned a lot. Overall, I think it's worth transferring in credit for 161/225, but 162 is such a well-designed class that I'd definitely recommend taking it at OSU.",No,,,,
12/15/2021 7:42:07,CS 361 - Software Engineering I,1,0-5 hours,"Most disappointing course of the CS curriculum so far.  Most of the core content is fluff that could have been covered in a 1-2 hour video.  Especially coming from a completely non-CS background, I feel so let down.  This course could have been a great opportunity to actually expose students to some of the tools and services modern software engineers are using.  Instead, this responsibility is essentially outsourced to the student through ""spike"" exercises.  It felt kind of silly trying to list pros and cons for many of these tools when I have no experience or basis for comparison.  However, this is really what the course boils down to: lots and lots of prescriptive busy work.  Be prepared for assignments that require very little thought or intellectual output but ask you to, ""write at least two sentences about topic X.""  The primary focus of the course is delivering a project and microservice, and it's really up to you how much you make of it.  What frustrated me, especially with taking other courses and a carrying day job like many post-bacc students, was that so much time was focused on low value busy work, it took away from the time I would have liked to dedicate to creating an awesome project.  The group work element feels very contrived and forced, as well.  Although you're on a ""team"", your interactions will primarily be focused around the team members from which you are receiving a service and to which you are providing a service, so make sure you are comfortable especially with those team members, as your success will be somewhat dependent on them.  Beyond that, the ""team"" element is more or less posting status updates into the ether that no one really cares about but you'll need to check the box for assignment requirements.  I guess the intent behind a lot of this is to emulate ""the real world"", but the execution comes off pretty poorly.  Of course, so much of the modern corporate world is this kind of useless BS that maybe it is actually good preparation.  Letaw was the instructor this fall, and to her credit, it is very evident she cares deeply about students and their success, but the curriculum is so bland and uninspired it really makes one question the value of a higher education.  If you're like me and are highly time constrained, my recommendation is to just hold your nose and get through this course.  It's almost impossible to not get an A if you just follow the instructions in the assignments.  I really fretted that my project was such garbage I would get a bad grade, but the requirements are so rubric driven, the ""quality"" of your project doesn't really matter for determining your grade.  If you do have a lot of time on your hands, then I think this course could go much better for you, as you really do have the opportunity to make a great project and create something you'd be proud to share with others including a prospective employer.  ",FA 2021,No,,,,,,,,,
12/15/2021 13:46:49,CS 290 - Web Development,2,6-12 hours,"Yes, this class is pretty copy and paste with projects. There are some changes to the copied code but go to office hours if your stuck so you don't spend hours going nowhere. With that said I still see the averages to be about a B+ in the projects(I had a 97.5 going into the final). The final was NOT EASY, class average of C. So the median grade in this class overall is a B. Based on speaking with classmates almost everyone's grades were dropped due to the final exam, so read the modules early, thoroughly, and multiple times! (I skimmed them until two days before the final and got a C- in the final and a B+ in the course)",FA 2021,Yes,CS 325 - Analysis of Algorithms,1,0-5 hours,"A little bit let down, easy A for me though so I can't complain too much. All the homework assignments are either pulled from leetcode or already on canvas. Midterm class avg: 84%, Final class avg: 86%. I found all hw solutions online so I thought I was going to bomb the midterm/finals (100 on midterm and 96.7 on final). The quizzes you can attempt twice and questions don't vary between attempts so another easy 100.",No,,,,
12/18/2021 7:01:37,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Start early and stay in the debugger until it works.,FA 2021,No,,,,,,,,,
12/26/2021 10:18:24,CS 362 - Software Engineering II,2,6-12 hours,"READ THE REQUIREMENTS CAREFULLY. 

The material isn't too bad and the professor/TA's are generally nice and communicative. But if you make any mistakes in your assignment, you will lose points and there will be no opportunity to rectify them. I incorrectly formatted a portion of an assignment and lost all points with no opportunity for partial credit or making the points back. Unfortunately, it dropped my grade an entire letter and made it impossible to get an A. 100% my fault but just be aware that your pleas will fall on deaf ears should you make a mistake.
",FA 2021,Yes,CS 325 - Analysis of Algorithms,3,13-18 hours,"This course is graded leniently and you should have plenty of time to get the work done. The professor provides a weekly help session on Fridays, strongly recommend you attend with questions to help clear up any issues you might be having with the work. Read the material and look over YouTube/Google for help (Abdul Bari, Geeks for Geeks, etc.). Also, the class allows for a page of notes (one sided) for the exams. If you take good notes as you go through the modules, it will help immensely with your studying.

It can still be a bit difficult to grasp some of the concepts (it was for me) but some students have noted they found it significantly easier so YMMV. Overall, this class feels like it's in a good place after the revamp.",No,,,,
12/29/2021 15:23:38,CS 261 - Data Structures,2,13-18 hours,Read the Explorations and PDFs. Don't procrastinate on assignments.,FA 2021,Yes,CS 290 - Web Development,4,13-18 hours,"Try to prepare ahead of time by taking a Web Dev class on Udemy, like Dr. Angela Yu's or Colt Steele's. There is way too much content shoved into this course and not enough time for it to be absorbed. It just whizzes by your head.",No,,,,
1/8/2022 20:03:59,CS 361 - Software Engineering I,3,6-12 hours,"This course is really what you make of it. In the iteration I took, we worked in teams of five students. Each team member had to create their own separate, individual application (which could be pretty much anything we wanted) that used another team member's microservice (and we each had to create a microservice that could be used by another teammate). It was difficult at first coming up with a project when the guidelines were so open-ended, but it was also a great opportunity to create a portfolio project. I would recommend getting into teams early (within the first few days at least) so that you know you are paired with people that will not wait until the last minute to get their work done. There was a bit of busy work here and there that took more time away from us getting our projects done than I would have liked, but overall I enjoyed this course.",FA 2021,Yes,CS 464 - Open Source Software,1,0-5 hours,"This class is was not a particularly difficult or time intensive course, but I found it useful since I was feeling nervous about contributing to OSS and this course actually requires you to contribute to OSS for the final project. So if you need someone to push you into contributing to OSS or want a course that does not take a lot of time, it is a great and chill course to participate in! (I also enjoyed the course content even if it was light.) I would not recommend this course if you are looking for a challenge.",No,,,,
2/2/2022 16:45:13,CS 352 - Introduction to Usability Engineering,1,13-18 hours,"I'm trying to get through this program without spending more money than necessary, so I only get 3 electives, and I regret that I spent an elective here. I don't think I got much out of it. The material was really lightweight and assignments aren't hard, but there was a lot of busywork. It's an easy class in that it wasn't hard to get an A, but I continually resented how much work it was for being 'easy.' There are a lot of long reports to write. Maybe part of the problem is that I had a team member who barely contributed anything but excuses. Group work is a huge component here. Our final project came out looking really polished, but I suspect we could have gotten away with less. I learned very little about UX that I didn't already know or couldn't have learned with a handful of Google searches.",FA 2021,Yes,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,"This class was hard, but rewarding! I learned a lot, and I felt like the course was well-designed. The material itself is very interesting. I spent many FULL weekends in front of the computer doing the assignments. If you don't want to do that, get started as early as possible. (In my case, taking 2 other classes, that was what was 'early as possible' for me sometimes.) If I could go back in time, I would have only taken one other class with this one. My final grade here was the lowest of the 3 classes I took, but it was still an A. The 2 exams are remotely proctored. It felt like I would have done better if I weren't anxious about being watched. I also would have done better if I hadn't developed an over-reliance on calculators over the years, which had me constantly second-guessing my mental math. Definitely practice tracing the execution of code on paper, it comes up a lot.",Yes,CS 162 - Intro to Computer Science II,3,6-12 hours,"Very similar to 161 in terms of course structure and the amount of work per week. I felt like it was very well designed and paced, and not any harder than 161. I wound up generally spending part of a day taking notes, then an entire long day (the due date) working on the assignments. And that was just enough time to complete them, but I would obviously NOT recommend getting started that late if at all possible. There's just a small amount of group work every few weeks. I recommend initiating any discussions with your group as soon as you can if you want to give the group enough time to really consider each other's code. Don't wait for someone else to do it."
2/9/2022 7:58:58,CS 161 - Intro to Computer Science I,2,6-12 hours,"This class is really a intro to an intro of computer science. Its very simple but not always easy. My advice is to carefully read the provided readme for each assignment and it would not hurt to take a intro Udemy course prior if you want to guarantee an A. I think this class is a really good time to understand the value of the various types of python objects.

I think the class can be challenging if paired with CS225.",Fall 2022,No,,,,,,,,,
2/11/2022 9:51:57,CS 225 - Discrete Structures in Computer Science,3,18+ hours,"Strong algebra skills will help in this course, but the most difficult part of it is the constant assignments and discussions. The professor was very active on the discussion board and very helpful. She truly wanted the students to understand the material and succeed. Try to stay ""ahead"" of schedule, because that will keep you from actually getting behind. Ahead of schedule will translate to on schedule.",FA 2021,Yes,CS 161 - Intro to Computer Science I,1,0-5 hours,"If you already have some programming skills, this course will take almost none of your time. If you don't have any programming experience, this course will take more time (and I would imagine be more difficult). It is truly meant as an introduction to programming, NOT as a challenging class for anyone who already has programming skills. The ULAs and professors were active on the discussion boards and ran a weekly live office hours/help session that was then posted to Canvas for anyone who couldn't make it live.",No,,,,
2/23/2022 9:49:53,CS 225 - Discrete Structures in Computer Science,2,18+ hours,"Start early and try to stay ahead! I've always loved math but was still a little nervous to take the class based on what people said about it. It seems to be an unpopular opinion, but I really liked the class, but it did keep me really busy. It was a lot of work and there were a lot of things to stay on top of (hw, group problems, discussions, quizzes, etc.), but the content itself wasn't overly difficult to comprehend. ",FA 2021,No,,,,,,,,,
2/23/2022 17:32:30,CS 261 - Data Structures,4,13-18 hours,,FA 2021,Yes,CS 290 - Web Development,3,6-12 hours,,No,,,,
2/23/2022 18:58:37,CS 261 - Data Structures,4,18+ hours,"This was the most time consuming class I have taken. Homework assignments are 20+ pages. You have to pass every gradescope auto-grader test....as that will essentially be your final grade for any project. The syllabus did not specify that the auto-grader would be the final grade. It mentioned that TA's would grade the assignments for partial credit, but this is not valid. No one manually grades your assignments. If you work full time, this course pairs best on its own. I do not feel as if this is catered towards working full-time professionals who need to take more than one class per term for tuition.",WI 2022,Yes,CS 290 - Web Development,3,13-18 hours,"This course is extremely interesting. It starts off very organized, but a lot of information is sort of crammed into modules. The assignments aren't that time consuming so you have much more time reading through and understanding the modules. I liked how this course covered all aspects of web dev including a bit of backend development with MongoDB, middleware programming in Express, as well as creating front end interfaces for applications.",No,,,,
2/26/2022 14:13:57,CS 161 - Intro to Computer Science I,1,0-5 hours,Follow the directions carefully and edit your code after it works to make it cleaner.,FA 2021,Yes,CS 225 - Discrete Structures in Computer Science,2,6-12 hours,"There are great teachers on youtube (Eddie Woo!!!), so don't bash your head against a wall if the OSU lessons aren't clicking.",No,,,,
3/2/2022 13:58:26,CS 344 - Operating Systems,4,18+ hours,"I took the Fall 2021 course, where they went back to the previous (not revamped) material. Take a LinkedIn Learning or other course for C++ prior to this. The class is in C, but knowing C++ makes you more marketable after the class and C is close enough that knowing C++ will still help you. The last two assignments are TOUGH. Start them early. I work full-time and took this class by itself, and I'm glad I did.",FA 2021,No,,,,,,,,,
3/9/2022 9:35:14,CS 161 - Intro to Computer Science I,1,0-5 hours,"I found this course very easy, however I had prior experience coding in C and also web dev by going through most of the Odin Project. It was a good intro to Python. If you are brand new to coding and have zero experience going into this course, you'll probably spend a bit more time on the assignments, especially the last 2 weeks where the projects scale up somewhat. I would highly recommend familiarizing yourself with basic coding concepts so you do not have to spend much time on this course (assuming you work or have other obligations). I took this course with CS225 (discrete maths) and 90-95% of my time doing school work after work was focused on that course. ",WI 2022,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"This class is a major time sink, so number 1 advice would be to start early on projects / homework assignments so that you aren't rushing to turn in assignments last minute. Get a calendar and write down when you plan on finishing assignments. ",No,,,,
3/10/2022 14:56:32,CS 161 - Intro to Computer Science I,2,0-5 hours,take the 100 Days of Code in Python Udemy course by Angela Yu before the semester starts,WI 2022,No,,,,,,,,,
3/13/2022 10:25:20,CS 340 - Introduction to Databases,2,6-12 hours,"This course feels like a lot of busy work. If you have time, you can make a pretty cool project. Most of the points are just participation. No need to go overboard if you don’t have time or need to pair this with a more difficult class.",WI 2022,Yes,CS 344 - Operating Systems,5,18+ hours,"If you can, wait to take this class once it’s been properly revamped. The instructor this term acknowledged that the course, in its current state, is unfocused and incoherent. The class was painful for all the wrong reasons. You can definitely get a good grade in this class but be prepared to put a lot of time into each project. The final is open book, open notes, etc. so you should be able to get an A if you have the modules in a word document for easy searching and a text editor up to run code examples.",No,,,,
3/14/2022 23:57:49,CS 162 - Intro to Computer Science II,2,0-5 hours,"Read the directions carefully, and before you start coding. Also, test your code; the visible tests are not enough to prove that your code works.",WI 2022,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Really really read the explorations AND the entire assignment description before you start. It is really hard to make adjustments to your code if you realize later that you did not follow the specs. The class is great and everything you'll need to know is in the explorations. A common mistake is to skim the explorations and/or the assignment specs. This leads to all sorts of problems, and takes way more time than deliberately reading and understanding everything before you start. Lastly, do the extra credit on projects 0-4, but skip it on 5 & 6 because it's not worth it.",No,,,,
3/15/2022 11:05:02,CS 344 - Operating Systems,4,13-18 hours,"This class is maybe a notch less difficult than everyone made it out to be, but difficult nonetheless. I felt like I understood the material well, and averaged anywhere between 10-20 hours per week. I haven't seen a project breakdown, so here's my opinion:
Assignment 1: Super easy intro assignment. Took me ~5 hours
Assignment 2: Starting to ramp up, in retrospect not crazy hard, but I was still learning C. Took me ~15 hours.
Assignment 3: The dreaded smallsh. Honestly this project is time consuming and moderately difficult, but they give you a grading script so there is 0 ambiguity of what's expected and what grade you'll get. Took me ~25 hours.
Assignment 4: A little breather assignment after smallsh. You're given a lot of starter code, but the topic takes a little bit to wrap your head around. Took me ~10 hours.
Assignment 5: A lot of people found this to be more difficult than smallsh. I thought it was more difficult conceptually, but they at least give you starter code. Took me ~20 hours
Assignment 6: Difficult to understand at first (this project was in Rust), but super easy to code because they give you starter code. Took me << 5 hours
Final: Overall really easy, since you learn so much from the projects. Open everything, so you can plug code examples into an editor and create a pdf with info from all explorations. ",WI 2022,Yes,CS 362 - Software Engineering II,3,0-5 hours,"I found 362 to be more difficult than 361, by far. The homeworks revolve around different styles of testing, and are purposefully ambiguous with the expected solution (you just need to meet certain criteria on Gradescope, but how you arrive there is up to you). The group work was only present in a single week, and the project itself was definitely moderately difficult, or at least more difficult than I expected from this class.
The final wasn't hard (pulls from explorations and the 2 quizzes), but it's 50 questions and proctored, covering a pretty large amount of material. If you spend time going over the large amount of info in this course, you'll be able to finish the final in under 30 minutes and easily get an A.",No,,,,
3/15/2022 21:05:54,CS 162 - Intro to Computer Science II,2,0-5 hours,"I feel like they may have course corrected a little bit too much with this iteration of CS 162. While the class felt like a natural extension of CS 161 and built on concepts in that course, it did not go deep enough into subjects and the final portfolio project felt very lackluster and simple.",WI 2022,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,Start on the coding assignments EARLY! I would spend the first couple of days outlining and getting a rough idea of each assignment down and then spend the rest of the time tweaking and making sure that all of the rubric requirements were met. A lot of the instructions for the assignments seem contradictory and confusing at first.,No,,,,
3/16/2022 12:49:48,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,"The class has everything you need to succeed. The learning materials are designed incredibly well. That said, for the assignments and the exams: study memory tracing. 
I think, to make up for a deficiency in understanding of how memory works, this class places great emphasis on your ability to follow the movements of the memory pointers. These include the stack pointer, the source and destination pointers, and memory allocators. By the time you reach the midterm, and most certainly by the time you reach the final, you should ensure you are comfortable with where any given piece of data will be placed in memory. You are given plenty of time to gain this understanding, but make sure you actually learn it.",WI 2022,Yes,CS 162 - Intro to Computer Science II,2,6-12 hours,"Don't expect to be able to complete every assignment the day it is due. Assignments 6 and 7 are regarded as the two most challenging by most students, past and present. The course gives you everything you need to succeed and is designed incredibly well. That said, be sure to break assignments up into multiple days -- at least two. I had a good deal of programming experience prior to entering this class and I found myself throwing a whole day away trying to complete projects the day they were due -- and I was incredibly dissatisfied at the end as I felt I was doing the bare minimum to get the job done. When I started my projects a day or two earlier, I still felt pressed, but by the end, I felt my programs were vetted, bug free, and something I could be proud of. I completed the class with some 102% (+A).",No,,,,
3/18/2022 13:02:00,CS 361 - Software Engineering I,1,0-5 hours,"Get your project and micro-service done early, and you coast the last 4 weeks.",W 2022,No,,,,,,,,,
3/18/2022 13:07:08,CS 161 - Intro to Computer Science I,1,0-5 hours,finish at least one of Dr. Angela Yu as well as Colt Steele Python Udemy courses respectively before the start of the semester.,WI 2022,No,,,,,,,,,
3/18/2022 13:09:38,CS 340 - Introduction to Databases,2,6-12 hours,,WI 2022,Yes,CS 344 - Operating Systems,4,13-18 hours,,Yes,CS 372 - Intro to Computer Networks,2,6-12 hours,
3/18/2022 13:24:09,CS 344 - Operating Systems,3,13-18 hours,Learn C prior to taking the course,WI 2022,No,,,,,,,,,
3/18/2022 13:25:20,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Get a head start the first two weeks. There aren't assignments, but there is a firehose of knowledge that is required to complete subsequent assignments.",FA 2021,No,,,,,,,,,
3/18/2022 13:31:52,CS 161 - Intro to Computer Science I,1,0-5 hours,This is the easiest course in the program. All of the material you need is right in canvas.,WI 2021,No,CS 162 - Intro to Computer Science II,1,6-12 hours,"This should be an easy course overall, but there are online resources should you get stuck.",No,,,,
3/18/2022 13:27:40,CS 290 - Web Development,3,13-18 hours,Maybe take a web dev course on udemy. ,WI 2021,No,,,,,,,,,
3/18/2022 13:30:19,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Start the final project early. I had an A in this course until that project. The final was harder than I anticipated. Make sure to study even though you’re brain dead after the final project. The course was organized, but the work load and difficulty was unreasonably tilted toward the end of the class. ",WI 2022,No,,,,,,,,,
3/18/2022 14:04:52,CS 225 - Discrete Structures in Computer Science,3,18+ hours,"You will lose points for proof format. Use the templates. The assignments are not hard, but it's impossible to complete them a few hours before they are due even if you know what the answers are. Writing with math symbols simply takes longer than writing in English. ",WI 2022,No,,,,,,,,,
3/18/2022 14:07:05,CS 290 - Web Development,2,0-5 hours,"Don’t be too intimidated by the overload of information. You only need to know it for the final honestly. The assignments are practically done for you in the videos inside the exploration and you change some stuff to make it work for the assignment. One of the assignments, the whole assignment walkthrough was posted on the assignment page. It’s too much crammed into one course. Not much stuck with me. The final this quarter was worth 30% of our grade and it was proctored. Practically having an A+ and possibly having to retake the class if you full tank the final that is comprehensive is sort of annoying. Really need to lower the percentage of the final. Hopefully they eventually make this a two class thing in the future. I want to learn more and will probably do so in the summer.",WI 2022,No,,,,,,,,,
3/18/2022 14:14:53,CS 344 - Operating Systems,5,13-18 hours,"If you are not familiar with C programming language, I would try to have a good grasp or understanding of pointers (creating, dereferencing), dynamic memory allocation (calloc, malloc, free), and data stream (stdin, stdout, file pointers) before going into this class, as it would make things significantly easier if you are not struggling with these during assignments. Smallsh is a project where you build a unix shell using multi-processing, and is intimidating if you do not have a firm grasp on how to properly start and end processes. After smallsh, don't slack off, because the difficulty continues with threading.",Winter 2022,Yes,CS 362 - Software Engineering II,2,0-5 hours,"This class was pretty easy, but I gave up and bombed the final because I didn't feel like studying, dropped my grade down to a B+. Don't be like me",No,,,,
3/18/2022 14:45:25,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,,FA 2021,No,,,,,,,,,
3/18/2022 14:46:01,CS 344 - Operating Systems,5,18+ hours,,WI 2022,No,,,,,,,,,
3/18/2022 14:47:08,CS 372 - Intro to Computer Networks,3,0-5 hours,"Start the projects early and try to read and really understand the provided skeleton code. Understanding how the skeleton code works will make the assignments much easier. I didn’t find the course material to be very helpful in completing the assignments, so I spent a lot of time reading external resources. ",WI 2022,No,,,,,,,,,
3/18/2022 14:47:44,CS 340 - Introduction to Databases,3,13-18 hours,,SP 2021,No,,,,,,,,,
3/18/2022 15:08:34,CS 290 - Web Development,3,18+ hours,My tip is to watch videos from Web Dev Simplified to supplement your studies in this class.,Winter 2022,No,,,,,,,,,
3/18/2022 15:10:21,CS 362 - Software Engineering II,2,6-12 hours,"Triple-check the assignment description, especially on weeks when you need to turn in a Canvas link in addition to Gradescope. If you miss a requirement, you get a zero. The final exam is fine if you review the modules carefully because some questions look for a very specific answer.",Winter 2022,Yes,CS 340 - Introduction to Databases,4,6-12 hours,"Make sure you have a handle on web development concepts. The class in its current form is an easy A because if you get full credit on the earlier project steps, you can turn in an incomplete final project without tanking your grade. ",No,,,,
3/18/2022 15:18:37,CS 261 - Data Structures,4,13-18 hours,"Make sure to get started early on the homeworks, or you’ll probably be in trouble. Don’t worry too much about not fully understanding Big O notation which is covered at the beginning of the class. The midterm was harder than the final. I found the hardest part was figuring out how to access different indexes or functions because certain parts of Python are nerfed, but you get the hang of it. I personally really enjoyed the class and learned a lot. The AVL tree assignment was very time consuming.",WI 2022,No,,,,,,,,,
3/18/2022 15:28:50,CS 225 - Discrete Structures in Computer Science,3,18+ hours,,WI 2022,Yes,CS 161 - Intro to Computer Science I,1,0-5 hours,,No,,,,
3/18/2022 15:48:46,CS 362 - Software Engineering II,2,0-5 hours,"The course is fairly easy. The weekly assignments do not take much time but the grading can be quite harsh. It’s so easy to lose points on silly things so be very careful when submitting assignments. For example, you’d get a 0/10 on an assignment if you forgot to make your repo private. I earned As in all other classes but I genuinely thought I might get a B in this class because I lost points on trivial things. Fortunately, I ended up with an A. I wasn’t going to let CS 362 be the class that did my 4.0 in. Anyway, an A is definitely feasible; just be aware that the grading can be punitive.

The group project wasn’t as bad as I expected it to be, but this is absolutely a ‘your mileage may vary’ thing. Every teammate needs to contribute to the central repo and code reviews need to be completed to merge each pull request so if your teammates are uncooperative and unresponsive, you’re not going to have a good time.

In terms of exams, there were 2 quizzes, both of which were open book and unproctored. The final exam was proctored (via Proctorio). You aren’t allowed a cheat sheet, but the test was fair. The average for my class was ~42/50. At least half the questions came from the quizzes and practice final. ",WI 2022,No,,,,,,,,,
3/18/2022 16:00:12,CS 261 - Data Structures,3,13-18 hours,,WI 2022,No,,,,,,,,,
3/18/2022 16:09:47,CS 161 - Intro to Computer Science I,1,0-5 hours,"Course material opens up two weeks in advance. If you’ve had any background in computer science this course won’t be that challenging. Try to stay a week ahead of when assignments are due, as life happens. The last two assignments are a leap in difficulty from the first portion of the course so don’t be fooled and forget to manage your time for those assignments. ",WI 2022,No,,,,,,,,,
3/18/2022 16:30:18,CS 340 - Introduction to Databases,3,0-5 hours,,WI 2022,Yes,CS 372 - Intro to Computer Networks,3,6-12 hours,,No,,,,
3/18/2022 16:30:55,CS 362 - Software Engineering II,1,0-5 hours,Pay attention to the rubric.,WI 2022,Yes,CS 344 - Operating Systems,4,13-18 hours,Start on assignments early. Pay attention to details on the test scripts for pertinent assignments. The final should raise your grade at the end of the quarter if you struggled. Take with an easier class.,No,,,,
3/18/2022 17:27:18,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Spend a lot of time understanding the stack and how to calculate base offset addresses.,WI 2022,No,,,,,,,,,
3/18/2022 19:05:23,CS 162 - Intro to Computer Science II,1,0-5 hours,"Work ahead on all the assignments. Many are much trickier than 162 and many assignments have Gradescope tests that are hidden. So be sure to test your code and all kinds of edge-cases thoroughly! Also, this course starts with a bang so be prepared to do some big projects the first 3 weeks.",WI 2022,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"This course provides you with everything you need to be successful. The explorations are thorough and helpful, just be sure to work through them and actually take notes. The videos he provides will walk you through most of the complex programming things. Be sure to stay ahead in this course. If you wait until the weekend Projects are due, you are screwed. Finally, do ALL the extra credit but Project 6. Doing the EC helped me to learn and understand the material far better than doing the bare minimum project. You will be glad you did come the mid-term and final. ",No,,,,
3/18/2022 19:14:33,CS 162 - Intro to Computer Science II,4,6-12 hours,"Start early, get ahead early, go to office hours.",WI 2022,No,,,,,,,,,
3/18/2022 19:42:40,CS 161 - Intro to Computer Science I,3,6-12 hours,study fundamentals if possible. Really basic syntax knowledge would have been helpful before getting started. ,SU 2021,No,,,,,,,,,
3/18/2022 19:56:41,CS 162 - Intro to Computer Science II,2,6-12 hours,,WI 2022,Yes,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,Start projects early!,No,,,,
3/18/2022 20:21:05,CS 161 - Intro to Computer Science I,1,0-5 hours,,WI 21,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,,No,,,,
3/18/2022 20:41:48,CS 162 - Intro to Computer Science II,1,6-12 hours,"First couple weeks had some intense projects, get ready for that.",WI 2022,No,,,,,,,,,
3/18/2022 20:42:42,CS 161 - Intro to Computer Science I,1,0-5 hours,"If you have any previous python experience, this will be fine.",FA 2021,Yes,CS 225 - Discrete Structures in Computer Science,2,18+ hours,"Stay on top of the material and put the time in, and you'll be fine.",No,,,,
3/18/2022 22:20:04,CS 352 - Introduction to Usability Engineering,2,0-5 hours,"The lectures are lengthy, but they don't have to be. None of the ""required readings"" are actually required. Instead of watching videos, you can view PowerPoint slides. For quizzes, time is unlimited, so you can open up the quiz and work backwards through the lectures to find what you need. Be warned, the quiz questions can vary from very simple to super fuzzy and imprecise. You can pick your own teams now, so make sure you go in with a reliable squad. Expect lots of writing.",Wi 2022,No,,,,,,,,,
3/19/2022 2:05:13,CS 161 - Intro to Computer Science I,1,6-12 hours,"Nothing to worry about this class, make sure you learn and code on your own.",Winter 2022,Yes,CS 225 - Discrete Structures in Computer Science,3,18+ hours,"Make sure to follow the schedule, and work ahead. ",No,,,,
3/19/2022 5:09:22,CS 225 - Discrete Structures in Computer Science,4,18+ hours,Start your assignments early.  Survival of the first 6 weeks is crucial.,WI 2022,Yes,CS 161 - Intro to Computer Science I,3,6-12 hours,"Be prepared for the difficulty to ramp up near the end of the term.  Module 9 and 10 had a new revamp Winter 2022 and module 9 was crazy difficult.  Hopefully they reorder those two.  ""Where to watch"" ugh...  You'll know when you get there.  Also watch the help sessions.",No,,,,
3/19/2022 6:09:10,CS 290 - Web Development,3,13-18 hours,"This course covers the MERN stack.  It has a lot of good information, but the 12 week term does not seem like enough to get in deep in many of the topics.  Recommend looking at free/cheap courses outside to prepare for this course.  Learning basic JS beforehand couldn't hurt either. ",WI 2022,Yes,CS 261 - Data Structures,3,6-12 hours,"The course is taught in Python, so if you haven't used it before I would study before the course begins (a primer is provided in the first week or two as well though).  
Open Data Structures is a textbook referenced occasionally throughout the course that is available for free online. 
When you're going through the assignments, follow the restrictions carefully, as seemingly trivial violations can cost you loads of points. ",No,,,,
3/19/2022 7:41:55,CS 362 - Software Engineering II,2,0-5 hours,Overall fairly easy class. Quizzes and assignments are straightforward as long as you read and understand the explorations. Try to find a group yourself for the end of term project instead of being assigned one. I had a bad experience with unhelpful group members.,WI 2022,Yes,CS 419/467 - Software Projects,2,6-12 hours,The group you have makes the difference for the class. It’s a quarter long project with a mid-quarter check in and weekly standup meeting assignments. We created a Unity game and was able to compartmentalize each team members requirements so that another team members efforts or lack thereof wouldn’t affect another. Select projects that you are interested in and won’t mind spending 10 hours a week working on. Overall very enjoyable and laid back class.,No,,,,
3/19/2022 10:11:53,CS 344 - Operating Systems,4,18+ hours,"Hardest course in the program but probably the most rewarding. The most time consuming assignments can seemingly take upwards of 30-40+ hours. If you're not used to doing this yet, make sure to plan out / draw a high-level diagram of the program before ever writing code and use that as a guide. Assignment requirements are clear and grading seems to be lenient. Getting a 100% in the course is absolutely doable given the time and effort.",SP 2022,Yes,CS 340 - Introduction to Databases,2,6-12 hours,"In terms of the project the class revolves around, it's as easy or challenging as you'd like it to be: using a framework you've never used before, using a more complicated project idea, or going beyond the requirements for learning purposes will clearly make it more challenging.

Overall, you work on a CRUD app with a partner for the duration of the course. If you've ever used a a simple web framework (e.g., Node or Flask) and connected it to a database before, the project is quite easy and can be mostly finished by week 5 or so if you front-load the work: the rest of the course being for tweaks based on the weekly peer reviews. If not, learning to build a simple CRUD app is what you'll be doing but some skeleton code is provided.",No,,,,
3/19/2022 11:37:17,CS 261 - Data Structures,3,13-18 hours,"I feel like each of the assignments is fairly straightforward, with the exception of AVL trees. Also be careful about accessing class variables or you will lose half the points on the method where you did it. Midterm was a bit of a shock, don’t spend too much time on any one question. The book linked above is also no longer required, but the pseudo code in the modules is still written with C in mind. Overall, not too bad",WI 2022,No,,,,,,,,,
3/19/2022 12:15:42,CS 340 - Introduction to Databases,1,6-12 hours,Try to get a good partner early on and start your project ASAP.  There will be different steps/due dates throughout the semester but you're just working on the same project the entire quarter so it's better not to wait around.  I believe there was plenty of time to get the project done but I could see how it would be easy to fall behind if you had a bad partner or if you guys decided to change project ideas/framework late in the quarter.  There's plenty of opportunities for extra credit and participation points so it's pretty easy to get an A.  ,WI 2021,No,,,,,,,,,
3/19/2022 16:10:41,CS 161 - Intro to Computer Science I,1,0-5 hours,,WI 2022,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,,No,,,,
3/19/2022 16:25:05,CS 161 - Intro to Computer Science I,2,0-5 hours,"Be ahead of the game. Read the whole ""Think Python"" book. ",WI/2022,No,,,,,,,,,
3/19/2022 19:09:24,CS 290 - Web Development,3,18+ hours,"The volume of material covered is pretty overwhelming. Since the scope of the class is so vast, the modules don’t go into much detail on any one topic, so nothing really sticks. Felt lost for most of the class. Would recommend answering the review questions at the end of each module as you go- don’t wait until the end to prepare for the final. ",WI 2022,No,,,,,,,,,
3/19/2022 20:43:46,CS 325 - Analysis of Algorithms,1,6-12 hours,"Great class. You get exposed to cool optimization problems using dynamic programming and different techniques to solve leetcode style problems. The workload is pretty light and the grading's very lenient, which allowed me to take time to absorb its challenging content. I know that this class has gotten a lot of hate in the past, but I think the course has gotten better, because a lot of people seemed to agree on Ed that this is one the best classes that they've taken and that they've learned a lot. The Canvas content was pretty good, but if you don't understand something, do take advantage of Abdul Bari. I personally never used outside resources until Week 9 (NP stuff) but still got an A. If you take time to read through Canvas modules and make sure you understand everything, do your HW and quizzes, you should be good.",WI 2022,No,,,,,,,,,
3/19/2022 22:21:15,CS 162 - Intro to Computer Science II,3,13-18 hours,Start early and don’t be afraid to ask for TA help or ask questions on Ed Discussions!,WI 2022,Yes,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,Project 5 and 6 are tough!! Ask for help and start asap on Project 6!!,No,,,,
3/20/2022 2:16:18,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"The first few weeks will be brain dump of terminology and theory, create flash cards with anki or some other application.

Take the weekly module summaries twice, even if you get a 100% on the first module summary attempt. This allows you to see additional questions that could potentially show up on quizzes/midterm exams. 

Know how to use your calculator for binary, hexadecimal conversions. Otherwise get familiar with the penjee calculator.

Do the extra credit for the earlier homework assignments. I had a 98% in the class up until the Final (which was brutal). 

I bought the text book ""Assembly Language for x86"" (Kip Irvine's) but didn't really use it. May be able to find it online if you need to reference it for anything.

Start your Midterm cheat sheet early and update it weekly (allowed 2 sided 8.5 x 11"" piece of paper).",WI 2022,No,,,,,,,,,
3/20/2022 7:34:13,CS 225 - Discrete Structures in Computer Science,2,13-18 hours,"Brush up on your algebra before the class (specifically exponents). Be prepared to spend a lot of time reading and doing assignments. You have assignments that take a lot of time, and discussions, which are just more homework questions that you talk about. Each week has two assignments due that covers different parts of the chapters to read, and the questions can be very challenging to figure out because you’ll need to use obscure algebraic methods to get from the question to the answer. It is possible to pass the course with an A, but it will take work!",WI 2022,Yes,CS 161 - Intro to Computer Science I,1,0-5 hours,"I already knew Python prior to taking this course, so it was very easy for me, but it may take some time for those that don’t have experience. It is a good introduction to programming, though. ",No,,,,
3/20/2022 7:41:54,CS 261 - Data Structures,3,18+ hours,Swallow pride and go to office hours,SP 2022,Yes,CS 290 - Web Development,1,18+ hours,Read the modules and study each of the review questions for the final,No,,,,
3/20/2022 7:48:23,CS 161 - Intro to Computer Science I,3,0-5 hours,"My approach to solving the assignments and  understanding new concepts is to read through the module, do practice, check solutions, read more recommended materials and finally do the assignment.
If I could not solve the assignment, I go to the help session to see if it was explained in the session or check the sample code discussed in the session. The help session will give similar examples to the assignment.",WI 2022,No,,,,,,,,,
3/20/2022 9:00:41,CS 290 - Web Development,3,13-18 hours,"Study the explorations weekly. The final is cumulative and can cover everything and anything from the modules! Don't wait until finals weeks to study, there is too much information and you won't retain it all cramming.",Winter 2022,No,,,,,,,,,
3/20/2022 9:27:52,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Start early and ask lots of questions. Don’t forget to do your own research outside of class materials. Also, it helps to look ahead.",WI 2022,Yes,CS 325 - Analysis of Algorithms,3,6-12 hours,"It’s honestly not as hard as I expected. I found the materials very interesting and I really enjoyed the class. Grading is inconsistent and TAs are unhelpful, so always double check your grades for errors. If you don’t get a rubric back, be very suspicious. I got screwed over out of a couple points on a couple projects, and those points were literally the make or break between an a and a b ",Yes,CS 361 - Software Engineering I,1,0-5 hours,"Just do something you’re excited about doing. But know that 98% of the course is about graphical user interfaces. Become familiar with making a GUI early on, you’ll spend most of your time doing this. Also, the microservices don’t actually have to be helpful, they can just be random number generators or turn json data into a string"
3/20/2022 9:29:17,CS 161 - Intro to Computer Science I,2,6-12 hours,,WI 2022,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,,No,,,,
3/20/2022 9:47:55,CS 372 - Intro to Computer Networks,2,6-12 hours,"Basic ideas are sound, execution is awful. The course layout is a mess--assignments don't relate to the modules, modules/book don't cover the material on the quizzes, and the lectures are the worst I've seen in the program. Start projects early--they are not difficult, but there is essentially no rubric or requirements, so you're going to have to ask a LOT of questions, and the instruction team is not very responsive. The course badly needs to be redone, but it seems like there's no sense of urgency because it's required for Cloud/Mobile. If you have to take it, look up lecture notes from other universities, because this course isn't teaching the concepts with any kind of rigor.",WI 2022,Yes,CS 344 - Operating Systems,5,18+ hours,"Wait to take it if you can; there's a planned revamp because it is an absolute wreck right now. If you can't wait, learn C before you start, because this course does a terrible job of teaching it, so you'll end up relying on outside resources anyway. I spent well over 40 hours per week in this course, got an A, and can't say I learned much of anything about operating systems, just a patchwork of C string manipulation. Be prepared for minimal TA engagement and zero assignment feedback--you are on your own in this course. ",No,,,,
3/20/2022 11:45:00,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"Get in a good group that will follow internal deadlines and you'll be fine. There is a decent amount of written work but very clear grading guidelines and a lot can be copy-pasted from one week to the next. Open book quizzes with no time limits on the modules most weeks. No midterm but that week is HEAVY on work, don't fall behind! This was the first term with a new instructor, Hannah Scott. Groups are now 2-3 people and some reports were revised, but kinks were still being worked out in this term. Still an easy A.",WI 2022,Yes,CS 261 - Data Structures,3,6-12 hours,"Save your extra days for AVL and either HashMaps or the final project (the final project itself was not hard, but having the extra time to focus on other classes at the end is nice). Most projects were easy if you are comfortable with your programming skills. Office hours were held in abundance throughout the week. Several of the UAs were really great in office hours, Scovil was not (vague and unhelpful). Try to go when the UAs are on if you can. A lot of people used outside resources (YouTube lectures) for help with understanding the structures, I personally was fine with just the explorations but I have taken some upper-division programming coursework prior to this course.",No,,,,
3/20/2022 12:21:44,CS 340 - Introduction to Databases,1,0-5 hours,Find a good partner early and don’t wait until the last minute to get website working ,WI 2022,Yes,CS 325 - Analysis of Algorithms,3,6-12 hours,Watch YouTube videos of Abdul Bari/MIT to support learning and you will get a good grade.  The concepts are a bit difficult but the path is their to learn alot. ,No,,,,
3/20/2022 13:50:52,CS 225 - Discrete Structures in Computer Science,2,18+ hours,Just try to go ahead as much as you can ,WI 2021,No,,,,,,,,,
3/20/2022 16:10:22,CS 325 - Analysis of Algorithms,3,6-12 hours,"First two weeks and the last week are the most time consuming. They can take you 15-20 hours. All the other weeks really just depend on how comfortable you are with leetcode type problems and don't take you more than 10-ish hours if you're focused. 

In order to actually learn material I had to rely on Abdul Bari and B2B SWE on YouTube and leetcode learning modules if they covered the topics. Material isn't the greatest and can sometimes be confusing if you try to read the canvas explorations first. 

Overall, the class isn't as bad as previous iterations had it. It is just annoying when you have to use outside resources to really learn the material.",WI 2022,Yes,CS 352 - Introduction to Usability Engineering,2,13-18 hours,"This class isn't difficult, but I personally do not recommend taking it with another class that has a heavy work load. A lot of the assignments in this class feel like they have you do it ""just because"" and don't really add anything. 

You have biweekly quizzes and the questions are ridiculous. If you're lucky the material will be covered in the modules but other times you have to hunt it down on the internet and even then can't find an answer. It's very annoying and just feels pointless. ",No,,,,
3/20/2022 18:27:11,CS 162 - Intro to Computer Science II,2,0-5 hours,"Make sure you have a solid understanding of OOP and are comfortable with Python. If 161's final project was really difficult, spend some time trying out more projects like that or you'll be in trouble in 162. If you're comfortable with OOP and Python, this will likely be a breeze.",WI 2022,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Start everything as soon as the module comes out. Do not wait to start assignments. Always attempt the extra credit. The midterm was difficult, the final was brutal, but you can recover from subpar midterm/final grades with excellent module summary, quiz, and assignment grades. Having knowledge of a language such as C and understanding pointers and memory allocation will make Assembly much easier for you.",No,,,,
3/20/2022 21:53:48,CS 261 - Data Structures,2,6-12 hours,,WI 2022,Yes,CS 290 - Web Development,2,6-12 hours,,No,,,,
3/21/2022 8:20:42,CS 325 - Analysis of Algorithms,4,13-18 hours,This is a challenging class but it's pretty well put together considering how low level the content is. Try to get 100% on the projects and make use of the open book weekly quiz retakes.  The midterm and final will wreck you if you don't have 100% everywhere else.,WI 2022,Yes,CS 340 - Introduction to Databases,2,0-5 hours,I guess they are revamping the course. As it is now it's a lot of busy work and a little building a crud app. The school flip servers are a pain so use Heroku.,No,,,,
3/21/2022 9:40:27,CS 352 - Introduction to Usability Engineering,1,0-5 hours,"This class has a lot of busywork, but overall is a super easy course and an easy A. No midterm or final, but the midterm week has a lot of work! That week pretty much burned me out for nearly the rest of the term. Lots of writing (and I'm one of the weird cs students who actually enjoys writing!), but for the most part you can copy and paste from your previous submissions, or tweak a little here and there. Biweekly quizzes, which are open note and no time limit. Keep in mind, some questions are super vague and hard to find. I'd suggest opening all of the PowerPoints and reading material, then using ctrl + F to search for keywords related to the questions. ",WI 2022,Yes,CS 361 - Software Engineering I,1,0-5 hours,"The course doesn't really ramp up until about week 4 or 5. I would get as much done as possible before then if you can, so you're not as stressed for the second half of the term. Overall, it's an easy course if you have a good group. No exams, and biweekly quizzes which are open note and you can take as many times as you want. Also, lots of extra credit options available. I think most people in the class ended up with over 100%.",Yes,CS 325 - Analysis of Algorithms,4,13-18 hours,"As long as you're actively searching out material online to supplement, you'll be fine. I honestly just skimmed the modules, cuz they'd leave me more confused. They're worded poorly with lots of typos. I suggest figuring out what the modules want you to know, then lookup Abdul Bari videos, Back to Back SWE videos, and Grokking Algorithms book. The instructors do seem to care, they put in the effort to give weekly review sessions if the students want it, and are actively engaged in Ed. "
3/21/2022 11:51:25,CS 225 - Discrete Structures in Computer Science,4,6-12 hours,"Use office hours, preferably with professor",WI 2022,Yes,CS 161 - Intro to Computer Science I,1,0-5 hours,Go to the homework helps,No,,,,
3/21/2022 12:26:55,CS 325 - Analysis of Algorithms,3,6-12 hours,"Abdul Bari on youtube will be your savior! Start every assignment as early as possible. Weeks 1, 2, and 9 are the hardest weeks, just stick with it! I would describe the course as an easy B, and an A is achievable with some hard work. The assignments have you write implementations of common algorithms, and most of the code is straight up given to you in the discussion, or you can find lots of resources on Leetcode and the internet in general. There are weekly quizzes that are open note and can be taken twice, so easy 100 percents on those. Bi-weekly group projects are worth 5-10 points each and consist of writing discussion board posts about your approach to a given problem from the homework, and then collaborating to submit one member's work as the best one. The only ""hard"" parts of this class are the midterm and final that are worth way too much of the final grade, and can tank your grade accordingly. They are proctored and you are allowed a 1 sided cheat sheet, so that helps. I finished with an A, so it definitely can be done!",WI 2022,No,,,,,,,,,
3/21/2022 12:28:49,CS 492 - Mobile Software Development,3,13-18 hours,"Watch the videos as you're working on the projects.

The videos in the course are well-laid out and show you the process of developing features for projects for the class. However, the videos are also fairly old and were created before Dart implemented null safety, so some of the code you will be writing vs what is shown in the videos will be different. I found that null safety was pretty easy to work around once you got the hang of it, and the modules do come with updated/extra code files that take null safety into consideration.",WI 2022,Yes,CS 419 (Legacy)/467 - Capstone,1,6-12 hours,,No,,,,
3/21/2022 12:42:12,CS 290 - Web Development,3,6-12 hours,Don't miss any points on projects because the final exam is awful. I went in with a 98% and came out with a B+ ,WI2022,No,,,,,,,,,
3/21/2022 13:07:34,CS 161 - Intro to Computer Science I,2,0-5 hours,"The modules are helpful, but be prepared to go to office hours and get help from your TAs if you do not understand a concept.",Winter 2022,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"Brush up on your algebra, including common factors, quadratic formula, factorials, inequalities ",No,,,,
3/21/2022 13:33:25,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"The first weeks explorations will be important throughout the whole course, become familiar with binary and hexidecimal notation. Memory addresses and different groupings of bits. Into bytes, words, swords",Winter 2021,No,,,,,,,,,
3/21/2022 14:52:06,CS 492 - Mobile Software Development,3,13-18 hours,"This class uses Android Studio, Dart language and Flutter. The videos are great but are outdated so you spend a good amount of time trying to figure out the updated way to code the examples. Another detail is that Windows 11 and Android Studio are still trying to make friends so there might be issues when loading the emulator. All assignments require a video demonstrating your project. My emulator was so incredibly slow that it took me hours if not days to get a 3 min video completed. It was stressful and frustrating as I spent much more time troubleshooting the emulator settings, restarting, opening Task Manager, reading stackoverflow on how to improve emulator performance, etc than actually learning the class. Besides these technical issues, is overall a good class. ",WI 2022,Yes,CS 419 (Legacy)/467 - Capstone,1,6-12 hours,"Choose a topic you like. Mine didn't require code, just analyses, research and report. Very straightforward. Group got 100% in every assignment. Easy A class. ",No,,,,
3/21/2022 15:01:03,CS 225 - Discrete Structures in Computer Science,5,13-18 hours,"Start on the reading and assignments immediately. Don’t get beaten down trying to understand everything in the lectures/readings—get a grasp of the major ideas, then proceed to the exercises. That’s where you’ll really master the material.",WI 2022,No,,,,,,,,,
3/21/2022 15:25:46,CS 261 - Data Structures,2,0-5 hours,"It is definitely helpful to look for videos on the data structures, as some of the explanations are wanting. That said, do not forget that you are neve allowed to use built-in methods from Python. This is where people run into trouble. Doing something like some_val = len(some_array) will get you a massive deduction. You need to look at the way the starter code is implemented and find the correct method (e.g. some_val = some_array.length()). ",WI 2022,No,,,,,,,,,
3/21/2022 15:54:27,CS 261 - Data Structures,4,13-18 hours,"Talk to the TAs if you get stuck. The size of the projects are significant/detailed and the graders are picky. Pay attention to the assignment requirements. I work full-time and took this with 290. Spent about ~15 hours a week on each assignment. Everything ramps up to the AVL assignment, then the class becomes a little more chill with Hash Maps as the final assignment. The AVL assignment will be a time sink and is known as the toughest assignment in the class (took me about 25 hours to complete). Midterm was tougher than the final. Again, pay attention to assignment specifications! They will mark you down for little things that you may have just glanced over.",WI 2022,Yes,CS 290 - Web Development,3,6-12 hours,"Assignment code is spoon-fed to you which I didn't like, but there's so much material that is covered that it's almost necessary. The Final exam was weighted 30% of overall grade which I felt was unfair considering you could fail the class with 100% on assignments. Prepare yourself with the sheer amount of material that will be covered; it's ridiculous and borderline impossible to absorb everything.",No,,,,
3/21/2022 16:17:14,CS 162 - Intro to Computer Science II,1,6-12 hours,Make sure to allocate some extra time to the first couple projects as they are a big step in amount of work from the previous course. ,WI,Yes,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"Projects 4-6 will most likely take longer than you expect. Debugging them may take an additional day or two, so try and get the project mostly functional several days before the due date so you can have 2+ days of debugging and attempting the extra credit (ideally 3-4 depending on how comfortable you are with material). Extra credit on these specific projects could take up to an additional 4+ hours of work.",No,,,,
3/21/2022 16:26:27,CS 427 - Cryptography,4,6-12 hours,"Create a discord, post it on ed discussions, read the textbook early, start the hw early, ask your classmates, TA, and professor for help.",WI 2022,No,,,,,,,,,
3/21/2022 16:32:31,CS 271 - Computer Architecture & Assembly Language,5,18+ hours,start early,WI 2022,No,,,,,,,,,
3/21/2022 17:00:15,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,,WI 2022,Yes,CS 340 - Introduction to Databases,2,0-5 hours,,No,,,,
3/21/2022 17:27:02,CS 290 - Web Development,3,6-12 hours,Take a web dev course online first. Study for the final way before the last week.,WI 2022,Yes,CS 261 - Data Structures,3,6-12 hours,"Read and follow the assignment requirements very carefully. I got full points on all the assignments by doing this, but it seems like a lot of people lost points for minor things. ",No,,,,
3/21/2022 18:19:04,CS 161 - Intro to Computer Science I,2,6-12 hours,,WI 2022,No,,,,,,,,,
3/21/2022 18:32:00,CS 492 - Mobile Software Development,4,13-18 hours,"Start the last two projects early, especially project 4. You will likely need some help from TAs and office hours get busy during the 2nd week. I also recommend reading about the project requirements BEFORE you start reading and watching the exploration videos for the module. A lot of your project code will be shown and discussed during the videos and this will allow you to begin coding your project as you work through the module. Other than the difficulty, HIGHLY recommended class.  Even if you don't have plans for mobile development in the future it helped me to understand streaming and asynchronous coding (reactive programming) so much better.",WI 2022,No,,,,,,,,,
3/21/2022 18:46:52,CS 372 - Intro to Computer Networks,2,6-12 hours,,FA 2021,No,,,,,,,,,
3/21/2022 19:39:21,CS 261 - Data Structures,2,13-18 hours,"Start assignments early. I did not, but wish I had",WI2022,Yes,CS 340 - Introduction to Databases,1,6-12 hours,"You can pretty easily get ahead in this class, it’s basically just a rehash of CS290 except with mysql instead of mongodb",No,,,,
3/21/2022 21:01:19,CS 162 - Intro to Computer Science II,3,6-12 hours,"If you took CS 161 at OSU, you’ll be surprised at the scale of the weekly projects in CS 162. Do everything you can to stay ahead in this class. The project for week 1 is a breeze. Don’t let that fool you. Get project 1 done early and immediately start studying for week 2 so you can get a jump on project 2. I made the mistake of thinking the cadence of this course would be like CS 161 and started studying/projects the Monday before it was due. I work full time and had a lot of very late nights (talking 2am) or full weekends completing projects. It’s not the material was super hard to grasp. The real challenge came from the size of the projects. The first few assignments felt like the final in CS 161 but instead of having two weeks to do that, you only got a week. The good news is that I walked away feeling confident that I knew how to use Python. ",WI 2022,No,,,,,,,,,
3/21/2022 21:47:42,CS 492 - Mobile Software Development,5,13-18 hours,The course material is now out of date. There were some major changes to dart/flutter that makes this class somewhat painful now. Flutter is an annoying nested widget pyramid of a framework. The projects take a surprising amount of time considering how little you are actually accomplishing in them. I can do the same things in Xcode/Swift in like 1/4th the time after taking a Udemy course. I would recommend skipping this elective and doing one of the excellent online native iOS/Android courses or React Native and using your elective on something better. ,WI 2021,Yes,CS 344 - Operating Systems,5,18+ hours,"The projects are hard and take a ton of work, but the requirements are clear and grading is straightforward. This class has a ton of TAs with great availability. Start the projects early and go to office hours if you get stuck. ",No,,,,
3/21/2022 22:00:25,CS 372 - Intro to Computer Networks,2,6-12 hours,Spend some time on the coding projects but don't stress too much.  Making an effort is enough to get an A. ,WI 2022,No,,,,,,,,,
3/21/2022 23:17:55,CS 290 - Web Development,1,0-5 hours,Go over lecture videos,WI 2022,Yes,CS 261 - Data Structures,3,6-12 hours,"Watch 3rd party content, make a plan to solve. ",No,,,,
3/22/2022 8:33:02,CS 161 - Intro to Computer Science I,2,6-12 hours,,Winter 2022,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,,No,,,,
3/22/2022 9:40:15,CS 271 - Computer Architecture & Assembly Language,4,13-18 hours,"Read (part of) Kip Irvine before the quarter starts, start all projects early, do all extra credits, do every Module Summary Exercise twice, study for the tests.",WI 2022,No,,,,,,,,,
3/22/2022 9:41:14,CS 325 - Analysis of Algorithms,4,13-18 hours,"Start homework early, attend the review sessions each week.",FA 2021,No,,,,,,,,,
3/22/2022 15:26:12,CS 161 - Intro to Computer Science I,1,0-5 hours,Class is structured well. Prof has weekly office hours sessions on zoom that can help a LOT with the homework. Try not to wait until the day before or the day of to start assignments. ,WI 2022,Yes,CS 225 - Discrete Structures in Computer Science,5,18+ hours,"Prepare to have this class take over your life. Sounds dramatic but with all of the assignments (two per week), the canvas discussions (with corrections) and the quizzes...it's a lot of work. I took this class with 161 and I work full time as an swe. I struggled every single week to get by. I didn't spend much time on 161, if I didn't have a background in swe already I'm not sure how I would've made it. It's possible to get an A but you'll need to work for it. I did the readings and looked at Youtube tutorials online. The lecture videos were not as helpful for me. Discussions and HW will save your grade. Good luck!",No,,,,
3/22/2022 17:53:23,CS 161 - Intro to Computer Science I,1,6-12 hours,,wi22,Yes,CS 225 - Discrete Structures in Computer Science,4,18+ hours,,No,,,,
3/22/2022 18:41:20,CS 261 - Data Structures,5,13-18 hours,"Most of the assignments are good, but the modules and office hours were pretty much useless. The modules do not provide the code examples/edge cases necessary to complete assignments, so you need to use external resources to actually learn the material. I recommend reading ""Grokking Algorithms"" by Aditya Bhargava, and buying Abdul Bari's Data Structure class on Udemy. Bari's theory videos are free to watch on Youtube, but you need to buy the course in order to get Bari's implementation videos, and those make a big difference. Replace 261's modules with the matching topics in Bari's course, and just do 261's assignments and practice quizzes. Both 261 and Bari teach data structures with C language pseudocode, but Bari explains it 10x better. If you get stuck, then you can try going through the modules. They'll make more sense after going through Bari. There is no content on the exams that is unique to the modules/extra readings. The optional module quizzes are very representative of the questions that will be asked on the exams. So just do Bari+Quizzes, and you'll be solid for the exams. This class does a great job ramping up people new to Python during the first 3 weeks, so don't worry if this your first class in Python. The assignments involve doing a ton of Leetcode-style questions, ranging from easy (Fizzbuzz) to hard (AVL). Save some of your deadline extension days for the AVL assignment.",WI 2022,Yes,CS 290 - Web Development,3,6-12 hours,"I recommend learning web dev before doing this course. 290's curriculum is taught in a weird order. Several videos were recorded in a different order than they were presented, and several submodules were written in a different order than they were presented. There is very little connection between one week and the next. So you won't understand what or why you're learning something every individual week, until you reach the very end of the class. The only prep book that I'd really recommend would be ""JavaScript for Python Programmers"" by Brad Miller. Online courses are better for web dev. Colt Steele's web dev bootcamp, Angela Yu's web dev bootcamp, FreeCodeCamp's certs, or Odin Project are all good alternatives to 290. All of those cover 290's MERN stack, and teach concepts in a more logical order. 290's modules contain a firehose of information that is not necessary to complete the assignments, but it is necessary for the final exam. I think there was a total of something like 200+ review questions at the end of the modules, and the 40 final exam questions were drawn from a pretty good sample of that list. If you want to get an A in the class, then you'll need to memorize those question-answer pairs, due to the 30% weight final. You will produce a full stack MERN app with a REST API by the end of the course, but you probably won't remember how to code it from scratch, because of the disorganized curriculum. However the profs and TAs are great and very helpful, if you have problems then it's definitely worth going to office hours.",No,,,,
3/22/2022 20:45:35,CS 344 - Operating Systems,2,13-18 hours,"A lot of students argue that the course is essentially a string manipulation and memory management course in C. I don't entirely agree but it will definitely help you to get a solid foundation in the basics of C in the beginning so that you don't spend unnecessary time debugging simple concepts later on. I did not have any experience with C prior to this course but spent a good amount of time on the first two projects making sure I knew how to debug properly and use Valgrind to check for memory leaks. I think this will really save future students a lot of time as the actual OS concepts the assignments implement are fairly trivial; for the most part, you're simply extending code the modules provide.

I did end up investing extra time on my own (outside of reading the modules) to learn how to use double pointers and to learn how to implement a basic hash table structure for better time complexity. This was not strictly necessary to complete the assignments but would be something I would recommend students learn.

The assignments are all very doable if you learn the foundational concepts early on and start the projects early (it will probably be a fairly time intensive course for most students). The grading criteria is very clear and lenient as well. The final is open book and tests basic concepts.",WI 2022,Yes,CS 352 - Introduction to Usability Engineering,1,6-12 hours,"I would only recommend this course to students who have a strong interest in becoming usability researchers. After this course, I definitely have zero interest in this field. This was the most frustrating class I've taken at OSU because I don't think I learned much if anything of value (most of it felt like common sense) while still being expected to pump out long and tedious papers every week. There is absolutely zero coding in this course. You do get to learn how to use a UX tool called Figma which was fun to play with at first but everything else feels like busy work. If all you're looking for is an easy A elective, then take this course but otherwise I'd skip it.",No,,,,
3/22/2022 20:57:11,CS 352 - Introduction to Usability Engineering,3,6-12 hours,"The course content is extremely easy. However, I would advise against taking this class because it is basically a throwaway elective for credits. Everything that you learn is common sense. The grading is pretty lenient, and it is overall an easy 'A'. However, be prepared to write several page long reports almost every week. These reports are time consuming busy work that you have to get through, but they grade pretty leniently.",WI 2022,Yes,CS 344 - Operating Systems,4,18+ hours,"Very time consuming projects. I felt that I learned a lot in this course, even though the content was kind of messy. Spend time in Linux learning and compiling C, and it will make your time a lot better in this course as far as learning the actual course content. If you don't, you're going to spend a lot of valuable class time figuring out C, compilation errors, segmentation errors, etc, and it won't be conducive to learning the actual OS concepts in the class.",Yes,CS 325 - Analysis of Algorithms,4,13-18 hours,"Took the revised version of this course, and it was a great experience. Doshna is an extremely caring instructor, and always tried to work with the students whenever they had any concerns, including questions, problems, and anything that they felt might have been unfair as far as grading. She really knows her stuff, and it shows in the Webinars that she takes time out of her schedule to do for the students."
3/22/2022 21:39:10,CS 271 - Computer Architecture & Assembly Language,3,13-18 hours,"This class was difficult but fair. It will seem like a lot to learn at first, but keep plugging away -- almost every concept is successively built on in the projects, so once you learn them, you will get plenty of chances to practice and keep them fresh in your mind. Start projects early. Some of them are slightly more difficult than they seem at first. Personally, project 5 took me the most time to complete, and the portfolio project seemed a bit easier. The mid-term and final are a bit harder than the module summary exercises. They contain some questions that you won't see on the summary exercises (especially the final), but as long as you learn the underlying concepts, you should be fine. The quizzes will give you a better metric of how difficult the tests are. I was nervous about the difficulty of this class at first, but ended up really enjoying it. Good luck!",WI 2022,Yes,CS 290 - Web Development,3,6-12 hours,"This class was more frustrating than it was difficult. I went into it with 0 web development knowledge, and now wish it hadn't been my first exposure to the topic. I would recommend transferring it from another school if you're able to. 

The projects are all pretty easy because you don't really have to write anything new. Most of it is copy and paste from the explorations, with a few minor edits. I tried going through the explorations in their entirety before working on the projects, but there's a huge amount of content and it is presented in a very disjointed manner that constantly had me wondering what exactly I was learning and why. I inevitably started each project with no clue about what any of it meant. All of that said, it is not hard to get an A in the course -- keep up with the projects and make sure you broadly understand the concepts (especially JS). The final is basically a trivia of the explorations. They will provide a practice quiz that covers pretty much every topic that the final goes over. Just pay careful attention to the sections that each question comes from and you should be OK. ",Yes,CS 362 - Software Engineering II,1,0-5 hours,"Very very laid back class. Perfect for pairing with a difficult class. The content is not difficult, and it doesn't take long to finish up the assignments. Even the group project is pretty chill, but it could become a lot of busy work if one of your teammates is a no-show, so choose carefully. The final is also pretty easy. Each module as a review at the end with 3-4 questions. I reviewed these exclusively for the final and got an A.
For as easy as it is, the class manages to be pretty interesting. I'm glad I took it early on in the program. Most of the testing techniques, especially TDD and random testing, seem like they'll be very useful. It also introduces GitHub in a way that is accessible to beginners."
3/22/2022 22:03:25,CS 372 - Intro to Computer Networks,3,6-12 hours,"Be very patient. The material, and outdated skeleton codes, take some time to understand and digest.",WI 2021,No,,,,,,,,,
3/23/2022 6:11:24,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"The course ramps up in difficulty at the end of the term, particularly for the final project, so just be sure to give yourself plenty of time to work through it.",WI 2022,No,,,,,,,,,
3/23/2022 9:08:25,CS 427 - Cryptography,4,13-18 hours,"This is a difficult class that needs to be reworked. The material is interesting, however the course structure is terrible. They give you a textbook and that is all. The are no practice problems, no supplemental teaching material, and no lectures with additional information (there are summary videos for each textbook chapter, but they don't provide any new information). The midterm and final are each worth 20% of your grade and are closed book, closed note, proctored exams. The instructor and TA were very helpful, but they need way more TAs for this class, right now there is only 1 which is crazy. This resulted in 0 feedback on our homework assignments, so you have no idea what you did wrong when you were docked points.",WI 2022,Yes,CS 325 - Analysis of Algorithms,2,6-12 hours,,Yes,CS 361 - Software Engineering I,1,6-12 hours,Fun class! You get to pick (practically) any project you want to work on and make it. I would recommend looking at the due dates for the 10 Assignments so you know the required timeline for your project. The date to submit a Minimum Viable Product (MVP) snuck up on me.
3/23/2022 17:41:48,CS 344 - Operating Systems,5,18+ hours,"Wait for the revamp if you can. The new instructor seems to understand how terrible the class is and genuinely wants to improve the class. Highly recommend taking an online class in C that puts a lot of focus on strings before taking this class. Also, find Brewster's old lectures on youtube if you can and watch those before reading the modules since those are basically a wall of text. It takes a little bit to figure out which videos correspond to which modules but is worth the effort.",WI 2022,No,,,,,,,,,
3/24/2022 8:01:18,CS 427 - Cryptography,5,18+ hours,"Very interesting coursework, but very difficult assignments. You cannot miss a single assignment, or else you might have to worry about a fail grade. The exams were easier than the assignments, but not by much. I saw much gnashing and wailing of teeth in this course. Even as someone who enjoys math and theoretical topics like these, I found that the course didn't really prepare you all that well for the assignments. Had an awesome TA but there's only so much they can do. Good luck!",WI 2022,Yes,CS 340 - Introduction to Databases,3,6-12 hours,,Yes,CS 340 - Introduction to Databases,3,6-12 hours,
3/24/2022 10:25:35,CS 344 - Operating Systems,5,18+ hours,Take this class alone. Go to office hours every week. ,WI 2022,No,,,,,,,,,
3/24/2022 13:13:00,CS 340 - Introduction to Databases,3,0-5 hours,Get a good partner to work with or you will be doing most of the work yourself. ,WI2022,No,,,,,,,,,
3/24/2022 21:30:57,CS 344 - Operating Systems,2,13-18 hours,,WI 2022,Yes,CS 372 - Intro to Computer Networks,2,6-12 hours,,No,,,,
3/25/2022 13:39:39,CS 161 - Intro to Computer Science I,1,0-5 hours,Learn some Python basics before taking it.,WI 2022,Yes,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,Review algebra and dedicate a lot of time for this class.,No,,,,
3/25/2022 21:54:44,CS 290 - Web Development,3,6-12 hours,Answer end of module review questions as you go and study them for final.,WI 2022,Yes,CS 271 - Computer Architecture & Assembly Language,2,6-12 hours,Try to get 100s on projects. Extra credits on early projects are easier to implement.,No,,,,
3/28/2022 7:21:46,CS 271 - Computer Architecture & Assembly Language,4,6-12 hours,"Do the early extra credit on the first few assignments (extra credit on assignment 5 and 6 is likely not worth your time, though). Collaborate on the weekly summary exercises (you’re encouraged to do it, and it helps immensely with understanding the concepts). Start your assignments early (within a couple days of being released) so you have plenty of time to figure out how to do them. Read all the Ed discussion posts; it’s likely people are asking questions about things you haven’t even considered. ",WI 2022,Yes,CS 162 - Intro to Computer Science II,1,0-5 hours,Keep on top of the programming assignments as soon as they’re released and you should succeed. Don’t be afraid to go to office hours or ask questions on Ed. ,No,,,,
3/28/2022 9:53:56,CS 271 - Computer Architecture & Assembly Language,4,0-5 hours,,WI 2022,Yes,CS 162 - Intro to Computer Science II,2,0-5 hours,,No,,,,
3/29/2022 5:58:12,CS 372 - Intro to Computer Networks,2,6-12 hours,"There is a lot of work assigned each week, but it's rarely complicated.  Read the assigned text first, as it will help the lectures make more sense.  The midterm and final are relatively straight-forward, as long as you practice all the example questions that they've given you along the way.  The wireshark labs are a bit tedious, but they do demonstrate the points made in the book and are an easy way to buffer your grade.

The programming assignments don't require particularly special programming skills, but rather an understanding of what you're being asked the replicate.  The skeleton code is frankly confusing and ugly, but I would still take it over doing the whole thing from scratch.  They've likely increased some of the instructions since others have taken the course, as I felt like it was very clear what they wanted me to do.  For example, at one point you are replicating Traceroute; rather than doing convoluted strategies, just focus on what occurs in a Traceroute program and code each of those blocks.  Besides, grading is lenient and you get late days to use.

While it was way more work than it needed to be, I thought it was an incredibly useful class and I'm really glad that I took it.  ",WI 2022,No,,,,,,,,,
3/29/2022 8:46:06,CS 161 - Intro to Computer Science I,1,0-5 hours,Stay on top of lectures and give yourself time to debug your code,SU 2021,Yes,MTH 231 - Elements of Discrete Mathematics,3,6-12 hours,Read the notes. Be active in discussions and visit office hours. I have an engineer background so I've gone through a lot of math. This course still took a lot of time for me to understand and get through the notes/assignments. Put in the time and effort and the material isn't too difficult. ,No,,,,
3/29/2022 8:51:09,CS 162 - Intro to Computer Science II,2,0-5 hours,"Very similar to 161 but a little more challenging. Still very light and manageable coursework. Learned a lot, didn't stress too much until the final project overlapped with the final project in another course. Overall easy A, light time commitment. ",FA 2021,Yes,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Be active in edstem, go to office hours EARLY. Don't wait on the projects because the difficulty ramps up sneakily and next thing you know it's the final, you have no idea what's happening, and the TAs are already flooded with other students so they don't have time to get to you. I enjoyed this course, but it was a challenge and took the majority of my time to complete. The professor is very accommodating, the TAs try to help their best. This course is a good ramp in difficultly compared to 161/162. Start early and ask questions for the projects. The exams are very hard, make time to study, then study more. Do the extra credit options to pad your exam scores.",No,,,,
3/29/2022 8:57:25,CS 261 - Data Structures,4,13-18 hours,"Start early as hell, be prepared to be irritated by arbitrary restrictions in your assignments. Hard work, and critical thought required but the pay off in completing the assignments is very rewarding. I learned a lot, I was stressed a lot.",WI 2022,Yes,CS 290 - Web Development,3,6-12 hours,"Read the notes and watch the videos. Assignment code is taken directly from what they give you, but you have to make alterations to complete assignment goals. Professors were active in office hours. Unofficial Discord was more helpful in my opinion. Completed the assignments fairly fast, getting through the notes was the hard part. Take notes and quiz yourself throughout the term since there is only a final that's cumulative, and weighted heavily on your final grade. Arbitrarily difficult based on just the final. Easy 100% on projects leading into the final. Many students dropped letter grades after the final.",No,,,,
4/26/2022 13:41:07,CS 475 - Intro to Parallel Programming,3,6-12 hours,"This class is excellent, probably the closest thing you will get to what actually feels like a class. Professor Bailey really cares about teaching, and you can see it in the effort that he puts in. This man teaches a live on-campus lecture for two hours, goes to his office to stream the same two hour lecture again, and then still hosts office hours after class. The material can be a little bit challenging, but highly rewarding if you get a strong comprehension of it.",SP 2022,Yes,CS 340 - Introduction to Databases,3,6-12 hours,"Group project class, find a teammate early, get a feel for a couple different people before selecting someone. Find someone you have synergy with, maybe someone with a couple hobbies in common, it would make the workflow smoother, since you can more easily bounce ideas between each other. 

The course material and assignment structure is good and forms a strong foundation for learning SQL and working with databases. You also have an opportunity to flex your creativity when it comes to designing and implementing the front end. I would recommend using Flask over Node, but this is a matter of preference. Flask is generally easier and cleaner to use, especially if you are more familiar with Python than JavaScript, which I assume is the case for a lot of people in the post-bacc program.",No,,,,
5/4/2022 11:35:10,CS 475 - Intro to Parallel Programming,2,6-12 hours,"Get some experience with C++ before coming in, and refresh your math knowledge! The professor is very kind, so ask questions when you're confused!",FA2022,Yes,CS 344 - Operating Systems,4,18+ hours,"Get experience in C and build a thick skin before coming in. Unless you are a full time student, do NOT take any other classes alongside this one. And even if you do, only take one lightweight course like 361. Do not take 340 alongside bc 340 is kind of demanding as well. 
The professor is a bit of a tightwad about the Academic Integrity policy, so DO NOT google anything relating to the general assignment (i.e. don't google ""how to build a shell in C"") and cite your sources when you do use a source (it's okay to look up things like how to parse a string or build a structure). Also, he's changing the assignments but not the materials, so wait if you can to take the class because it was a WRECK this semester. About a third of the class dropped iirc. Class average on the first assignment was a 70. 
The one good thing is that Professor Gambord is very accessible, but he gets frustrated easily. He's a VIM purist, but it's a mistake to try and use VIM unless you have any prior experience, so just use VSCode. 
Start as early as you can on the assignments and ask questions often and you should be okay. ",Yes,CS 340 - Introduction to Databases,2,6-12 hours,"A lot of work, but none of it is too hard. Be careful about who you pick to be your partner because you're stuck with them the entire term. The group project can be as easy or as complex as you want it to be, but I'd recommend staying on the easy side, since it's easy to become overly ambitious. Also, the TA's don't always know what they're talking about. "
5/18/2022 17:56:57,CS 271 - Computer Architecture & Assembly Language,5,13-18 hours,Start all projects early as possible. This class is a significant challenge with tons of traps to lose points quickly. ,SP 2022,Yes,CS 361 - Software Engineering I,1,0-5 hours,"Make an easy project and focus elsewhere. Great class but overall, not super important information until you have a job. ",No,,,,
5/23/2022 7:07:16,CS 161 - Intro to Computer Science I,1,0-5 hours,,FA 2021,Yes,CS 225 - Discrete Structures in Computer Science,4,13-18 hours,"Read the textbook. Don't bother with her videos. Invest in Chegg--not to copy answers but to see how things are solved. Don't be afraid to query the graders if you feel things were graded harshly or without justification. In my case, they did acquiesce & return points fairly frequently when I presented my case. ",No,,,,
5/23/2022 7:11:52,CS 271 - Computer Architecture & Assembly Language,4,18+ hours,"The first week's module will give you an absolute scare & a half. Please, trust me when I say that you're not meant to understand 90% of that first module that gives a high-level overview of computer architecture. Stick with the course until you get into the actual business of writing programs (Week 2-ish) & little by little, that first module will make more sense. I promise.",WI 2022,Yes,CS 162 - Intro to Computer Science II,3,13-18 hours,This is a tough one! The first 2 Object Oriented projects are a wake-up call from the assignments done in CS 161. It's certainly not an impossible course; just a significant step up in expectations from 161. ,No,,,,
5/24/2022 8:33:40,CS 261 - Data Structures,4,18+ hours,"If you work full time, you'll need to schedule tons of time outside of work for assignments which are 20+ pages long. Assignment 4 is terrible so get your grade up as best as possible before then. Check Gradescope grading. TA's are inconsistent with grading. One TA said the grade posted in GS is your final grade and that they will not grade your work if it doesn't pass the tests. On other assignments...TA's manually grade the work. There's no structure to grading and the rubrics are private and not publicized for students to understand how many points will be deducted.",WI 2022,No,,,,,,,,,
5/29/2022 16:03:11,CS 325 - Analysis of Algorithms,3,6-12 hours,,SP22,No,,,,,,,,,
6/3/2022 11:09:28,CS 361 - Software Engineering I,1,0-5 hours,"The assignments for this class are graded pretty leniently, but I wish I had picked a group that was planning on using web APIs for their microservices that would interface better with my web-based project. The microservice warmup is transferring data between text files and it seems that a lot of people opt to use text files for implementing their own microservice. Microservice planning happens after you create a minimum viable product for your project, but it would be good to communicate when selecting a group if you expect a web API for your microservice.",SP 2022,Yes,CS 372 - Intro to Computer Networks,3,13-18 hours,"This class was acceptable, but the course content was disappointing. If you are interested in Networking, the textbook is available online and provides all the information covered in the class. I personally felt that the programming assignments did not contribute to my understanding of networking concepts. The Wireshark labs are also available online. The weekly quizzes feel out of date because despite going through all of the readings and modules, there would still be questions that weren't covered. I think this is a subject that could be self taught if you are on the fence between this class and another elective. I personally wish that I had taken a different elective.",No,,,,
6/5/2022 9:29:18,CS 372 - Intro to Computer Networks,3,13-18 hours,"Be prepared to teach your self or find YouTube lectures.  The projects are painful due to a lack of instructional material, ambiguous requirements and poor starter code. The weekly quizzes are open book. The Packet tracer labs are time consuming due to having to take an annotated screen shot of every step.",SP 2022,Yes,CS 325 - Analysis of Algorithms,3,13-18 hours,The first few modules suck but it gets easier around week 3. The projects and weekly weren't to bad.,No,,,,
6/6/2022 13:07:08,CS 225 - Discrete Structures in Computer Science,3,13-18 hours,"Very time consuming class with lots of assignments due each week that can take quite awhile, agree w/ everyone that things ease up dramatically after week 6.  Definitely recommend a Chegg subscription to help you see how the problems are worked from the book, don't just copy and paste as you will need to still understand what is going on to be successful.  The TA's and professor are very active on the discussion boards.  Lowest quiz was dropped, this was evident on the grading page in Canvas but not officially announced til late in the semester.  The quizzes were much easier than the homework & discussion problems, however a lot of questions are multiple choice with no partial credit so you can still take a big hit to your grade if you miss one or two.  The first 2 were entirely multiple choice.  The good news is that the amount of work you are given in this class is really just forced study time so you are never too far off from being prepared for the quizzes depending on how fast you pick it up.  Worst part of the class was just the sheer volume of things that needed to be done each week, it really requires you to commit time almost every day, especially in weeks 1-6.  Stay ahead as much as possible.  All that being said I was dreading this class and I am currently positioned well for an A or A- heading into the final, so it can definitely be done!  Good luck!  ",SP 2022,No,,,,,,,,,
6/7/2022 10:45:11,CS 344 - Operating Systems,4,18+ hours,,SP 2022,No,,,,,,,,,
6/8/2022 14:07:00,CS 261 - Data Structures,4,18+ hours,"Modules weren’t super helpful, so I supplemented with Udemy data structure courses (Abdul Bari, Scott Barrett, Colt Steele) and YouTube (back to back SWE, CS dojo, etc). Assignments can be challenging, so start early and use office hours (can be hit or miss), but I felt like after doing the assignments, I had a decent understanding of the material. Watch out for grading- expectations are not clear, and during my quarter TAs would take off 100% points for not meeting time complexity requirements, which wasn’t communicated beforehand. Like many OSU classes, not a lot of feedback on assignments or guidance on best way to implement code (ie after the assignment is done), which is frustrating if you’re trying to learn/improve. ",SP 2022,No,,,,,,,,,
6/10/2022 7:00:29,CS 464 - Open Source Software,1,0-5 hours,Work on a project you are passionate about or use this course to learn new topics if you have the spare time. The course is easy to get an A in.,SP 2022,Yes,CS 475 - Intro to Parallel Programming,2,0-5 hours,Instructor was very helpful and kind. Assignments were modifying skeleton code and writing a lab report. Learn how to optimize this process on the early assignments.,No,,,,
6/10/2022 7:59:44,CS 340 - Introduction to Databases,2,0-5 hours,"If you took 290 right before this, you’re ready to tackle this abomination. The best thing about this course for me was the written flask guide made by a student some terms ago. The only prep I had was 290. Pick a good partner of course. The rubrics seems to be all over the place and sometimes can hurt you. Seems as if like many other classes ULA’s can be tough on your or not. We did everything asked and ended with almost 100%. You can be pretty much done with the course with 3 weeks to go if you get ahead of yourself. There was weekly quizzes for the first few weeks with unlimited attempts, which was useful since sometimes they would ask questions on information we for sure didn’t go over. Hopefully things get fixed eventually. But overall, not a great class as it is today. ",SP 2022,Yes,CS 325 - Analysis of Algorithms,3,6-12 hours,"Seems to have gotten nuked sometime in the past few terms. First couple of weeks and the 9th week are the most difficult as they include math and proofs. Everything in between will be as difficult as you let it be. They are basically leetcode problems you can find good resources for online. Also, you learn about time complexity and seems to be a focus in this class but your solutions that you run in gradescope don’t have time complexity requirements, so if it passes the test cases on gradescope, you get the points. The midterm and final seems fair and the professor runs help webinars we’re she answers your questions. Puts in the effort we see a lot of other professors fall flat with. ",No,,,,
6/10/2022 12:20:42,CS 361 - Software Engineering I,1,0-5 hours,"This class can be as challenging or as easy as you want. I chose easy since I was taking multiple classes.   There is a metric crap-ton of low effort, low value busy work.  The grading is lenient, and be lenient I mean my group went the entire quarter with the TA just copy and pasting the same comments and giving us 100 on everything. Other students had the same experience.

So I put in as much effort as the course deserved, which was the bare minimum. And finished with 102%.  TLDR; easy as crap, lot of separate busy work that is all easy, but adds up on the calendar.",SP 2022,Yes,CS 344 - Operating Systems,4,18+ hours,"This class is not impossible.  It does not hold your hand like every other required class in the program does.  If you start your projects two days before they're due, then good luck to you. If you start each project early you should be fine. I took this class with 361 and 362 with FT work, always started projects within 2 days of them opening. I promise it is manageable, the modules themselves were light so while the project hours below look scary, that was 99% of the class.  No midterm or quizzes, and the final was open book / open internet.

We only had 5 projects (professor dropped Rust project). Hours spent on projects breakdown: P1: ~30 hours, P2: ~35 hours, P3 (smallsh): ~55 hours, P4: ~14 hours, P5: ~30 hours.

Gambord was the instructor and he was 10/10. Down to earth, very accessible, and reasonable grader / regrader. You can do this.",Yes,CS 362 - Software Engineering II,1,0-5 hours,"The class itself is easy. But the professor (Ianni) is an unnecessarily strict grader and god forbid if you need a regrade.  Try and pay attention as best as you can to the rubric, his announcements, etc....and then still expect to randomly lose some points here or there for some asinine reason that wasn't in the rubric.  Class has a low amount of points available so if there's any extra credit available, do it to give you a buffer for when that happens."
6/10/2022 13:54:19,CS 344 - Operating Systems,4,6-12 hours,"Be prepared to read outside course material (man pages, c documentations, etc.)",SP 2022,Yes,CS 362 - Software Engineering II,3,0-5 hours,"Depends on the instructor, but follow the assignment requirements and instruction to a tee. Sometimes they throw a hidden grading requirement and regrade can require extra convincing.",No,,,,
6/11/2022 15:11:35,CS 261 - Data Structures,3,6-12 hours,"This class has covers lots of very important CS topics. The teaching is ok, but thankfully there are MANY online resources that explain the material very well.

There are lots of great YouTubers explaining each concept. William Fiset (https://www.youtube.com/channel/UCD8yeTczadqdARzQUp29PJw) has lots of videos with nice visuals. While the material can feel intimidating, it’s not as complicated as it first seems. I think watching YouTube videos on each topic before reading the explorations is the way to go, since many people had trouble following the explorations, but they made sense once you already had a head start on the material (which maybe isn’t a ringing endorsement of the course materials).

Don’t rely too heavily on the pseudocode provided in the explorations. First off, it doesn’t cover every little thing your code will need to do, so you’ll have issues if rely to heavily on it. Secondly, you’ll understand the material better if you build it more from scratch.

Good luck!",SP 2022,Yes,CS 290 - Web Development,4,6-12 hours,"This class kinda sucked. It covered way too much material to be able to understand what was actually going on. There was tons of hand-wavy stuff where you would just code along with the professor in the video, but it was not explained what each word/method/function actually did and how it worked. The professor was friendly enough, and the materials were decently written. But still kind of a shitty class. Though I got almost 100% (pre-final), I still have no idea how to build a website and would barely know where to start.",No,,,,
6/12/2022 10:03:26,CS 290 - Web Development,3,6-12 hours,"Material absorption is by far the hardest thing in this course. There is a lot of material to go through and the course doesn't even cover it all. Expect to spend a lot of time reading, espcially if you hope to pass the final with an A. If I could change one this about this class I would make the Final worth 15% and distribute the difference among the various assignments. ",Spring 2022,Yes,CS 261 - Data Structures,4,18+ hours,"I wanted to be really harsh on this class when I was in it. Reaching the end has cooled me down. Get ready to spend a lot of time on assignments. The assignment topics are good, the level of difficulty is high, the tests are fair, the learning material and TAs are near worthless. There were some old video lectures on here near the end that I thought were helpful, the rest of my learning came from Abdul Bari. Expect to get help from outside resources and peers in chat forums when going through this course. Key tips: 1.) Week 1's Python Fundamentals is NOT Python Fundamentals. Treat it like it's worth 30% of your grade. 2.) Assignments are 20 pages long. Each assignment is comparable to doing everything in CS 162 -- in a week. 3.) Requirements are tedious, GradeScope tests are thorough, code performance expectations are strict. Working code with a single requirements violation can drop your final grade by 1-5%. When people say start early, they mean start the day it opens. Learn the subject material 2 days before the assignment becomes available. 4.) If you work, I would consider taking this course by itself.",No,,,,
6/13/2022 17:10:16,CS 261 - Data Structures,3,6-12 hours,"Read the assignment documents thoroughly. Yes, they're long, but they have a lot of good information in them. Watch the video the instructor puts up for each assignment. Personally, I did not need to go outside of the modules/required reading in order to successfully complete this class with an A, but make sure you do all the required reading linked on the first page of each module (some book chapters, etc.). The midterm and final were difficult but fair.",SP 2022,Yes,CS 290 - Web Development,2,0-5 hours,"Treat this as a survey course. You are going to get a brief introduction to web dev, you are not going to finish the course knowing how to completely code your own website from scratch. Follow the video walkthroughs and project specs very carefully. Make sure you keep tabs on Ed for updates/clarification about project specs.",No,,,,
6/14/2022 8:47:04,CS 475 - Intro to Parallel Programming,2,6-12 hours,"The class is not particularly difficult or time consuming. As long as you keep up with the course material and lectures, and pay attention to the helpful tips/tricks provided in the project notes, you should have no problem getting an A.

 The coding you will do in this class is disappointingly light. The professor (while an all-around great professor and one of the best you'll come across in the post-bacc online program) provides way too much skeleton code for the assignments. If you were hoping to improve your coding skills, this is not the course for that. The primary focus of this course is to test and demonstrate the computing speed-ups that various forms of parallel computing have to offer. You will need to understand each of these assignments conceptually to complete what is missing in the skeleton code. Usually, there are plenty of hints in the lecture and assignment notes to point you in the right direction. 

Despite the easy difficulty and lack of actual coding, the class is definitely worth taking and one the best electives you can choose in this program. Parallel programming is an area of computer science that is relevant and will remain relevant in the foreseeable future. Having knowledge of it will be useful to you. Also, if you have any interest in computer graphics, video game development, or scientific computing this course serves as a brief introduction to GPU parallelism. You will work with both CUDA and OpenCL/OpenGL. And although not required, having your own discrete NVidia GPU is a plus.",SP 2022,Yes,CS 493 - Cloud Application Development,3,13-18 hours,"From a conceptual and technical standpoint, this class is not too difficult. While completing assignments, around 50% of your time will be spent creating/editing documentation which can seem extremely tedious at times. 

This course is definitely one of the more useful electives offered in this program. Companies continue to shift towards relying 3rd party cloud services (IaaS, PaaS, FaaS) for implementing and maintaining their back end, and most of the big tech companies now offer their own suites of cloud services (Google Cloud Platform, Microsoft Azure, Amazon Web Services, etc). So it should go without saying that this is a very useful skillset to have. 

In the course, you will mainly working with the Google Cloud Platform. You will develop various APIs and deploy them to GCP, setup your own virtual machine via Google Compute Engine, store and retrieve data on Google Datastore. You will, also, gain some exposure to using Docker, and performing user authentication and authorization via Auth0 and Google OAuth 2.0.",No,,,,
6/14/2022 10:06:28,CS 261 - Data Structures,3,6-12 hours,,SP 2022,Yes,CS 290 - Web Development,3,6-12 hours,,No,,,,
6/14/2022 16:24:53,CS 372 - Intro to Computer Networks,4,13-18 hours,"The class definitely is a decent amount of work, between the weekly readings, quizzes, and homeworks. The final projects (Traceroute and RDT) seem difficult when you first go through them (the project pages take a good amount of time to digest), but looking back they aren't nearly as bad as I had been told they were. Overall, this class is filled with information that is fundamental to nearly everything we do in modern day, but I hit a point where my brain would throw out old info to make room for new. Tests are open note, so take really take diligent notes during the readings and you'll have zero issue getting a passing grade.",SP 2022,Yes,CS 475 - Intro to Parallel Programming,1,0-5 hours,"Everyone says it and I'll say it again, Professor Bailey is an s tier professor. Charming, approachable, and absurdly knowledgeable in his field. Each project starts with boilerplate code, and the comments make it pretty clear what you're supposed to do and why. Bailey has his own website which I wasn't a fan of at first (leaving canvas felt like an extra step), but having finished the course I totally get it. The grading for this course seemed pretty harsh at the start, but not having any weighting to quizzes/projects/tests + fairly lenient grading means you can get an A by putting in the bare minimum effort. If you're coming into this class, have a base competency in C/C++, compiling on OSU's different servers (os#, rabbit), and creating graphs in google sheets (this usually took me longer than the projects themselves lol) ",No,,,,
6/15/2022 14:23:16,CS 162 - Intro to Computer Science II,3,0-5 hours,"Start assignments early, learn Python basics.",SP 2022,No,,,,,,,,,
6/18/2022 19:27:19,CS 290 - Web Development,2,6-12 hours,"This class is interesting in that you are introduced to a lot of new concepts (Javascript, node.js, react.js, mongoDB) and most of the project information/code is given to you to follow along with. It is up to you as the learner to decide what you want to do with it. If you simply code along with the provided videos, you will end the course feeling like you didn't learn anything (because, you know, you didn't actually put in the time to learn anything... surprise!) 
Take the time to actually UNDERSTAND what you are doing when you are working on projects. My advice is to watch the videos and then try to do the projects on your own afterwards. Refer back to the materials when you get stuck. Within the explorations, you are provided a lot of links to documentation, which you can review to deepen your understanding as well. People do poorly on the final (which is not difficult by any means) because they never took the time to understand concepts. Put in the work and you will do well in this course and leave with a strong understanding of how to create basic web applications.",SP 2022,Yes,CS 261 - Data Structures,1,6-12 hours,"This class is pretty straight forward. All of your learning will be done be completing long projects. The explorations are short and to the point and adequately prepare you for said assignments. 
If you did well in 162, this class should be easy. Be sure to start the assignments early and DON'T use the provided pseudocode in the explorations. They are far more confusing than helpful and will rob you of a the chance to solve the problems on your own (which is a profoundly valuable skill to hone while you are a student).",No,,,,
6/20/2022 10:13:03,CS 271 - Computer Architecture & Assembly Language,3,6-12 hours,"Do extra credits for projects 1-4. Attempt extra credit for project 5 if you aren't swamped with other stuff. Extra credits are a good buffer for the midterm and final (especially the final, which imo, was much more difficult than the midterm). The modules were very, very well done, so I didn't reference any outside resources during the course. To study for the midterm and final I reviewed the modules and redid the module summary exercises and quizzes. The material is esoteric, but the professor is very helpful and the course is taught well, so getting an A is an attainable goal",SP 2022,Yes,CS 162 - Intro to Computer Science II,1,0-5 hours,"Assignments 2 and 3 are heavily focused on OOP and have given previous students trouble, so brush up on OOP if you find yourself struggling. Our final project was a watered-down version of Monopoly, and I found this much easier than assignments 2 and 3. Overall, a very easy class.",No,,,,
